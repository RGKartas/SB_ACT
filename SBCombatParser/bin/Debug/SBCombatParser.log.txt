InitPlugin :: InitPlugin !!!!
InitPlugin :: Version  :: 0.0.6.14
InitPlugin :: DateTime :: 11/5/2023 04:48:34 AM
ParseLine :: (04:48:47) CLC LogFile Start :: .\LogFiles\Input\Combat1.log.txt
.ctor :: (04:48:47) CLC LogFile Start :: .\LogFiles\Input\Combat1.log.txt
.ctor :: RegEx Match :: (04:48:47) CLC LogFile Start :: .\LogFiles\Input\Combat1.log.txt
.ctor :: LogFile Action :: Changing Zone to .\LogFiles\Input\Combat1.log.txt
.ctor :: RegEx Match :: Valid      = False
.ctor :: RegEx Match :: Time       = 04:48:47
.ctor :: RegEx Match :: Source     = CLC
.ctor :: RegEx Match :: Ability    = 
.ctor :: RegEx Match :: Target     = 
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = LogFile
.ctor :: RegEx Match :: Event_Type = Start
.ctor :: RegEx Match :: Event_Deta = .\LogFiles\Input\Combat1.log.txt
.ctor :: RegEx Match :: RegExIndx  = 0
.ctor :: RegEx Match :: RegExDesc  = CLC Event :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>CLC) (?<type>.*) (?<event_type>.*) \:\: (?<event_detail>.*)
ParseLine :: (04:48:47) MalzPL casts Prayer of Mending.
.ctor :: (04:48:47) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:47) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:47
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:47
ParseLine :: AddCombatAction :: Time_Sorter= 4
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:47) MalzPL's Prayer of Mending heals MalzPL for 810 points.
.ctor :: (04:48:47) MalzPL's Prayer of Mending heals MalzPL for 810 points.
.ctor :: RegEx Match :: (04:48:47) MalzPL's Prayer of Mending heals MalzPL for 810 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:47
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 810
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 810
ParseLine :: AddCombatAction :: Time       = 04:48:47
ParseLine :: AddCombatAction :: Time_Sorter= 6
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:47) MalzPL's Prayer of Mending heals you for 834 points.
.ctor :: (04:48:47) MalzPL's Prayer of Mending heals you for 834 points.
.ctor :: RegEx Match :: (04:48:47) MalzPL's Prayer of Mending heals you for 834 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:47
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 834
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 834
ParseLine :: AddCombatAction :: Time       = 04:48:47
ParseLine :: AddCombatAction :: Time_Sorter= 8
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:47) MalzPL's Prayer of Mending heals MalzSent for 529 points.
.ctor :: (04:48:47) MalzPL's Prayer of Mending heals MalzSent for 529 points.
.ctor :: RegEx Match :: (04:48:47) MalzPL's Prayer of Mending heals MalzSent for 529 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:47
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 529
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 529
ParseLine :: AddCombatAction :: Time       = 04:48:47
ParseLine :: AddCombatAction :: Time_Sorter= 10
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:47) MalzPL's Prayer of Mending heals MalzDruid for 604 points.
.ctor :: (04:48:47) MalzPL's Prayer of Mending heals MalzDruid for 604 points.
.ctor :: RegEx Match :: (04:48:47) MalzPL's Prayer of Mending heals MalzDruid for 604 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:47
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 604
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 604
ParseLine :: AddCombatAction :: Time       = 04:48:47
ParseLine :: AddCombatAction :: Time_Sorter= 12
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:47) MalzDruid casts Prayer of Mending.
.ctor :: (04:48:47) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:47) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:47
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:47
ParseLine :: AddCombatAction :: Time_Sorter= 14
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:47) MalzDruid's Prayer of Mending heals MalzPL for 617 points.
.ctor :: (04:48:47) MalzDruid's Prayer of Mending heals MalzPL for 617 points.
.ctor :: RegEx Match :: (04:48:47) MalzDruid's Prayer of Mending heals MalzPL for 617 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:47
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 617
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 617
ParseLine :: AddCombatAction :: Time       = 04:48:47
ParseLine :: AddCombatAction :: Time_Sorter= 16
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:47) MalzDruid's Prayer of Mending heals you for 519 points.
.ctor :: (04:48:47) MalzDruid's Prayer of Mending heals you for 519 points.
.ctor :: RegEx Match :: (04:48:47) MalzDruid's Prayer of Mending heals you for 519 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:47
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 519
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 519
ParseLine :: AddCombatAction :: Time       = 04:48:47
ParseLine :: AddCombatAction :: Time_Sorter= 18
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:47) MalzDruid's Prayer of Mending heals MalzSent for 610 points.
.ctor :: (04:48:47) MalzDruid's Prayer of Mending heals MalzSent for 610 points.
.ctor :: RegEx Match :: (04:48:47) MalzDruid's Prayer of Mending heals MalzSent for 610 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:47
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 610
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 610
ParseLine :: AddCombatAction :: Time       = 04:48:47
ParseLine :: AddCombatAction :: Time_Sorter= 20
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:47) MalzDruid's Prayer of Mending heals MalzDruid for 527 points.
.ctor :: (04:48:47) MalzDruid's Prayer of Mending heals MalzDruid for 527 points.
.ctor :: RegEx Match :: (04:48:47) MalzDruid's Prayer of Mending heals MalzDruid for 527 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:47
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 527
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 527
ParseLine :: AddCombatAction :: Time       = 04:48:47
ParseLine :: AddCombatAction :: Time_Sorter= 22
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:47) MalzPL casts Prayer of Mending.
.ctor :: (04:48:47) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:47) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:47
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:47
ParseLine :: AddCombatAction :: Time_Sorter= 24
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:47) MalzPL's Prayer of Mending heals MalzPL for 648 points.
.ctor :: (04:48:47) MalzPL's Prayer of Mending heals MalzPL for 648 points.
.ctor :: RegEx Match :: (04:48:47) MalzPL's Prayer of Mending heals MalzPL for 648 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:47
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 648
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 648
ParseLine :: AddCombatAction :: Time       = 04:48:47
ParseLine :: AddCombatAction :: Time_Sorter= 26
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:47) MalzPL's Prayer of Mending heals MalzSent for 442 points.
.ctor :: (04:48:47) MalzPL's Prayer of Mending heals MalzSent for 442 points.
.ctor :: RegEx Match :: (04:48:47) MalzPL's Prayer of Mending heals MalzSent for 442 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:47
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 442
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 442
ParseLine :: AddCombatAction :: Time       = 04:48:47
ParseLine :: AddCombatAction :: Time_Sorter= 28
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:47) MalzPL's Prayer of Mending heals MalzDruid for 588 points.
.ctor :: (04:48:47) MalzPL's Prayer of Mending heals MalzDruid for 588 points.
.ctor :: RegEx Match :: (04:48:47) MalzPL's Prayer of Mending heals MalzDruid for 588 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:47
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 588
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 588
ParseLine :: AddCombatAction :: Time       = 04:48:47
ParseLine :: AddCombatAction :: Time_Sorter= 30
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:47) The Moss Ogre misses YOU!
.ctor :: (04:48:47) The Moss Ogre misses YOU!
.ctor :: RegEx Match :: (04:48:47) The Moss Ogre misses YOU!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:47
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = YOU
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:47
ParseLine :: AddCombatAction :: Time_Sorter= 32
ParseLine :: AddCombatAction :: Target     = YOU
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:48:47) MalzDruid casts Prayer of Mending.
.ctor :: (04:48:47) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:47) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:47
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:47
ParseLine :: AddCombatAction :: Time_Sorter= 34
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:47) MalzDruid's Prayer of Mending heals MalzPL for 550 points.
.ctor :: (04:48:47) MalzDruid's Prayer of Mending heals MalzPL for 550 points.
.ctor :: RegEx Match :: (04:48:47) MalzDruid's Prayer of Mending heals MalzPL for 550 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:47
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 550
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 550
ParseLine :: AddCombatAction :: Time       = 04:48:47
ParseLine :: AddCombatAction :: Time_Sorter= 36
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:47) MalzDruid's Prayer of Mending heals MalzSent for 487 points.
.ctor :: (04:48:47) MalzDruid's Prayer of Mending heals MalzSent for 487 points.
.ctor :: RegEx Match :: (04:48:47) MalzDruid's Prayer of Mending heals MalzSent for 487 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:47
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 487
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 487
ParseLine :: AddCombatAction :: Time       = 04:48:47
ParseLine :: AddCombatAction :: Time_Sorter= 38
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:47) MalzDruid's Prayer of Mending heals MalzDruid for 552 points.
.ctor :: (04:48:47) MalzDruid's Prayer of Mending heals MalzDruid for 552 points.
.ctor :: RegEx Match :: (04:48:47) MalzDruid's Prayer of Mending heals MalzDruid for 552 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:47
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 552
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 552
ParseLine :: AddCombatAction :: Time       = 04:48:47
ParseLine :: AddCombatAction :: Time_Sorter= 40
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:47) MalzPL casts Earthquake.
.ctor :: (04:48:47) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:48:47) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:47
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:47
ParseLine :: AddCombatAction :: Time_Sorter= 42
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:47) MalzPL's Earthquake hurts Moss Ogre for 757 points of damage.
.ctor :: (04:48:47) MalzPL's Earthquake hurts Moss Ogre for 757 points of damage.
.ctor :: RegEx Match :: (04:48:47) MalzPL's Earthquake hurts Moss Ogre for 757 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:47
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 757
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 757
ParseLine :: AddCombatAction :: Time       = 04:48:47
ParseLine :: AddCombatAction :: Time_Sorter= 44
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:48) MalzPL casts Earthquake.
.ctor :: (04:48:48) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:48:48) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 46
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:48) MalzDruid casts Earthquake.
.ctor :: (04:48:48) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:48:48) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 48
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:48) MalzDruid's Earthquake hurts Moss Ogre for 883 points of damage.
.ctor :: (04:48:48) MalzDruid's Earthquake hurts Moss Ogre for 883 points of damage.
.ctor :: RegEx Match :: (04:48:48) MalzDruid's Earthquake hurts Moss Ogre for 883 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 883
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 883
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 50
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:48) MalzDruid casts Earthquake.
.ctor :: (04:48:48) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:48:48) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 52
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:48) MalzDruid casts Earthquake.
.ctor :: (04:48:48) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:48:48) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 54
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:48) MalzDruid's Earthquake hurts Moss Ogre for 1578 points of damage.
.ctor :: (04:48:48) MalzDruid's Earthquake hurts Moss Ogre for 1578 points of damage.
.ctor :: RegEx Match :: (04:48:48) MalzDruid's Earthquake hurts Moss Ogre for 1578 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1578
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1578
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 56
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:48) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:48:48) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:48:48) MalzPL casts Call Lightning.
.ctor :: (04:48:48) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:48:48) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 60
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:48) MalzPL casts Call Lightning.
.ctor :: (04:48:48) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:48:48) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 62
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:48) MalzPL's Call Lightning shocks Moss Ogre for 659 points of damage!
.ctor :: (04:48:48) MalzPL's Call Lightning shocks Moss Ogre for 659 points of damage!
.ctor :: RegEx Match :: (04:48:48) MalzPL's Call Lightning shocks Moss Ogre for 659 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 659
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 659
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 64
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:48:48) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:48:48) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:48:48) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 66
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:48:48) The Moss Ogre misses MalzPL.
.ctor :: (04:48:48) The Moss Ogre misses MalzPL.
.ctor :: RegEx Match :: (04:48:48) The Moss Ogre misses MalzPL.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 68
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:48:48) MalzPL hits the Moss Ogre for 28 points of damage.
.ctor :: (04:48:48) MalzPL hits the Moss Ogre for 28 points of damage.
.ctor :: RegEx Match :: (04:48:48) MalzPL hits the Moss Ogre for 28 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 28
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 28
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 70
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:48) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:48:48) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:48:48) MalzDruid casts Call Lightning.
.ctor :: (04:48:48) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:48:48) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 74
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:48) MalzDruid casts Call Lightning.
.ctor :: (04:48:48) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:48:48) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 76
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:48) MalzDruid's Call Lightning shocks Moss Ogre for 836 points of damage!
.ctor :: (04:48:48) MalzDruid's Call Lightning shocks Moss Ogre for 836 points of damage!
.ctor :: RegEx Match :: (04:48:48) MalzDruid's Call Lightning shocks Moss Ogre for 836 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 836
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 836
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 78
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:48:48) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:48:48) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:48:48) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 80
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:48:48) Vorok Mud-Chief casts Flesh of Granite.
.ctor :: (04:48:48) Vorok Mud-Chief casts Flesh of Granite.
.ctor :: RegEx Match :: (04:48:48) Vorok Mud-Chief casts Flesh of Granite.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = Vorok Mud-Chief
.ctor :: RegEx Match :: Ability    = Flesh of Granite
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Ability    = Flesh of Granite
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 82
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:48) Vorok Mud-Chief's flesh becomes as hard as granite!
.ctor :: (04:48:48) Vorok Mud-Chief's flesh becomes as hard as granite!
ParseLine :: (04:48:48) MalzPL casts Prayer of Mending.
.ctor :: (04:48:48) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:48) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 86
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:48) MalzPL's Prayer of Mending heals MalzPL for 479 points.
.ctor :: (04:48:48) MalzPL's Prayer of Mending heals MalzPL for 479 points.
.ctor :: RegEx Match :: (04:48:48) MalzPL's Prayer of Mending heals MalzPL for 479 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 479
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 479
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 88
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:48) MalzPL's Prayer of Mending heals MalzSent for 582 points.
.ctor :: (04:48:48) MalzPL's Prayer of Mending heals MalzSent for 582 points.
.ctor :: RegEx Match :: (04:48:48) MalzPL's Prayer of Mending heals MalzSent for 582 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 582
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 582
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 90
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:48) MalzPL's Prayer of Mending heals MalzDruid for 438 points.
.ctor :: (04:48:48) MalzPL's Prayer of Mending heals MalzDruid for 438 points.
.ctor :: RegEx Match :: (04:48:48) MalzPL's Prayer of Mending heals MalzDruid for 438 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 438
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 438
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 92
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:48) You parry the Vorok Mud-Chief's attack!
.ctor :: (04:48:48) You parry the Vorok Mud-Chief's attack!
.ctor :: RegEx Match :: (04:48:48) You parry the Vorok Mud-Chief's attack!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = Vorok Mud-Chief
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = You
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = parry
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 17
.ctor :: RegEx Match :: RegExDesc  = Parry :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>parr)[yies]+ (?<source>.*)'s .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 94
ParseLine :: AddCombatAction :: Target     = You
ParseLine :: AddCombatAction :: Value_Type = parry
ParseLine :: (04:48:48) MalzDruid casts Prayer of Mending.
.ctor :: (04:48:48) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:48) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 96
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:48) MalzDruid's Prayer of Mending heals MalzPL for 774 points.
.ctor :: (04:48:48) MalzDruid's Prayer of Mending heals MalzPL for 774 points.
.ctor :: RegEx Match :: (04:48:48) MalzDruid's Prayer of Mending heals MalzPL for 774 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 774
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 774
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 98
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:48) MalzDruid's Prayer of Mending heals MalzSent for 333 points.
.ctor :: (04:48:48) MalzDruid's Prayer of Mending heals MalzSent for 333 points.
.ctor :: RegEx Match :: (04:48:48) MalzDruid's Prayer of Mending heals MalzSent for 333 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 333
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 333
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 100
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:48) MalzDruid's Prayer of Mending heals MalzDruid for 637 points.
.ctor :: (04:48:48) MalzDruid's Prayer of Mending heals MalzDruid for 637 points.
.ctor :: RegEx Match :: (04:48:48) MalzDruid's Prayer of Mending heals MalzDruid for 637 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 637
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 637
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 102
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:48) The Tavok Chief-brother misses YOU!
.ctor :: (04:48:48) The Tavok Chief-brother misses YOU!
.ctor :: RegEx Match :: (04:48:48) The Tavok Chief-brother misses YOU!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = Tavok Chief-brother
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = YOU
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 104
ParseLine :: AddCombatAction :: Target     = YOU
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:48:48) Vorok Mud-Chief casts Earthquake.
.ctor :: (04:48:48) Vorok Mud-Chief casts Earthquake.
.ctor :: RegEx Match :: (04:48:48) Vorok Mud-Chief casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = Vorok Mud-Chief
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 106
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:48) Vorok Mud-Chief's Earthquake hurts you for 341 points of damage.
.ctor :: (04:48:48) Vorok Mud-Chief's Earthquake hurts you for 341 points of damage.
.ctor :: RegEx Match :: (04:48:48) Vorok Mud-Chief's Earthquake hurts you for 341 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = Vorok Mud-Chief
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 341
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 341
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 108
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:48) Tavok Chief-brother casts Mantle of Stone.
.ctor :: (04:48:48) Tavok Chief-brother casts Mantle of Stone.
.ctor :: RegEx Match :: (04:48:48) Tavok Chief-brother casts Mantle of Stone.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = Tavok Chief-brother
.ctor :: RegEx Match :: Ability    = Mantle of Stone
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Ability    = Mantle of Stone
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 110
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:48) Tavok Chief-brother feels warded from harm.
.ctor :: (04:48:48) Tavok Chief-brother feels warded from harm.
ParseLine :: (04:48:48) MalzDruid casts Call Lightning.
.ctor :: (04:48:48) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:48:48) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 114
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:48) MalzDruid casts Call Lightning.
.ctor :: (04:48:48) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:48:48) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 116
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:48) Mud Ogre is stunned!
.ctor :: (04:48:48) Mud Ogre is stunned!
ParseLine :: (04:48:48) MalzDruid casts Call Lightning.
.ctor :: (04:48:48) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:48:48) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 120
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:48) Vorok Mud-Chief is stunned!
.ctor :: (04:48:48) Vorok Mud-Chief is stunned!
ParseLine :: (04:48:48) MalzSent casts Holy Word of Binding.
.ctor :: (04:48:48) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:48:48) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 124
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:48) MalzSent casts Holy Word of Binding.
.ctor :: (04:48:48) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:48:48) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 126
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:48) MalzSent hits the Mud Ogre for 184 points of damage.
.ctor :: (04:48:48) MalzSent hits the Mud Ogre for 184 points of damage.
.ctor :: RegEx Match :: (04:48:48) MalzSent hits the Mud Ogre for 184 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 184
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 184
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 128
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:48) MalzDruid's Call Lightning shocks Mud Ogre for 984 points of damage!
.ctor :: (04:48:48) MalzDruid's Call Lightning shocks Mud Ogre for 984 points of damage!
.ctor :: RegEx Match :: (04:48:48) MalzDruid's Call Lightning shocks Mud Ogre for 984 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 984
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 984
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 130
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:48:48) MalzDruid's Call Lightning shocks Vorok Mud-Chief for 772 points of damage!
.ctor :: (04:48:48) MalzDruid's Call Lightning shocks Vorok Mud-Chief for 772 points of damage!
.ctor :: RegEx Match :: (04:48:48) MalzDruid's Call Lightning shocks Vorok Mud-Chief for 772 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 772
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 772
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 132
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:48:48) MalzSent hits the Mud Ogre for 139 points of damage.
.ctor :: (04:48:48) MalzSent hits the Mud Ogre for 139 points of damage.
.ctor :: RegEx Match :: (04:48:48) MalzSent hits the Mud Ogre for 139 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 139
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 139
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 134
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:48) MalzPL casts Prayer of Mending.
.ctor :: (04:48:48) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:48) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 136
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:48) MalzPL's Prayer of Mending heals MalzPL for 592 points.
.ctor :: (04:48:48) MalzPL's Prayer of Mending heals MalzPL for 592 points.
.ctor :: RegEx Match :: (04:48:48) MalzPL's Prayer of Mending heals MalzPL for 592 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 592
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 592
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 138
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:48) MalzPL's Prayer of Mending heals you for 630 points.
.ctor :: (04:48:48) MalzPL's Prayer of Mending heals you for 630 points.
.ctor :: RegEx Match :: (04:48:48) MalzPL's Prayer of Mending heals you for 630 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 630
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 630
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 140
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:48) Mud Ogre is no longer stunned.
.ctor :: (04:48:48) Mud Ogre is no longer stunned.
ParseLine :: (04:48:48) Vorok Mud-Chief is no longer stunned.
.ctor :: (04:48:48) Vorok Mud-Chief is no longer stunned.
ParseLine :: (04:48:48) MalzPL's Prayer of Mending heals MalzSent for 556 points.
.ctor :: (04:48:48) MalzPL's Prayer of Mending heals MalzSent for 556 points.
.ctor :: RegEx Match :: (04:48:48) MalzPL's Prayer of Mending heals MalzSent for 556 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 556
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 556
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 146
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:48) MalzPL's Prayer of Mending heals MalzDruid for 531 points.
.ctor :: (04:48:48) MalzPL's Prayer of Mending heals MalzDruid for 531 points.
.ctor :: RegEx Match :: (04:48:48) MalzPL's Prayer of Mending heals MalzDruid for 531 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 531
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 531
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 148
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:48) The Tavok Chief-brother misses MalzPL.
.ctor :: (04:48:48) The Tavok Chief-brother misses MalzPL.
.ctor :: RegEx Match :: (04:48:48) The Tavok Chief-brother misses MalzPL.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = Tavok Chief-brother
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 150
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:48:48) MalzPL hits the Tavok Chief-brother for 35 points of damage.
.ctor :: (04:48:48) MalzPL hits the Tavok Chief-brother for 35 points of damage.
.ctor :: RegEx Match :: (04:48:48) MalzPL hits the Tavok Chief-brother for 35 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 35
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 35
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 152
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:48) The Vorok Mud-Chief misses MalzPL.
.ctor :: (04:48:48) The Vorok Mud-Chief misses MalzPL.
.ctor :: RegEx Match :: (04:48:48) The Vorok Mud-Chief misses MalzPL.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = Vorok Mud-Chief
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 154
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:48:48) MalzSent casts Righteous Word of Binding.
.ctor :: (04:48:48) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:48:48) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 156
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:48) MalzSent's Righteous Word of Binding smites Tavok Chief-brother for 333 points of damage!
.ctor :: (04:48:48) MalzSent's Righteous Word of Binding smites Tavok Chief-brother for 333 points of damage!
.ctor :: RegEx Match :: (04:48:48) MalzSent's Righteous Word of Binding smites Tavok Chief-brother for 333 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 333
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 333
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 158
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:48:48) MalzSent casts Righteous Word of Binding.
.ctor :: (04:48:48) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:48:48) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 160
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:48) MalzSent casts Righteous Word of Binding.
.ctor :: (04:48:48) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:48:48) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 162
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:48) MalzSent's Righteous Word of Binding smites Mud Ogre for 715 points of damage!
.ctor :: (04:48:48) MalzSent's Righteous Word of Binding smites Mud Ogre for 715 points of damage!
.ctor :: RegEx Match :: (04:48:48) MalzSent's Righteous Word of Binding smites Mud Ogre for 715 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 715
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 715
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 164
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:48:48) MalzSent casts Righteous Word of Binding.
.ctor :: (04:48:48) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:48:48) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 166
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:48) MalzSent's Righteous Word of Binding smites Vorok Mud-Chief for 1158 points of damage!
.ctor :: (04:48:48) MalzSent's Righteous Word of Binding smites Vorok Mud-Chief for 1158 points of damage!
.ctor :: RegEx Match :: (04:48:48) MalzSent's Righteous Word of Binding smites Vorok Mud-Chief for 1158 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:48
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 1158
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 1158
ParseLine :: AddCombatAction :: Time       = 04:48:48
ParseLine :: AddCombatAction :: Time_Sorter= 168
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:48:48) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:48:48) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:48:48) Mud Ogre no longer feels as vulnerable to holy magic.
.ctor :: (04:48:48) Mud Ogre no longer feels as vulnerable to holy magic.
ParseLine :: (04:48:49) Mud Ogre's stun immunity has worn off.
.ctor :: (04:48:49) Mud Ogre's stun immunity has worn off.
ParseLine :: (04:48:49) MalzSent hits the Mud Ogre for 206 points of damage.
.ctor :: (04:48:49) MalzSent hits the Mud Ogre for 206 points of damage.
.ctor :: RegEx Match :: (04:48:49) MalzSent hits the Mud Ogre for 206 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 206
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 206
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 176
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:49) [Combat] Info: The Mud Ogre has died!
.ctor :: (04:48:49) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: (04:48:49) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 178
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:48:49) MalzPL hits the Tavok Chief-brother for 20 points of damage.
.ctor :: (04:48:49) MalzPL hits the Tavok Chief-brother for 20 points of damage.
.ctor :: RegEx Match :: (04:48:49) MalzPL hits the Tavok Chief-brother for 20 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 20
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 20
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 180
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:49) MalzDruid casts Prayer of Mending.
.ctor :: (04:48:49) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:49) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 182
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:49) MalzDruid's Prayer of Mending heals MalzPL for 689 points.
.ctor :: (04:48:49) MalzDruid's Prayer of Mending heals MalzPL for 689 points.
.ctor :: RegEx Match :: (04:48:49) MalzDruid's Prayer of Mending heals MalzPL for 689 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 689
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 689
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 184
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:49) MalzDruid's Prayer of Mending heals you for 464 points.
.ctor :: (04:48:49) MalzDruid's Prayer of Mending heals you for 464 points.
.ctor :: RegEx Match :: (04:48:49) MalzDruid's Prayer of Mending heals you for 464 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 464
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 464
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 186
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:49) MalzDruid's Prayer of Mending heals MalzSent for 495 points.
.ctor :: (04:48:49) MalzDruid's Prayer of Mending heals MalzSent for 495 points.
.ctor :: RegEx Match :: (04:48:49) MalzDruid's Prayer of Mending heals MalzSent for 495 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 495
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 495
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 188
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:49) MalzDruid's Prayer of Mending heals MalzDruid for 693 points.
.ctor :: (04:48:49) MalzDruid's Prayer of Mending heals MalzDruid for 693 points.
.ctor :: RegEx Match :: (04:48:49) MalzDruid's Prayer of Mending heals MalzDruid for 693 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 693
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 693
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 190
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:49) Vorok Mud-Chief's stun immunity has worn off.
.ctor :: (04:48:49) Vorok Mud-Chief's stun immunity has worn off.
ParseLine :: (04:48:49) MalzPL hits the Tavok Chief-brother for 28 points of damage.
.ctor :: (04:48:49) MalzPL hits the Tavok Chief-brother for 28 points of damage.
.ctor :: RegEx Match :: (04:48:49) MalzPL hits the Tavok Chief-brother for 28 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 28
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 28
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 194
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:49) The Vorok Mud-Chief misses MalzDruid.
.ctor :: (04:48:49) The Vorok Mud-Chief misses MalzDruid.
.ctor :: RegEx Match :: (04:48:49) The Vorok Mud-Chief misses MalzDruid.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = Vorok Mud-Chief
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 196
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:48:49) MalzDruid hits the Vorok Mud-Chief for 9 points of damage.
.ctor :: (04:48:49) MalzDruid hits the Vorok Mud-Chief for 9 points of damage.
.ctor :: RegEx Match :: (04:48:49) MalzDruid hits the Vorok Mud-Chief for 9 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 9
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 9
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 198
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:49) MalzPL casts Earthquake.
.ctor :: (04:48:49) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:48:49) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 200
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:49) MalzPL's Earthquake hurts Tavok Chief-brother for 1075 points of damage.
.ctor :: (04:48:49) MalzPL's Earthquake hurts Tavok Chief-brother for 1075 points of damage.
.ctor :: RegEx Match :: (04:48:49) MalzPL's Earthquake hurts Tavok Chief-brother for 1075 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 1075
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1075
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 202
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:49) MalzPL casts Earthquake.
.ctor :: (04:48:49) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:48:49) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 204
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:49) MalzPL's Earthquake hurts Vorok Mud-Chief for 189 points of damage.
.ctor :: (04:48:49) MalzPL's Earthquake hurts Vorok Mud-Chief for 189 points of damage.
.ctor :: RegEx Match :: (04:48:49) MalzPL's Earthquake hurts Vorok Mud-Chief for 189 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 189
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 189
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 206
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:49) MalzPL hits the Tavok Chief-brother for 22 points of damage.
.ctor :: (04:48:49) MalzPL hits the Tavok Chief-brother for 22 points of damage.
.ctor :: RegEx Match :: (04:48:49) MalzPL hits the Tavok Chief-brother for 22 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 22
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 22
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 208
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:49) MalzDruid hits the Vorok Mud-Chief for 8 points of damage.
.ctor :: (04:48:49) MalzDruid hits the Vorok Mud-Chief for 8 points of damage.
.ctor :: RegEx Match :: (04:48:49) MalzDruid hits the Vorok Mud-Chief for 8 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 8
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 8
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 210
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:49) The Tavok Chief-brother misses MalzPL.
.ctor :: (04:48:49) The Tavok Chief-brother misses MalzPL.
.ctor :: RegEx Match :: (04:48:49) The Tavok Chief-brother misses MalzPL.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = Tavok Chief-brother
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 212
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:48:49) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:48:49) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:48:49) Tavok Chief-brother is no longer warded from harm.
.ctor :: (04:48:49) Tavok Chief-brother is no longer warded from harm.
ParseLine :: (04:48:49) MalzDruid casts Earthquake.
.ctor :: (04:48:49) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:48:49) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 218
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:49) MalzDruid's Earthquake hurts Tavok Chief-brother for 1317 points of damage.
.ctor :: (04:48:49) MalzDruid's Earthquake hurts Tavok Chief-brother for 1317 points of damage.
.ctor :: RegEx Match :: (04:48:49) MalzDruid's Earthquake hurts Tavok Chief-brother for 1317 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 1317
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1317
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 220
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:49) [Combat] Info: The Tavok Chief-brother has died!
.ctor :: (04:48:49) [Combat] Info: The Tavok Chief-brother has died!
.ctor :: RegEx Match :: (04:48:49) [Combat] Info: The Tavok Chief-brother has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = Tavok Chief-brother
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 222
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:48:49) MalzDruid casts Earthquake.
.ctor :: (04:48:49) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:48:49) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 224
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:49) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:48:49) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:48:49) Vorok Mud-Chief's skin returns to normal.
.ctor :: (04:48:49) Vorok Mud-Chief's skin returns to normal.
ParseLine :: (04:48:49) Vorok Mud-Chief no longer feels as vulnerable to holy magic.
.ctor :: (04:48:49) Vorok Mud-Chief no longer feels as vulnerable to holy magic.
ParseLine :: (04:48:49) MalzDruid's Earthquake hurts Vorok Mud-Chief for 305 points of damage.
.ctor :: (04:48:49) MalzDruid's Earthquake hurts Vorok Mud-Chief for 305 points of damage.
.ctor :: RegEx Match :: (04:48:49) MalzDruid's Earthquake hurts Vorok Mud-Chief for 305 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 305
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 305
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 232
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:49) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: (04:48:49) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: RegEx Match :: (04:48:49) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = Vorok Mud-Chief
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 234
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:48:49) MalzPL casts Prayer of Mending.
.ctor :: (04:48:49) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:49) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 236
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:49) MalzPL's Prayer of Mending heals MalzPL for 648 points.
.ctor :: (04:48:49) MalzPL's Prayer of Mending heals MalzPL for 648 points.
.ctor :: RegEx Match :: (04:48:49) MalzPL's Prayer of Mending heals MalzPL for 648 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 648
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 648
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 238
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:49) MalzPL's Prayer of Mending heals you for 627 points.
.ctor :: (04:48:49) MalzPL's Prayer of Mending heals you for 627 points.
.ctor :: RegEx Match :: (04:48:49) MalzPL's Prayer of Mending heals you for 627 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 627
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 627
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 240
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:49) MalzPL's Prayer of Mending heals MalzSent for 501 points.
.ctor :: (04:48:49) MalzPL's Prayer of Mending heals MalzSent for 501 points.
.ctor :: RegEx Match :: (04:48:49) MalzPL's Prayer of Mending heals MalzSent for 501 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 501
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 501
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 242
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:49) MalzPL's Prayer of Mending heals MalzDruid for 674 points.
.ctor :: (04:48:49) MalzPL's Prayer of Mending heals MalzDruid for 674 points.
.ctor :: RegEx Match :: (04:48:49) MalzPL's Prayer of Mending heals MalzDruid for 674 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 674
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 674
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 244
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:49) MalzDruid casts Prayer of Mending.
.ctor :: (04:48:49) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:49) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 246
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:49) MalzDruid's Prayer of Mending heals MalzPL for 565 points.
.ctor :: (04:48:49) MalzDruid's Prayer of Mending heals MalzPL for 565 points.
.ctor :: RegEx Match :: (04:48:49) MalzDruid's Prayer of Mending heals MalzPL for 565 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 565
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 565
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 248
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:49) MalzDruid's Prayer of Mending heals you for 465 points.
.ctor :: (04:48:49) MalzDruid's Prayer of Mending heals you for 465 points.
.ctor :: RegEx Match :: (04:48:49) MalzDruid's Prayer of Mending heals you for 465 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 465
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 465
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 250
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:49) MalzDruid's Prayer of Mending heals MalzSent for 699 points.
.ctor :: (04:48:49) MalzDruid's Prayer of Mending heals MalzSent for 699 points.
.ctor :: RegEx Match :: (04:48:49) MalzDruid's Prayer of Mending heals MalzSent for 699 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 699
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 699
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 252
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:49) MalzDruid's Prayer of Mending heals MalzDruid for 790 points.
.ctor :: (04:48:49) MalzDruid's Prayer of Mending heals MalzDruid for 790 points.
.ctor :: RegEx Match :: (04:48:49) MalzDruid's Prayer of Mending heals MalzDruid for 790 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 790
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 790
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 254
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:49) MalzPL casts Prayer of Mending.
.ctor :: (04:48:49) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:49) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 256
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:49) MalzPL's Prayer of Mending heals MalzPL for 604 points.
.ctor :: (04:48:49) MalzPL's Prayer of Mending heals MalzPL for 604 points.
.ctor :: RegEx Match :: (04:48:49) MalzPL's Prayer of Mending heals MalzPL for 604 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 604
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 604
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 258
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:49) MalzPL's Prayer of Mending heals you for 640 points.
.ctor :: (04:48:49) MalzPL's Prayer of Mending heals you for 640 points.
.ctor :: RegEx Match :: (04:48:49) MalzPL's Prayer of Mending heals you for 640 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 640
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 640
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 260
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:49) MalzPL's Prayer of Mending heals MalzSent for 423 points.
.ctor :: (04:48:49) MalzPL's Prayer of Mending heals MalzSent for 423 points.
.ctor :: RegEx Match :: (04:48:49) MalzPL's Prayer of Mending heals MalzSent for 423 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 423
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 423
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 262
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:49) MalzPL's Prayer of Mending heals MalzDruid for 604 points.
.ctor :: (04:48:49) MalzPL's Prayer of Mending heals MalzDruid for 604 points.
.ctor :: RegEx Match :: (04:48:49) MalzPL's Prayer of Mending heals MalzDruid for 604 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 604
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 604
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 264
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:49) MalzDruid casts Prayer of Mending.
.ctor :: (04:48:49) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:49) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 266
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:49) MalzDruid's Prayer of Mending heals MalzPL for 609 points.
.ctor :: (04:48:49) MalzDruid's Prayer of Mending heals MalzPL for 609 points.
.ctor :: RegEx Match :: (04:48:49) MalzDruid's Prayer of Mending heals MalzPL for 609 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 609
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 609
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 268
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:49) MalzDruid's Prayer of Mending heals you for 557 points.
.ctor :: (04:48:49) MalzDruid's Prayer of Mending heals you for 557 points.
.ctor :: RegEx Match :: (04:48:49) MalzDruid's Prayer of Mending heals you for 557 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 557
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 557
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 270
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:49) MalzDruid's Prayer of Mending heals MalzSent for 401 points.
.ctor :: (04:48:49) MalzDruid's Prayer of Mending heals MalzSent for 401 points.
.ctor :: RegEx Match :: (04:48:49) MalzDruid's Prayer of Mending heals MalzSent for 401 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 401
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 401
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 272
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:49) MalzDruid's Prayer of Mending heals MalzDruid for 670 points.
.ctor :: (04:48:49) MalzDruid's Prayer of Mending heals MalzDruid for 670 points.
.ctor :: RegEx Match :: (04:48:49) MalzDruid's Prayer of Mending heals MalzDruid for 670 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 670
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 670
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 274
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:49) [System] Info: The Blood Sands is now a hotzone!  All who adventure there will gain greater fortune and glory!  (Time remaining:  1 hour)
.ctor :: (04:48:49) [System] Info: The Blood Sands is now a hotzone!  All who adventure there will gain greater fortune and glory!  (Time remaining:  1 hour)
ParseLine :: (04:48:49) MalzPL casts Prayer of Mending.
.ctor :: (04:48:49) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:49) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 278
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:49) MalzPL's Prayer of Mending heals MalzPL for 376 points.
.ctor :: (04:48:49) MalzPL's Prayer of Mending heals MalzPL for 376 points.
.ctor :: RegEx Match :: (04:48:49) MalzPL's Prayer of Mending heals MalzPL for 376 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 376
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 376
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 280
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:49) MalzPL's Prayer of Mending heals you for 720 points.
.ctor :: (04:48:49) MalzPL's Prayer of Mending heals you for 720 points.
.ctor :: RegEx Match :: (04:48:49) MalzPL's Prayer of Mending heals you for 720 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 720
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 720
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 282
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:49) MalzPL's Prayer of Mending heals MalzSent for 587 points.
.ctor :: (04:48:49) MalzPL's Prayer of Mending heals MalzSent for 587 points.
.ctor :: RegEx Match :: (04:48:49) MalzPL's Prayer of Mending heals MalzSent for 587 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 587
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 587
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 284
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:49) MalzPL's Prayer of Mending heals MalzDruid for 443 points.
.ctor :: (04:48:49) MalzPL's Prayer of Mending heals MalzDruid for 443 points.
.ctor :: RegEx Match :: (04:48:49) MalzPL's Prayer of Mending heals MalzDruid for 443 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 443
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 443
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 286
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:49) MalzDruid casts Prayer of Mending.
.ctor :: (04:48:49) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:49) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 288
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:49) MalzDruid's Prayer of Mending heals MalzPL for 667 points.
.ctor :: (04:48:49) MalzDruid's Prayer of Mending heals MalzPL for 667 points.
.ctor :: RegEx Match :: (04:48:49) MalzDruid's Prayer of Mending heals MalzPL for 667 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 667
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 667
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 290
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:49) MalzDruid's Prayer of Mending heals you for 606 points.
.ctor :: (04:48:49) MalzDruid's Prayer of Mending heals you for 606 points.
.ctor :: RegEx Match :: (04:48:49) MalzDruid's Prayer of Mending heals you for 606 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 606
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 606
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 292
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:49) MalzDruid's Prayer of Mending heals MalzSent for 687 points.
.ctor :: (04:48:49) MalzDruid's Prayer of Mending heals MalzSent for 687 points.
.ctor :: RegEx Match :: (04:48:49) MalzDruid's Prayer of Mending heals MalzSent for 687 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 687
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 687
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 294
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:49) MalzDruid's Prayer of Mending heals MalzDruid for 596 points.
.ctor :: (04:48:49) MalzDruid's Prayer of Mending heals MalzDruid for 596 points.
.ctor :: RegEx Match :: (04:48:49) MalzDruid's Prayer of Mending heals MalzDruid for 596 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 596
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 596
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 296
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:49) MalzPL casts Prayer of Mending.
.ctor :: (04:48:49) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:49) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 298
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:49) MalzPL's Prayer of Mending heals MalzPL for 710 points.
.ctor :: (04:48:49) MalzPL's Prayer of Mending heals MalzPL for 710 points.
.ctor :: RegEx Match :: (04:48:49) MalzPL's Prayer of Mending heals MalzPL for 710 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:49
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 710
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 710
ParseLine :: AddCombatAction :: Time       = 04:48:49
ParseLine :: AddCombatAction :: Time_Sorter= 300
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:50) MalzPL's Prayer of Mending heals you for 500 points.
.ctor :: (04:48:50) MalzPL's Prayer of Mending heals you for 500 points.
.ctor :: RegEx Match :: (04:48:50) MalzPL's Prayer of Mending heals you for 500 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 500
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 500
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 302
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:50) MalzPL's Prayer of Mending heals MalzSent for 710 points.
.ctor :: (04:48:50) MalzPL's Prayer of Mending heals MalzSent for 710 points.
.ctor :: RegEx Match :: (04:48:50) MalzPL's Prayer of Mending heals MalzSent for 710 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 710
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 710
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 304
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:50) MalzPL's Prayer of Mending heals MalzDruid for 784 points.
.ctor :: (04:48:50) MalzPL's Prayer of Mending heals MalzDruid for 784 points.
.ctor :: RegEx Match :: (04:48:50) MalzPL's Prayer of Mending heals MalzDruid for 784 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 784
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 784
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 306
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:50) MalzDruid casts Prayer of Mending.
.ctor :: (04:48:50) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:50) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 308
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:50) MalzDruid's Prayer of Mending heals MalzPL for 793 points.
.ctor :: (04:48:50) MalzDruid's Prayer of Mending heals MalzPL for 793 points.
.ctor :: RegEx Match :: (04:48:50) MalzDruid's Prayer of Mending heals MalzPL for 793 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 793
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 793
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 310
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:50) MalzDruid's Prayer of Mending heals you for 459 points.
.ctor :: (04:48:50) MalzDruid's Prayer of Mending heals you for 459 points.
.ctor :: RegEx Match :: (04:48:50) MalzDruid's Prayer of Mending heals you for 459 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 459
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 459
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 312
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:50) MalzDruid's Prayer of Mending heals MalzSent for 462 points.
.ctor :: (04:48:50) MalzDruid's Prayer of Mending heals MalzSent for 462 points.
.ctor :: RegEx Match :: (04:48:50) MalzDruid's Prayer of Mending heals MalzSent for 462 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 462
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 462
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 314
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:50) MalzDruid's Prayer of Mending heals MalzDruid for 555 points.
.ctor :: (04:48:50) MalzDruid's Prayer of Mending heals MalzDruid for 555 points.
.ctor :: RegEx Match :: (04:48:50) MalzDruid's Prayer of Mending heals MalzDruid for 555 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 555
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 555
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 316
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:50) The Moss Ogre misses MalzDruid.
.ctor :: (04:48:50) The Moss Ogre misses MalzDruid.
.ctor :: RegEx Match :: (04:48:50) The Moss Ogre misses MalzDruid.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 318
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:48:50) MalzDruid hits the Moss Ogre for 37 points of damage.
.ctor :: (04:48:50) MalzDruid hits the Moss Ogre for 37 points of damage.
.ctor :: RegEx Match :: (04:48:50) MalzDruid hits the Moss Ogre for 37 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 37
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 37
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 320
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:50) MalzDruid hits the Moss Ogre for 30 points of damage.
.ctor :: (04:48:50) MalzDruid hits the Moss Ogre for 30 points of damage.
.ctor :: RegEx Match :: (04:48:50) MalzDruid hits the Moss Ogre for 30 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 30
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 30
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 322
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:50) MalzPL casts Earthquake.
.ctor :: (04:48:50) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:48:50) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 324
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:50) MalzPL's Earthquake hurts Moss Ogre for 592 points of damage.
.ctor :: (04:48:50) MalzPL's Earthquake hurts Moss Ogre for 592 points of damage.
.ctor :: RegEx Match :: (04:48:50) MalzPL's Earthquake hurts Moss Ogre for 592 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 592
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 592
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 326
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:50) MalzPL casts Earthquake.
.ctor :: (04:48:50) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:48:50) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 328
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:50) MalzPL casts Earthquake.
.ctor :: (04:48:50) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:48:50) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 330
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:50) MalzPL's Earthquake hurts Mud Ogre for 1560 points of damage.
.ctor :: (04:48:50) MalzPL's Earthquake hurts Mud Ogre for 1560 points of damage.
.ctor :: RegEx Match :: (04:48:50) MalzPL's Earthquake hurts Mud Ogre for 1560 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1560
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1560
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 332
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:50) MalzDruid misses the Moss Ogre.
.ctor :: (04:48:50) MalzDruid misses the Moss Ogre.
.ctor :: RegEx Match :: (04:48:50) MalzDruid misses the Moss Ogre.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 334
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:48:50) MalzSent casts Righteous Word of Binding.
.ctor :: (04:48:50) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:48:50) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 336
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:50) MalzSent's Righteous Word of Binding smites Moss Ogre for 647 points of damage!
.ctor :: (04:48:50) MalzSent's Righteous Word of Binding smites Moss Ogre for 647 points of damage!
.ctor :: RegEx Match :: (04:48:50) MalzSent's Righteous Word of Binding smites Moss Ogre for 647 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 647
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 647
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 338
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:48:50) MalzSent casts Righteous Word of Binding.
.ctor :: (04:48:50) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:48:50) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 340
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:50) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:48:50) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:48:50) MalzSent casts Righteous Word of Binding.
.ctor :: (04:48:50) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:48:50) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 344
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:50) MalzSent's Righteous Word of Binding smites Mud Ogre for 695 points of damage!
.ctor :: (04:48:50) MalzSent's Righteous Word of Binding smites Mud Ogre for 695 points of damage!
.ctor :: RegEx Match :: (04:48:50) MalzSent's Righteous Word of Binding smites Mud Ogre for 695 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 695
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 695
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 346
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:48:50) [Combat] Info: The Mud Ogre has died!
.ctor :: (04:48:50) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: (04:48:50) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 348
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:48:50) MalzSent casts Righteous Word of Binding.
.ctor :: (04:48:50) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:48:50) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 350
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:50) MalzSent's Righteous Word of Binding smites Mud Ogre for 701 points of damage!
.ctor :: (04:48:50) MalzSent's Righteous Word of Binding smites Mud Ogre for 701 points of damage!
.ctor :: RegEx Match :: (04:48:50) MalzSent's Righteous Word of Binding smites Mud Ogre for 701 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 701
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 701
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 352
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:48:50) MalzDruid casts Earthquake.
.ctor :: (04:48:50) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:48:50) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 354
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:50) MalzDruid's Earthquake hurts Moss Ogre for 934 points of damage.
.ctor :: (04:48:50) MalzDruid's Earthquake hurts Moss Ogre for 934 points of damage.
.ctor :: RegEx Match :: (04:48:50) MalzDruid's Earthquake hurts Moss Ogre for 934 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 934
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 934
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 356
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:50) MalzDruid casts Earthquake.
.ctor :: (04:48:50) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:48:50) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 358
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:50) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:48:50) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:48:50) MalzDruid casts Earthquake.
.ctor :: (04:48:50) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:48:50) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 362
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:50) MalzDruid's Earthquake hurts Moss Ogre for 1164 points of damage.
.ctor :: (04:48:50) MalzDruid's Earthquake hurts Moss Ogre for 1164 points of damage.
.ctor :: RegEx Match :: (04:48:50) MalzDruid's Earthquake hurts Moss Ogre for 1164 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1164
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1164
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 364
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:50) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:48:50) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:48:50) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 366
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:48:50) MalzDruid's Earthquake hurts Mud Ogre for 720 points of damage.
.ctor :: (04:48:50) MalzDruid's Earthquake hurts Mud Ogre for 720 points of damage.
.ctor :: RegEx Match :: (04:48:50) MalzDruid's Earthquake hurts Mud Ogre for 720 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 720
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 720
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 368
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:50) MalzPL casts Call Lightning.
.ctor :: (04:48:50) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:48:50) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 370
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:50) MalzPL casts Call Lightning.
.ctor :: (04:48:50) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:48:50) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 372
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:50) Moss Ogre is stunned!
.ctor :: (04:48:50) Moss Ogre is stunned!
ParseLine :: (04:48:50) MalzPL casts Call Lightning.
.ctor :: (04:48:50) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:48:50) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 376
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:50) MalzPL casts Call Lightning.
.ctor :: (04:48:50) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:48:50) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 378
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:50) MalzPL casts Call Lightning.
.ctor :: (04:48:50) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:48:50) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 380
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:50) MalzPL casts Call Lightning.
.ctor :: (04:48:50) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:48:50) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 382
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:50) Moss Ogre is stunned!
.ctor :: (04:48:50) Moss Ogre is stunned!
ParseLine :: (04:48:50) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:48:50) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:48:50) MalzPL's Call Lightning shocks Moss Ogre for 723 points of damage!
.ctor :: (04:48:50) MalzPL's Call Lightning shocks Moss Ogre for 723 points of damage!
.ctor :: RegEx Match :: (04:48:50) MalzPL's Call Lightning shocks Moss Ogre for 723 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 723
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 723
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 388
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:48:50) MalzPL's Call Lightning shocks Mud Ogre for 1000 points of damage!
.ctor :: (04:48:50) MalzPL's Call Lightning shocks Mud Ogre for 1000 points of damage!
.ctor :: RegEx Match :: (04:48:50) MalzPL's Call Lightning shocks Mud Ogre for 1000 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1000
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 1000
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 390
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:48:50) [Combat] Info: The Mud Ogre has died!
.ctor :: (04:48:50) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: (04:48:50) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 392
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:48:50) MalzPL's Call Lightning shocks Moss Ogre for 930 points of damage!
.ctor :: (04:48:50) MalzPL's Call Lightning shocks Moss Ogre for 930 points of damage!
.ctor :: RegEx Match :: (04:48:50) MalzPL's Call Lightning shocks Moss Ogre for 930 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 930
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 930
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 394
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:48:50) MalzPL hits the Moss Ogre for 41 points of damage.
.ctor :: (04:48:50) MalzPL hits the Moss Ogre for 41 points of damage.
.ctor :: RegEx Match :: (04:48:50) MalzPL hits the Moss Ogre for 41 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 41
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 41
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 396
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:50) MalzSent casts Exalted Word of Binding.
.ctor :: (04:48:50) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:48:50) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 398
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:50) MalzSent drains 109 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: (04:48:50) MalzSent drains 109 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:48:50) MalzSent drains 109 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 109
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 109
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 400
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:48:50) MalzSent casts Exalted Word of Binding.
.ctor :: (04:48:50) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:48:50) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 402
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:50) MalzSent drains 156 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: (04:48:50) MalzSent drains 156 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:48:50) MalzSent drains 156 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 156
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 156
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 404
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:48:50) MalzSent casts Exalted Word of Binding.
.ctor :: (04:48:50) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:48:50) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 406
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:50) Moss Ogre begins to stumble.
.ctor :: (04:48:50) Moss Ogre begins to stumble.
ParseLine :: (04:48:50) MalzSent casts Exalted Word of Binding.
.ctor :: (04:48:50) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:48:50) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 410
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:50) MalzSent drains 108 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: (04:48:50) MalzSent drains 108 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:48:50) MalzSent drains 108 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 108
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 108
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 412
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:48:50) MalzSent drains 155 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: (04:48:50) MalzSent drains 155 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:48:50) MalzSent drains 155 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 155
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 155
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 414
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:48:50) Moss Ogre begins to stumble.
.ctor :: (04:48:50) Moss Ogre begins to stumble.
ParseLine :: (04:48:50) Moss Ogre is no longer stunned.
.ctor :: (04:48:50) Moss Ogre is no longer stunned.
ParseLine :: (04:48:50) Moss Ogre is no longer stunned.
.ctor :: (04:48:50) Moss Ogre is no longer stunned.
ParseLine :: (04:48:50) Moss Ogre's stun immunity has worn off.
.ctor :: (04:48:50) Moss Ogre's stun immunity has worn off.
ParseLine :: (04:48:50) Moss Ogre stops stumbling.
.ctor :: (04:48:50) Moss Ogre stops stumbling.
ParseLine :: (04:48:50) MalzDruid casts Call Lightning.
.ctor :: (04:48:50) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:48:50) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:50
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:50
ParseLine :: AddCombatAction :: Time_Sorter= 426
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:51) MalzDruid casts Call Lightning.
.ctor :: (04:48:51) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:48:51) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 428
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:51) Moss Ogre's stun immunity has worn off.
.ctor :: (04:48:51) Moss Ogre's stun immunity has worn off.
ParseLine :: (04:48:51) Moss Ogre stops stumbling.
.ctor :: (04:48:51) Moss Ogre stops stumbling.
ParseLine :: (04:48:51) MalzDruid casts Call Lightning.
.ctor :: (04:48:51) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:48:51) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 434
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:51) MalzDruid's Call Lightning shocks Moss Ogre for 835 points of damage!
.ctor :: (04:48:51) MalzDruid's Call Lightning shocks Moss Ogre for 835 points of damage!
.ctor :: RegEx Match :: (04:48:51) MalzDruid's Call Lightning shocks Moss Ogre for 835 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 835
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 835
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 436
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:48:51) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:48:51) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:48:51) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 438
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:48:51) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:48:51) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:48:51) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:48:51) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:48:51) MalzDruid's Call Lightning shocks Moss Ogre for 879 points of damage!
.ctor :: (04:48:51) MalzDruid's Call Lightning shocks Moss Ogre for 879 points of damage!
.ctor :: RegEx Match :: (04:48:51) MalzDruid's Call Lightning shocks Moss Ogre for 879 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 879
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 879
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 444
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:48:51) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:48:51) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:48:51) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 446
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:48:51) MalzPL casts Prayer of Mending.
.ctor :: (04:48:51) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:51) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 448
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:51) MalzPL's Prayer of Mending heals MalzPL for 577 points.
.ctor :: (04:48:51) MalzPL's Prayer of Mending heals MalzPL for 577 points.
.ctor :: RegEx Match :: (04:48:51) MalzPL's Prayer of Mending heals MalzPL for 577 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 577
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 577
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 450
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:51) MalzPL's Prayer of Mending heals you for 704 points.
.ctor :: (04:48:51) MalzPL's Prayer of Mending heals you for 704 points.
.ctor :: RegEx Match :: (04:48:51) MalzPL's Prayer of Mending heals you for 704 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 704
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 704
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 452
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:51) MalzPL's Prayer of Mending heals MalzSent for 659 points.
.ctor :: (04:48:51) MalzPL's Prayer of Mending heals MalzSent for 659 points.
.ctor :: RegEx Match :: (04:48:51) MalzPL's Prayer of Mending heals MalzSent for 659 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 659
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 659
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 454
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:51) MalzPL's Prayer of Mending heals MalzDruid for 659 points.
.ctor :: (04:48:51) MalzPL's Prayer of Mending heals MalzDruid for 659 points.
.ctor :: RegEx Match :: (04:48:51) MalzPL's Prayer of Mending heals MalzDruid for 659 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 659
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 659
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 456
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:51) MalzDruid casts Prayer of Mending.
.ctor :: (04:48:51) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:51) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 458
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:51) MalzDruid's Prayer of Mending heals MalzPL for 729 points.
.ctor :: (04:48:51) MalzDruid's Prayer of Mending heals MalzPL for 729 points.
.ctor :: RegEx Match :: (04:48:51) MalzDruid's Prayer of Mending heals MalzPL for 729 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 729
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 729
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 460
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:51) MalzDruid's Prayer of Mending heals you for 814 points.
.ctor :: (04:48:51) MalzDruid's Prayer of Mending heals you for 814 points.
.ctor :: RegEx Match :: (04:48:51) MalzDruid's Prayer of Mending heals you for 814 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 814
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 814
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 462
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:51) MalzDruid's Prayer of Mending heals MalzSent for 604 points.
.ctor :: (04:48:51) MalzDruid's Prayer of Mending heals MalzSent for 604 points.
.ctor :: RegEx Match :: (04:48:51) MalzDruid's Prayer of Mending heals MalzSent for 604 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 604
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 604
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 464
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:51) MalzDruid's Prayer of Mending heals MalzDruid for 779 points.
.ctor :: (04:48:51) MalzDruid's Prayer of Mending heals MalzDruid for 779 points.
.ctor :: RegEx Match :: (04:48:51) MalzDruid's Prayer of Mending heals MalzDruid for 779 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 779
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 779
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 466
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:51) MalzPL casts Prayer of Mending.
.ctor :: (04:48:51) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:51) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 468
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:51) MalzPL's Prayer of Mending heals MalzPL for 500 points.
.ctor :: (04:48:51) MalzPL's Prayer of Mending heals MalzPL for 500 points.
.ctor :: RegEx Match :: (04:48:51) MalzPL's Prayer of Mending heals MalzPL for 500 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 500
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 500
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 470
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:51) MalzPL's Prayer of Mending heals you for 524 points.
.ctor :: (04:48:51) MalzPL's Prayer of Mending heals you for 524 points.
.ctor :: RegEx Match :: (04:48:51) MalzPL's Prayer of Mending heals you for 524 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 524
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 524
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 472
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:51) MalzPL's Prayer of Mending heals MalzSent for 498 points.
.ctor :: (04:48:51) MalzPL's Prayer of Mending heals MalzSent for 498 points.
.ctor :: RegEx Match :: (04:48:51) MalzPL's Prayer of Mending heals MalzSent for 498 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 498
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 498
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 474
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:51) MalzPL's Prayer of Mending heals MalzDruid for 587 points.
.ctor :: (04:48:51) MalzPL's Prayer of Mending heals MalzDruid for 587 points.
.ctor :: RegEx Match :: (04:48:51) MalzPL's Prayer of Mending heals MalzDruid for 587 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 587
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 587
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 476
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:51) MalzDruid casts Prayer of Mending.
.ctor :: (04:48:51) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:51) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 478
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:51) MalzDruid's Prayer of Mending heals MalzPL for 496 points.
.ctor :: (04:48:51) MalzDruid's Prayer of Mending heals MalzPL for 496 points.
.ctor :: RegEx Match :: (04:48:51) MalzDruid's Prayer of Mending heals MalzPL for 496 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 496
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 496
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 480
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:51) MalzDruid's Prayer of Mending heals you for 554 points.
.ctor :: (04:48:51) MalzDruid's Prayer of Mending heals you for 554 points.
.ctor :: RegEx Match :: (04:48:51) MalzDruid's Prayer of Mending heals you for 554 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 554
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 554
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 482
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:51) MalzDruid's Prayer of Mending heals MalzSent for 642 points.
.ctor :: (04:48:51) MalzDruid's Prayer of Mending heals MalzSent for 642 points.
.ctor :: RegEx Match :: (04:48:51) MalzDruid's Prayer of Mending heals MalzSent for 642 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 642
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 642
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 484
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:51) MalzDruid's Prayer of Mending heals MalzDruid for 580 points.
.ctor :: (04:48:51) MalzDruid's Prayer of Mending heals MalzDruid for 580 points.
.ctor :: RegEx Match :: (04:48:51) MalzDruid's Prayer of Mending heals MalzDruid for 580 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 580
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 580
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 486
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:51) MalzPL casts Prayer of Mending.
.ctor :: (04:48:51) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:51) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 488
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:51) MalzPL's Prayer of Mending heals MalzPL for 613 points.
.ctor :: (04:48:51) MalzPL's Prayer of Mending heals MalzPL for 613 points.
.ctor :: RegEx Match :: (04:48:51) MalzPL's Prayer of Mending heals MalzPL for 613 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 613
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 613
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 490
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:51) MalzPL's Prayer of Mending heals you for 505 points.
.ctor :: (04:48:51) MalzPL's Prayer of Mending heals you for 505 points.
.ctor :: RegEx Match :: (04:48:51) MalzPL's Prayer of Mending heals you for 505 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 505
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 505
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 492
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:51) MalzPL's Prayer of Mending heals MalzSent for 471 points.
.ctor :: (04:48:51) MalzPL's Prayer of Mending heals MalzSent for 471 points.
.ctor :: RegEx Match :: (04:48:51) MalzPL's Prayer of Mending heals MalzSent for 471 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 471
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 471
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 494
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:51) MalzPL's Prayer of Mending heals MalzDruid for 770 points.
.ctor :: (04:48:51) MalzPL's Prayer of Mending heals MalzDruid for 770 points.
.ctor :: RegEx Match :: (04:48:51) MalzPL's Prayer of Mending heals MalzDruid for 770 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 770
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 770
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 496
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:51) MalzDruid casts Prayer of Mending.
.ctor :: (04:48:51) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:51) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 498
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:51) MalzDruid's Prayer of Mending heals MalzPL for 532 points.
.ctor :: (04:48:51) MalzDruid's Prayer of Mending heals MalzPL for 532 points.
.ctor :: RegEx Match :: (04:48:51) MalzDruid's Prayer of Mending heals MalzPL for 532 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 532
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 532
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 500
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:51) MalzDruid's Prayer of Mending heals you for 537 points.
.ctor :: (04:48:51) MalzDruid's Prayer of Mending heals you for 537 points.
.ctor :: RegEx Match :: (04:48:51) MalzDruid's Prayer of Mending heals you for 537 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 537
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 537
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 502
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:51) MalzDruid's Prayer of Mending heals MalzSent for 732 points.
.ctor :: (04:48:51) MalzDruid's Prayer of Mending heals MalzSent for 732 points.
.ctor :: RegEx Match :: (04:48:51) MalzDruid's Prayer of Mending heals MalzSent for 732 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 732
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 732
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 504
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:51) MalzDruid's Prayer of Mending heals MalzDruid for 777 points.
.ctor :: (04:48:51) MalzDruid's Prayer of Mending heals MalzDruid for 777 points.
.ctor :: RegEx Match :: (04:48:51) MalzDruid's Prayer of Mending heals MalzDruid for 777 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 777
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 777
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 506
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:51) MalzSent casts Righteous Word of Binding.
.ctor :: (04:48:51) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:48:51) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 508
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:51) MalzSent's Righteous Word of Binding smites Moss Ogre for 638 points of damage!
.ctor :: (04:48:51) MalzSent's Righteous Word of Binding smites Moss Ogre for 638 points of damage!
.ctor :: RegEx Match :: (04:48:51) MalzSent's Righteous Word of Binding smites Moss Ogre for 638 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 638
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 638
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 510
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:48:51) MalzSent casts Righteous Word of Binding.
.ctor :: (04:48:51) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:48:51) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 512
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:51) The Moss Ogre misses MalzDruid.
.ctor :: (04:48:51) The Moss Ogre misses MalzDruid.
.ctor :: RegEx Match :: (04:48:51) The Moss Ogre misses MalzDruid.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 514
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:48:51) MalzDruid hits the Moss Ogre for 21 points of damage.
.ctor :: (04:48:51) MalzDruid hits the Moss Ogre for 21 points of damage.
.ctor :: RegEx Match :: (04:48:51) MalzDruid hits the Moss Ogre for 21 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 21
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 21
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 516
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:51) MalzPL casts Earthquake.
.ctor :: (04:48:51) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:48:51) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 518
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:51) MalzPL's Earthquake hurts Moss Ogre for 1118 points of damage.
.ctor :: (04:48:51) MalzPL's Earthquake hurts Moss Ogre for 1118 points of damage.
.ctor :: RegEx Match :: (04:48:51) MalzPL's Earthquake hurts Moss Ogre for 1118 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1118
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1118
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 520
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:51) MalzPL casts Earthquake.
.ctor :: (04:48:51) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:48:51) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 522
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:51) MalzDruid hits the Moss Ogre for 35 points of damage.
.ctor :: (04:48:51) MalzDruid hits the Moss Ogre for 35 points of damage.
.ctor :: RegEx Match :: (04:48:51) MalzDruid hits the Moss Ogre for 35 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 35
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 35
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 524
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:51) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:48:51) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:48:51) MalzDruid casts Earthquake.
.ctor :: (04:48:51) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:48:51) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 528
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:51) MalzDruid's Earthquake hurts Moss Ogre for 971 points of damage.
.ctor :: (04:48:51) MalzDruid's Earthquake hurts Moss Ogre for 971 points of damage.
.ctor :: RegEx Match :: (04:48:51) MalzDruid's Earthquake hurts Moss Ogre for 971 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 971
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 971
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 530
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:51) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:48:51) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:48:51) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 532
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:48:51) MalzDruid casts Earthquake.
.ctor :: (04:48:51) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:48:51) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 534
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:51) MalzPL casts Prayer of Mending.
.ctor :: (04:48:51) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:51) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 536
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:51) MalzPL's Prayer of Mending heals MalzPL for 555 points.
.ctor :: (04:48:51) MalzPL's Prayer of Mending heals MalzPL for 555 points.
.ctor :: RegEx Match :: (04:48:51) MalzPL's Prayer of Mending heals MalzPL for 555 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 555
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 555
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 538
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:51) MalzPL's Prayer of Mending heals you for 576 points.
.ctor :: (04:48:51) MalzPL's Prayer of Mending heals you for 576 points.
.ctor :: RegEx Match :: (04:48:51) MalzPL's Prayer of Mending heals you for 576 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 576
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 576
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 540
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:51) MalzPL's Prayer of Mending heals MalzSent for 468 points.
.ctor :: (04:48:51) MalzPL's Prayer of Mending heals MalzSent for 468 points.
.ctor :: RegEx Match :: (04:48:51) MalzPL's Prayer of Mending heals MalzSent for 468 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 468
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 468
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 542
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:51) MalzPL's Prayer of Mending heals MalzDruid for 593 points.
.ctor :: (04:48:51) MalzPL's Prayer of Mending heals MalzDruid for 593 points.
.ctor :: RegEx Match :: (04:48:51) MalzPL's Prayer of Mending heals MalzDruid for 593 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 593
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 593
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 544
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:51) MalzDruid casts Prayer of Mending.
.ctor :: (04:48:51) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:51) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 546
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:51) MalzDruid's Prayer of Mending heals MalzPL for 470 points.
.ctor :: (04:48:51) MalzDruid's Prayer of Mending heals MalzPL for 470 points.
.ctor :: RegEx Match :: (04:48:51) MalzDruid's Prayer of Mending heals MalzPL for 470 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 470
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 470
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 548
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:51) MalzDruid's Prayer of Mending heals you for 481 points.
.ctor :: (04:48:51) MalzDruid's Prayer of Mending heals you for 481 points.
.ctor :: RegEx Match :: (04:48:51) MalzDruid's Prayer of Mending heals you for 481 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 481
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 481
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 550
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:51) MalzDruid's Prayer of Mending heals MalzSent for 757 points.
.ctor :: (04:48:51) MalzDruid's Prayer of Mending heals MalzSent for 757 points.
.ctor :: RegEx Match :: (04:48:51) MalzDruid's Prayer of Mending heals MalzSent for 757 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 757
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 757
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 552
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:51) MalzDruid's Prayer of Mending heals MalzDruid for 655 points.
.ctor :: (04:48:51) MalzDruid's Prayer of Mending heals MalzDruid for 655 points.
.ctor :: RegEx Match :: (04:48:51) MalzDruid's Prayer of Mending heals MalzDruid for 655 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 655
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 655
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 554
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:51) MalzSent casts Exalted Word of Binding.
.ctor :: (04:48:51) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:48:51) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:51
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:51
ParseLine :: AddCombatAction :: Time_Sorter= 556
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:52) MalzSent drains 112 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: (04:48:52) MalzSent drains 112 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:48:52) MalzSent drains 112 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 112
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 112
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 558
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:48:52) MalzSent casts Exalted Word of Binding.
.ctor :: (04:48:52) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:48:52) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 560
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:52) MalzSent drains 161 points of mana from Vorok Mud-Chief with Exalted Word of Binding.
.ctor :: (04:48:52) MalzSent drains 161 points of mana from Vorok Mud-Chief with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:48:52) MalzSent drains 161 points of mana from Vorok Mud-Chief with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 161
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 161
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 562
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:48:52) Vorok Mud-Chief begins to stumble.
.ctor :: (04:48:52) Vorok Mud-Chief begins to stumble.
ParseLine :: (04:48:52) MalzPL casts Earthquake.
.ctor :: (04:48:52) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:48:52) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 566
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:52) MalzPL's Earthquake hurts Vorok Mud-Chief for 1599 points of damage.
.ctor :: (04:48:52) MalzPL's Earthquake hurts Vorok Mud-Chief for 1599 points of damage.
.ctor :: RegEx Match :: (04:48:52) MalzPL's Earthquake hurts Vorok Mud-Chief for 1599 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 1599
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1599
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 568
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:52) The Vorok Mud-Chief misses MalzDruid.
.ctor :: (04:48:52) The Vorok Mud-Chief misses MalzDruid.
.ctor :: RegEx Match :: (04:48:52) The Vorok Mud-Chief misses MalzDruid.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = Vorok Mud-Chief
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 570
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:48:52) MalzDruid hits the Vorok Mud-Chief for 27 points of damage.
.ctor :: (04:48:52) MalzDruid hits the Vorok Mud-Chief for 27 points of damage.
.ctor :: RegEx Match :: (04:48:52) MalzDruid hits the Vorok Mud-Chief for 27 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 27
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 27
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 572
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:52) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:48:52) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:48:52) Vorok Mud-Chief stops stumbling.
.ctor :: (04:48:52) Vorok Mud-Chief stops stumbling.
ParseLine :: (04:48:52) MalzDruid casts Earthquake.
.ctor :: (04:48:52) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:48:52) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 578
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:52) MalzDruid's Earthquake hurts Vorok Mud-Chief for 1097 points of damage.
.ctor :: (04:48:52) MalzDruid's Earthquake hurts Vorok Mud-Chief for 1097 points of damage.
.ctor :: RegEx Match :: (04:48:52) MalzDruid's Earthquake hurts Vorok Mud-Chief for 1097 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 1097
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1097
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 580
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:52) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: (04:48:52) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: RegEx Match :: (04:48:52) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = Vorok Mud-Chief
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 582
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:48:52) [Combat] Info: The Mud Ogre attacks HardC
.ctor :: (04:48:52) [Combat] Info: The Mud Ogre attacks HardC
.ctor :: RegEx Match :: (04:48:52) [Combat] Info: The Mud Ogre attacks HardC
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = HardC
.ctor :: RegEx Match :: Ability    = Challenge
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = attack
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 26
.ctor :: RegEx Match :: RegExDesc  = Taunt :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<target>.*) (?<type>[atck]*)s? (?<source>.*)
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = HardC
ParseLine :: AddCombatAction :: Ability    = Challenge
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 584
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = attack
ParseLine :: (04:48:52) MalzPL casts Prayer of Mending.
.ctor :: (04:48:52) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:52) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 586
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:52) MalzPL's Prayer of Mending heals MalzPL for 576 points.
.ctor :: (04:48:52) MalzPL's Prayer of Mending heals MalzPL for 576 points.
.ctor :: RegEx Match :: (04:48:52) MalzPL's Prayer of Mending heals MalzPL for 576 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 576
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 576
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 588
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:52) MalzPL's Prayer of Mending heals you for 654 points.
.ctor :: (04:48:52) MalzPL's Prayer of Mending heals you for 654 points.
.ctor :: RegEx Match :: (04:48:52) MalzPL's Prayer of Mending heals you for 654 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 654
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 654
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 590
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:52) MalzPL's Prayer of Mending heals MalzSent for 334 points.
.ctor :: (04:48:52) MalzPL's Prayer of Mending heals MalzSent for 334 points.
.ctor :: RegEx Match :: (04:48:52) MalzPL's Prayer of Mending heals MalzSent for 334 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 334
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 334
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 592
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:52) MalzPL's Prayer of Mending heals MalzDruid for 728 points.
.ctor :: (04:48:52) MalzPL's Prayer of Mending heals MalzDruid for 728 points.
.ctor :: RegEx Match :: (04:48:52) MalzPL's Prayer of Mending heals MalzDruid for 728 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 728
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 728
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 594
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:52) MalzDruid casts Prayer of Mending.
.ctor :: (04:48:52) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:52) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 596
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:52) MalzDruid's Prayer of Mending heals MalzPL for 597 points.
.ctor :: (04:48:52) MalzDruid's Prayer of Mending heals MalzPL for 597 points.
.ctor :: RegEx Match :: (04:48:52) MalzDruid's Prayer of Mending heals MalzPL for 597 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 597
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 597
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 598
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:52) MalzDruid's Prayer of Mending heals you for 664 points.
.ctor :: (04:48:52) MalzDruid's Prayer of Mending heals you for 664 points.
.ctor :: RegEx Match :: (04:48:52) MalzDruid's Prayer of Mending heals you for 664 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 664
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 664
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 600
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:52) MalzDruid's Prayer of Mending heals MalzSent for 480 points.
.ctor :: (04:48:52) MalzDruid's Prayer of Mending heals MalzSent for 480 points.
.ctor :: RegEx Match :: (04:48:52) MalzDruid's Prayer of Mending heals MalzSent for 480 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 480
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 480
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 602
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:52) MalzDruid's Prayer of Mending heals MalzDruid for 483 points.
.ctor :: (04:48:52) MalzDruid's Prayer of Mending heals MalzDruid for 483 points.
.ctor :: RegEx Match :: (04:48:52) MalzDruid's Prayer of Mending heals MalzDruid for 483 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 483
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 483
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 604
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:52) MalzPL casts Earthquake.
.ctor :: (04:48:52) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:48:52) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 606
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:52) MalzPL's Earthquake hurts Mud Ogre for 1256 points of damage.
.ctor :: (04:48:52) MalzPL's Earthquake hurts Mud Ogre for 1256 points of damage.
.ctor :: RegEx Match :: (04:48:52) MalzPL's Earthquake hurts Mud Ogre for 1256 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1256
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1256
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 608
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:52) Tavok Chief-brother casts Mantle of Stone.
.ctor :: (04:48:52) Tavok Chief-brother casts Mantle of Stone.
.ctor :: RegEx Match :: (04:48:52) Tavok Chief-brother casts Mantle of Stone.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = Tavok Chief-brother
.ctor :: RegEx Match :: Ability    = Mantle of Stone
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Ability    = Mantle of Stone
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 610
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:52) Tavok Chief-brother feels warded from harm.
.ctor :: (04:48:52) Tavok Chief-brother feels warded from harm.
ParseLine :: (04:48:52) MalzDruid assumes Offensive Stance.
.ctor :: (04:48:52) MalzDruid assumes Offensive Stance.
.ctor :: RegEx Match :: (04:48:52) MalzDruid assumes Offensive Stance.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Offensive Stance
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = assume
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 23
.ctor :: RegEx Match :: RegExDesc  = Use power -- assume :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>assume)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Offensive Stance
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 614
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = assume
ParseLine :: (04:48:52) MalzPL casts Prayer of Mending.
.ctor :: (04:48:52) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:52) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 616
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:52) MalzPL's Prayer of Mending heals MalzPL for 432 points.
.ctor :: (04:48:52) MalzPL's Prayer of Mending heals MalzPL for 432 points.
.ctor :: RegEx Match :: (04:48:52) MalzPL's Prayer of Mending heals MalzPL for 432 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 432
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 432
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 618
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:52) MalzPL's Prayer of Mending heals you for 766 points.
.ctor :: (04:48:52) MalzPL's Prayer of Mending heals you for 766 points.
.ctor :: RegEx Match :: (04:48:52) MalzPL's Prayer of Mending heals you for 766 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 766
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 766
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 620
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:52) MalzPL's Prayer of Mending heals MalzSent for 564 points.
.ctor :: (04:48:52) MalzPL's Prayer of Mending heals MalzSent for 564 points.
.ctor :: RegEx Match :: (04:48:52) MalzPL's Prayer of Mending heals MalzSent for 564 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 564
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 564
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 622
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:52) MalzPL's Prayer of Mending heals MalzDruid for 474 points.
.ctor :: (04:48:52) MalzPL's Prayer of Mending heals MalzDruid for 474 points.
.ctor :: RegEx Match :: (04:48:52) MalzPL's Prayer of Mending heals MalzDruid for 474 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 474
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 474
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 624
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:52) Moss Ogre's Earthquake hurts MalzPL for 575 points of damage.
.ctor :: (04:48:52) Moss Ogre's Earthquake hurts MalzPL for 575 points of damage.
.ctor :: RegEx Match :: (04:48:52) Moss Ogre's Earthquake hurts MalzPL for 575 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 575
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 575
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 626
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:52) Moss Ogre's Earthquake hurts you for 298 points of damage.
.ctor :: (04:48:52) Moss Ogre's Earthquake hurts you for 298 points of damage.
.ctor :: RegEx Match :: (04:48:52) Moss Ogre's Earthquake hurts you for 298 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 298
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 298
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 628
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:52) Moss Ogre's Earthquake hurts MalzSent for 342 points of damage.
.ctor :: (04:48:52) Moss Ogre's Earthquake hurts MalzSent for 342 points of damage.
.ctor :: RegEx Match :: (04:48:52) Moss Ogre's Earthquake hurts MalzSent for 342 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 342
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 342
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 630
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:52) Moss Ogre's Earthquake hurts MalzDruid for 389 points of damage.
.ctor :: (04:48:52) Moss Ogre's Earthquake hurts MalzDruid for 389 points of damage.
.ctor :: RegEx Match :: (04:48:52) Moss Ogre's Earthquake hurts MalzDruid for 389 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 389
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 389
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 632
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:52) MalzSent misses the Moss Ogre.
.ctor :: (04:48:52) MalzSent misses the Moss Ogre.
.ctor :: RegEx Match :: (04:48:52) MalzSent misses the Moss Ogre.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 634
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:48:52) MalzPL hits the Moss Ogre for 39 points of damage.
.ctor :: (04:48:52) MalzPL hits the Moss Ogre for 39 points of damage.
.ctor :: RegEx Match :: (04:48:52) MalzPL hits the Moss Ogre for 39 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 39
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 39
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 636
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:52) MalzDruid hits the Moss Ogre for 25 points of damage.
.ctor :: (04:48:52) MalzDruid hits the Moss Ogre for 25 points of damage.
.ctor :: RegEx Match :: (04:48:52) MalzDruid hits the Moss Ogre for 25 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 25
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 25
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 638
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:52) MalzSent casts Exalted Word of Binding.
.ctor :: (04:48:52) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:48:52) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 640
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:52) MalzSent drains 107 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: (04:48:52) MalzSent drains 107 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:48:52) MalzSent drains 107 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 107
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 107
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 642
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:48:52) MalzSent drains 154 points of mana from Tavok Chief-brother with Exalted Word of Binding.
.ctor :: (04:48:52) MalzSent drains 154 points of mana from Tavok Chief-brother with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:48:52) MalzSent drains 154 points of mana from Tavok Chief-brother with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 154
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 154
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 644
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:48:52) Tavok Chief-brother begins to stumble.
.ctor :: (04:48:52) Tavok Chief-brother begins to stumble.
ParseLine :: (04:48:52) MalzSent drains 103 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: (04:48:52) MalzSent drains 103 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:48:52) MalzSent drains 103 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 103
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 103
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 648
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:48:52) MalzSent drains 147 points of mana from Mud Ogre with Exalted Word of Binding.
.ctor :: (04:48:52) MalzSent drains 147 points of mana from Mud Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:48:52) MalzSent drains 147 points of mana from Mud Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 147
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 147
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 650
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:48:52) Mud Ogre begins to stumble.
.ctor :: (04:48:52) Mud Ogre begins to stumble.
ParseLine :: (04:48:52) MalzSent drains 112 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: (04:48:52) MalzSent drains 112 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:48:52) MalzSent drains 112 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 112
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 112
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 654
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:48:52) MalzSent drains 160 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: (04:48:52) MalzSent drains 160 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:48:52) MalzSent drains 160 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 160
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 160
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 656
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:48:52) Moss Ogre begins to stumble.
.ctor :: (04:48:52) Moss Ogre begins to stumble.
ParseLine :: (04:48:52) MalzDruid casts Blessing of the Grove.
.ctor :: (04:48:52) MalzDruid casts Blessing of the Grove.
.ctor :: RegEx Match :: (04:48:52) MalzDruid casts Blessing of the Grove.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Blessing of the Grove
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Blessing of the Grove
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 660
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:52) MalzDruid looks stronger and healthier!
.ctor :: (04:48:52) MalzDruid looks stronger and healthier!
ParseLine :: (04:48:52) MalzDruid looks stronger and healthier!
.ctor :: (04:48:52) MalzDruid looks stronger and healthier!
ParseLine :: (04:48:52) MalzSent hits the Moss Ogre for 146 points of damage.
.ctor :: (04:48:52) MalzSent hits the Moss Ogre for 146 points of damage.
.ctor :: RegEx Match :: (04:48:52) MalzSent hits the Moss Ogre for 146 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 146
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 146
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 666
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:52) MalzPL hits the Moss Ogre for 20 points of damage.
.ctor :: (04:48:52) MalzPL hits the Moss Ogre for 20 points of damage.
.ctor :: RegEx Match :: (04:48:52) MalzPL hits the Moss Ogre for 20 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 20
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 20
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 668
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:52) MalzDruid hits the Moss Ogre for 24 points of damage.
.ctor :: (04:48:52) MalzDruid hits the Moss Ogre for 24 points of damage.
.ctor :: RegEx Match :: (04:48:52) MalzDruid hits the Moss Ogre for 24 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 24
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 24
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 670
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:52) You parry the Moss Ogre's attack!
.ctor :: (04:48:52) You parry the Moss Ogre's attack!
.ctor :: RegEx Match :: (04:48:52) You parry the Moss Ogre's attack!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = You
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = parry
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 17
.ctor :: RegEx Match :: RegExDesc  = Parry :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>parr)[yies]+ (?<source>.*)'s .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 672
ParseLine :: AddCombatAction :: Target     = You
ParseLine :: AddCombatAction :: Value_Type = parry
ParseLine :: (04:48:52) You parry the Tavok Chief-brother's attack!
.ctor :: (04:48:52) You parry the Tavok Chief-brother's attack!
.ctor :: RegEx Match :: (04:48:52) You parry the Tavok Chief-brother's attack!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = Tavok Chief-brother
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = You
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = parry
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 17
.ctor :: RegEx Match :: RegExDesc  = Parry :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>parr)[yies]+ (?<source>.*)'s .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 674
ParseLine :: AddCombatAction :: Target     = You
ParseLine :: AddCombatAction :: Value_Type = parry
ParseLine :: (04:48:52) You block the Mud Ogre's attack!
.ctor :: (04:48:52) You block the Mud Ogre's attack!
.ctor :: RegEx Match :: (04:48:52) You block the Mud Ogre's attack!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = You
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = block
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 16
.ctor :: RegEx Match :: RegExDesc  = You Block :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>block) (?<source>.*)'s .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 676
ParseLine :: AddCombatAction :: Target     = You
ParseLine :: AddCombatAction :: Value_Type = block
ParseLine :: (04:48:52) MalzSent hits the Moss Ogre for 162 points of damage.
.ctor :: (04:48:52) MalzSent hits the Moss Ogre for 162 points of damage.
.ctor :: RegEx Match :: (04:48:52) MalzSent hits the Moss Ogre for 162 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 162
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 162
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 678
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:52) MalzPL hits the Moss Ogre for 28 points of damage.
.ctor :: (04:48:52) MalzPL hits the Moss Ogre for 28 points of damage.
.ctor :: RegEx Match :: (04:48:52) MalzPL hits the Moss Ogre for 28 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 28
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 28
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 680
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:52) MalzDruid hits the Moss Ogre for 25 points of damage.
.ctor :: (04:48:52) MalzDruid hits the Moss Ogre for 25 points of damage.
.ctor :: RegEx Match :: (04:48:52) MalzDruid hits the Moss Ogre for 25 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:52
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 25
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 25
ParseLine :: AddCombatAction :: Time       = 04:48:52
ParseLine :: AddCombatAction :: Time_Sorter= 682
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:53) MalzPL casts Earthquake.
.ctor :: (04:48:53) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:48:53) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 684
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:53) MalzPL's Earthquake hurts Tavok Chief-brother for 894 points of damage.
.ctor :: (04:48:53) MalzPL's Earthquake hurts Tavok Chief-brother for 894 points of damage.
.ctor :: RegEx Match :: (04:48:53) MalzPL's Earthquake hurts Tavok Chief-brother for 894 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 894
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 894
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 686
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:53) MalzPL's Earthquake hurts Mud Ogre for 919 points of damage.
.ctor :: (04:48:53) MalzPL's Earthquake hurts Mud Ogre for 919 points of damage.
.ctor :: RegEx Match :: (04:48:53) MalzPL's Earthquake hurts Mud Ogre for 919 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 919
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 919
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 688
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:53) MalzPL's Earthquake hurts Moss Ogre for 1248 points of damage.
.ctor :: (04:48:53) MalzPL's Earthquake hurts Moss Ogre for 1248 points of damage.
.ctor :: RegEx Match :: (04:48:53) MalzPL's Earthquake hurts Moss Ogre for 1248 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1248
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1248
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 690
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:53) You parry the Moss Ogre's attack!
.ctor :: (04:48:53) You parry the Moss Ogre's attack!
.ctor :: RegEx Match :: (04:48:53) You parry the Moss Ogre's attack!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = You
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = parry
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 17
.ctor :: RegEx Match :: RegExDesc  = Parry :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>parr)[yies]+ (?<source>.*)'s .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 692
ParseLine :: AddCombatAction :: Target     = You
ParseLine :: AddCombatAction :: Value_Type = parry
ParseLine :: (04:48:53) MalzSent hits the Moss Ogre for 161 points of damage.
.ctor :: (04:48:53) MalzSent hits the Moss Ogre for 161 points of damage.
.ctor :: RegEx Match :: (04:48:53) MalzSent hits the Moss Ogre for 161 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 161
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 161
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 694
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:53) MalzDruid casts Call Lightning.
.ctor :: (04:48:53) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:48:53) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 696
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:53) MalzDruid casts Call Lightning.
.ctor :: (04:48:53) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:48:53) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 698
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:53) Tavok Chief-brother is stunned!
.ctor :: (04:48:53) Tavok Chief-brother is stunned!
ParseLine :: (04:48:53) MalzDruid casts Call Lightning.
.ctor :: (04:48:53) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:48:53) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 702
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:53) MalzDruid casts Call Lightning.
.ctor :: (04:48:53) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:48:53) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 704
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:53) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:48:53) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:48:53) Mud Ogre stops stumbling.
.ctor :: (04:48:53) Mud Ogre stops stumbling.
ParseLine :: (04:48:53) MalzDruid casts Call Lightning.
.ctor :: (04:48:53) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:48:53) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 710
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:53) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:48:53) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:48:53) Moss Ogre stops stumbling.
.ctor :: (04:48:53) Moss Ogre stops stumbling.
ParseLine :: (04:48:53) MalzDruid's Call Lightning shocks Mud Ogre for 731 points of damage!
.ctor :: (04:48:53) MalzDruid's Call Lightning shocks Mud Ogre for 731 points of damage!
.ctor :: RegEx Match :: (04:48:53) MalzDruid's Call Lightning shocks Mud Ogre for 731 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 731
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 731
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 716
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:48:53) [Combat] Info: The Mud Ogre has died!
.ctor :: (04:48:53) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: (04:48:53) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 718
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:48:53) MalzDruid's Call Lightning shocks Tavok Chief-brother for 748 points of damage!
.ctor :: (04:48:53) MalzDruid's Call Lightning shocks Tavok Chief-brother for 748 points of damage!
.ctor :: RegEx Match :: (04:48:53) MalzDruid's Call Lightning shocks Tavok Chief-brother for 748 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 748
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 748
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 720
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:48:53) MalzDruid's Call Lightning shocks Moss Ogre for 748 points of damage!
.ctor :: (04:48:53) MalzDruid's Call Lightning shocks Moss Ogre for 748 points of damage!
.ctor :: RegEx Match :: (04:48:53) MalzDruid's Call Lightning shocks Moss Ogre for 748 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 748
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 748
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 722
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:48:53) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:48:53) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:48:53) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 724
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:48:53) You parry the Tavok Chief-brother's attack!
.ctor :: (04:48:53) You parry the Tavok Chief-brother's attack!
.ctor :: RegEx Match :: (04:48:53) You parry the Tavok Chief-brother's attack!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = Tavok Chief-brother
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = You
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = parry
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 17
.ctor :: RegEx Match :: RegExDesc  = Parry :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>parr)[yies]+ (?<source>.*)'s .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 726
ParseLine :: AddCombatAction :: Target     = You
ParseLine :: AddCombatAction :: Value_Type = parry
ParseLine :: (04:48:53) MalzSent casts Holy Word of Binding.
.ctor :: (04:48:53) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:48:53) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 728
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:53) MalzSent casts Holy Word of Binding.
.ctor :: (04:48:53) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:48:53) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 730
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:53) Tavok Chief-brother is no longer stunned.
.ctor :: (04:48:53) Tavok Chief-brother is no longer stunned.
ParseLine :: (04:48:53) MalzPL assumes Offensive Stance.
.ctor :: (04:48:53) MalzPL assumes Offensive Stance.
.ctor :: RegEx Match :: (04:48:53) MalzPL assumes Offensive Stance.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Offensive Stance
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = assume
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 23
.ctor :: RegEx Match :: RegExDesc  = Use power -- assume :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>assume)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Offensive Stance
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 734
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = assume
ParseLine :: (04:48:53) Tavok Chief-brother stops stumbling.
.ctor :: (04:48:53) Tavok Chief-brother stops stumbling.
ParseLine :: (04:48:53) MalzDruid casts Prayer of Mending.
.ctor :: (04:48:53) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:53) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 738
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:53) MalzDruid's Prayer of Mending heals MalzPL for 449 points.
.ctor :: (04:48:53) MalzDruid's Prayer of Mending heals MalzPL for 449 points.
.ctor :: RegEx Match :: (04:48:53) MalzDruid's Prayer of Mending heals MalzPL for 449 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 449
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 449
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 740
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:53) MalzDruid's Prayer of Mending heals you for 516 points.
.ctor :: (04:48:53) MalzDruid's Prayer of Mending heals you for 516 points.
.ctor :: RegEx Match :: (04:48:53) MalzDruid's Prayer of Mending heals you for 516 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 516
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 516
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 742
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:53) MalzDruid's Prayer of Mending heals MalzSent for 460 points.
.ctor :: (04:48:53) MalzDruid's Prayer of Mending heals MalzSent for 460 points.
.ctor :: RegEx Match :: (04:48:53) MalzDruid's Prayer of Mending heals MalzSent for 460 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 460
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 460
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 744
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:53) MalzDruid's Prayer of Mending heals MalzDruid for 697 points.
.ctor :: (04:48:53) MalzDruid's Prayer of Mending heals MalzDruid for 697 points.
.ctor :: RegEx Match :: (04:48:53) MalzDruid's Prayer of Mending heals MalzDruid for 697 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 697
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 697
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 746
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:53) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:48:53) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:48:53) Tavok Chief-brother no longer feels as vulnerable to holy magic.
.ctor :: (04:48:53) Tavok Chief-brother no longer feels as vulnerable to holy magic.
ParseLine :: (04:48:53) Tavok Chief-brother's stun immunity has worn off.
.ctor :: (04:48:53) Tavok Chief-brother's stun immunity has worn off.
ParseLine :: (04:48:53) Tavok Chief-brother is no longer warded from harm.
.ctor :: (04:48:53) Tavok Chief-brother is no longer warded from harm.
ParseLine :: (04:48:53) MalzSent casts Righteous Word of Binding.
.ctor :: (04:48:53) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:48:53) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 756
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:53) MalzSent's Righteous Word of Binding smites Tavok Chief-brother for 807 points of damage!
.ctor :: (04:48:53) MalzSent's Righteous Word of Binding smites Tavok Chief-brother for 807 points of damage!
.ctor :: RegEx Match :: (04:48:53) MalzSent's Righteous Word of Binding smites Tavok Chief-brother for 807 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 807
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 807
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 758
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:48:53) [Combat] Info: The Tavok Chief-brother has died!
.ctor :: (04:48:53) [Combat] Info: The Tavok Chief-brother has died!
.ctor :: RegEx Match :: (04:48:53) [Combat] Info: The Tavok Chief-brother has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = Tavok Chief-brother
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 760
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:48:53) MalzSent casts Righteous Word of Binding.
.ctor :: (04:48:53) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:48:53) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 762
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:53) MalzPL casts Blessing of the Grove.
.ctor :: (04:48:53) MalzPL casts Blessing of the Grove.
.ctor :: RegEx Match :: (04:48:53) MalzPL casts Blessing of the Grove.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Blessing of the Grove
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Blessing of the Grove
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 764
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:53) MalzPL looks stronger and healthier!
.ctor :: (04:48:53) MalzPL looks stronger and healthier!
ParseLine :: (04:48:53) MalzPL looks stronger and healthier!
.ctor :: (04:48:53) MalzPL looks stronger and healthier!
ParseLine :: (04:48:53) MalzPL casts Prayer of Mending.
.ctor :: (04:48:53) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:53) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 770
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:53) MalzPL's Prayer of Mending heals MalzPL for 628 points.
.ctor :: (04:48:53) MalzPL's Prayer of Mending heals MalzPL for 628 points.
.ctor :: RegEx Match :: (04:48:53) MalzPL's Prayer of Mending heals MalzPL for 628 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 628
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 628
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 772
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:53) MalzPL's Prayer of Mending heals you for 605 points.
.ctor :: (04:48:53) MalzPL's Prayer of Mending heals you for 605 points.
.ctor :: RegEx Match :: (04:48:53) MalzPL's Prayer of Mending heals you for 605 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 605
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 605
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 774
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:53) MalzPL's Prayer of Mending heals MalzSent for 434 points.
.ctor :: (04:48:53) MalzPL's Prayer of Mending heals MalzSent for 434 points.
.ctor :: RegEx Match :: (04:48:53) MalzPL's Prayer of Mending heals MalzSent for 434 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 434
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 434
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 776
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:53) MalzPL's Prayer of Mending heals MalzDruid for 394 points.
.ctor :: (04:48:53) MalzPL's Prayer of Mending heals MalzDruid for 394 points.
.ctor :: RegEx Match :: (04:48:53) MalzPL's Prayer of Mending heals MalzDruid for 394 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 394
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 394
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 778
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:53) MalzDruid casts Prayer of Mending.
.ctor :: (04:48:53) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:53) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 780
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:53) MalzDruid's Prayer of Mending heals MalzPL for 536 points.
.ctor :: (04:48:53) MalzDruid's Prayer of Mending heals MalzPL for 536 points.
.ctor :: RegEx Match :: (04:48:53) MalzDruid's Prayer of Mending heals MalzPL for 536 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 536
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 536
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 782
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:53) MalzDruid's Prayer of Mending heals you for 547 points.
.ctor :: (04:48:53) MalzDruid's Prayer of Mending heals you for 547 points.
.ctor :: RegEx Match :: (04:48:53) MalzDruid's Prayer of Mending heals you for 547 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 547
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 547
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 784
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:53) MalzDruid's Prayer of Mending heals MalzSent for 466 points.
.ctor :: (04:48:53) MalzDruid's Prayer of Mending heals MalzSent for 466 points.
.ctor :: RegEx Match :: (04:48:53) MalzDruid's Prayer of Mending heals MalzSent for 466 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 466
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 466
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 786
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:53) MalzDruid's Prayer of Mending heals MalzDruid for 535 points.
.ctor :: (04:48:53) MalzDruid's Prayer of Mending heals MalzDruid for 535 points.
.ctor :: RegEx Match :: (04:48:53) MalzDruid's Prayer of Mending heals MalzDruid for 535 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 535
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 535
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 788
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:53) MalzDruid casts Earthquake.
.ctor :: (04:48:53) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:48:53) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 790
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:53) MalzDruid's Earthquake hurts Mud Ogre for 1008 points of damage.
.ctor :: (04:48:53) MalzDruid's Earthquake hurts Mud Ogre for 1008 points of damage.
.ctor :: RegEx Match :: (04:48:53) MalzDruid's Earthquake hurts Mud Ogre for 1008 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1008
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1008
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 792
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:53) MalzDruid casts Earthquake.
.ctor :: (04:48:53) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:48:53) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 794
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:53) MalzPL casts Call Lightning.
.ctor :: (04:48:53) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:48:53) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 796
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:53) MalzPL casts Call Lightning.
.ctor :: (04:48:53) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:48:53) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 798
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:53) Mud Ogre is stunned!
.ctor :: (04:48:53) Mud Ogre is stunned!
ParseLine :: (04:48:53) MalzPL casts Call Lightning.
.ctor :: (04:48:53) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:48:53) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 802
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:53) MalzPL casts Call Lightning.
.ctor :: (04:48:53) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:48:53) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 804
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:53) MalzPL's Call Lightning shocks Mud Ogre for 838 points of damage!
.ctor :: (04:48:53) MalzPL's Call Lightning shocks Mud Ogre for 838 points of damage!
.ctor :: RegEx Match :: (04:48:53) MalzPL's Call Lightning shocks Mud Ogre for 838 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 838
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 838
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 806
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:48:53) MalzPL hits the Mud Ogre for 27 points of damage.
.ctor :: (04:48:53) MalzPL hits the Mud Ogre for 27 points of damage.
.ctor :: RegEx Match :: (04:48:53) MalzPL hits the Mud Ogre for 27 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 27
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 27
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 808
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:53) MalzSent casts Holy Word of Binding.
.ctor :: (04:48:53) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:48:53) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:53
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:53
ParseLine :: AddCombatAction :: Time_Sorter= 810
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:54) MalzSent casts Holy Word of Binding.
.ctor :: (04:48:54) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:48:54) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 812
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:54) MalzSent casts Holy Word of Binding.
.ctor :: (04:48:54) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:48:54) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 814
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:54) Mud Ogre is no longer stunned.
.ctor :: (04:48:54) Mud Ogre is no longer stunned.
ParseLine :: (04:48:54) MalzPL hits the Mud Ogre for 30 points of damage.
.ctor :: (04:48:54) MalzPL hits the Mud Ogre for 30 points of damage.
.ctor :: RegEx Match :: (04:48:54) MalzPL hits the Mud Ogre for 30 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 30
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 30
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 818
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:54) The Mud Ogre misses MalzSent.
.ctor :: (04:48:54) The Mud Ogre misses MalzSent.
.ctor :: RegEx Match :: (04:48:54) The Mud Ogre misses MalzSent.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 820
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:48:54) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:48:54) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:48:54) Mud Ogre no longer feels as vulnerable to holy magic.
.ctor :: (04:48:54) Mud Ogre no longer feels as vulnerable to holy magic.
ParseLine :: (04:48:54) Mud Ogre's stun immunity has worn off.
.ctor :: (04:48:54) Mud Ogre's stun immunity has worn off.
ParseLine :: (04:48:54) MalzDruid casts Call Lightning.
.ctor :: (04:48:54) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:48:54) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 828
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:54) MalzDruid casts Call Lightning.
.ctor :: (04:48:54) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:48:54) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 830
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:54) Mud Ogre is stunned!
.ctor :: (04:48:54) Mud Ogre is stunned!
ParseLine :: (04:48:54) MalzDruid's Call Lightning shocks Mud Ogre for 764 points of damage!
.ctor :: (04:48:54) MalzDruid's Call Lightning shocks Mud Ogre for 764 points of damage!
.ctor :: RegEx Match :: (04:48:54) MalzDruid's Call Lightning shocks Mud Ogre for 764 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 764
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 764
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 834
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:48:54) MalzDruid's Call Lightning shocks Mud Ogre for 703 points of damage!
.ctor :: (04:48:54) MalzDruid's Call Lightning shocks Mud Ogre for 703 points of damage!
.ctor :: RegEx Match :: (04:48:54) MalzDruid's Call Lightning shocks Mud Ogre for 703 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 703
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 703
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 836
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:48:54) [Combat] Info: The Mud Ogre has died!
.ctor :: (04:48:54) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: (04:48:54) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 838
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:48:54) MalzSent hits the Mud Ogre for 138 points of damage.
.ctor :: (04:48:54) MalzSent hits the Mud Ogre for 138 points of damage.
.ctor :: RegEx Match :: (04:48:54) MalzSent hits the Mud Ogre for 138 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 138
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 138
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 840
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:54) MalzPL casts Prayer of Mending.
.ctor :: (04:48:54) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:54) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 842
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:54) MalzPL's Prayer of Mending heals MalzPL for 466 points.
.ctor :: (04:48:54) MalzPL's Prayer of Mending heals MalzPL for 466 points.
.ctor :: RegEx Match :: (04:48:54) MalzPL's Prayer of Mending heals MalzPL for 466 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 466
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 466
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 844
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:54) MalzPL's Prayer of Mending heals you for 637 points.
.ctor :: (04:48:54) MalzPL's Prayer of Mending heals you for 637 points.
.ctor :: RegEx Match :: (04:48:54) MalzPL's Prayer of Mending heals you for 637 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 637
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 637
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 846
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:54) MalzPL's Prayer of Mending heals MalzSent for 729 points.
.ctor :: (04:48:54) MalzPL's Prayer of Mending heals MalzSent for 729 points.
.ctor :: RegEx Match :: (04:48:54) MalzPL's Prayer of Mending heals MalzSent for 729 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 729
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 729
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 848
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:54) Mud Ogre is no longer stunned.
.ctor :: (04:48:54) Mud Ogre is no longer stunned.
ParseLine :: (04:48:54) MalzPL's Prayer of Mending heals MalzDruid for 387 points.
.ctor :: (04:48:54) MalzPL's Prayer of Mending heals MalzDruid for 387 points.
.ctor :: RegEx Match :: (04:48:54) MalzPL's Prayer of Mending heals MalzDruid for 387 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 387
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 387
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 852
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:54) MalzSent casts Righteous Word of Binding.
.ctor :: (04:48:54) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:48:54) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 854
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:54) MalzSent's Righteous Word of Binding smites Mud Ogre for 431 points of damage!
.ctor :: (04:48:54) MalzSent's Righteous Word of Binding smites Mud Ogre for 431 points of damage!
.ctor :: RegEx Match :: (04:48:54) MalzSent's Righteous Word of Binding smites Mud Ogre for 431 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 431
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 431
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 856
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:48:54) MalzSent casts Righteous Word of Binding.
.ctor :: (04:48:54) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:48:54) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 858
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:54) Moss Ogre's Earthquake hurts you for 387 points of damage.
.ctor :: (04:48:54) Moss Ogre's Earthquake hurts you for 387 points of damage.
.ctor :: RegEx Match :: (04:48:54) Moss Ogre's Earthquake hurts you for 387 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 387
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 387
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 860
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:54) Moss Ogre's Earthquake hurts MalzPL for 568 points of damage.
.ctor :: (04:48:54) Moss Ogre's Earthquake hurts MalzPL for 568 points of damage.
.ctor :: RegEx Match :: (04:48:54) Moss Ogre's Earthquake hurts MalzPL for 568 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 568
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 568
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 862
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:54) Moss Ogre's Earthquake hurts MalzSent for 363 points of damage.
.ctor :: (04:48:54) Moss Ogre's Earthquake hurts MalzSent for 363 points of damage.
.ctor :: RegEx Match :: (04:48:54) Moss Ogre's Earthquake hurts MalzSent for 363 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 363
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 363
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 864
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:54) Moss Ogre's Earthquake hurts MalzDruid for 602 points of damage.
.ctor :: (04:48:54) Moss Ogre's Earthquake hurts MalzDruid for 602 points of damage.
.ctor :: RegEx Match :: (04:48:54) Moss Ogre's Earthquake hurts MalzDruid for 602 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 602
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 602
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 866
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:54) MalzSent hits the Mud Ogre for 102 points of damage.
.ctor :: (04:48:54) MalzSent hits the Mud Ogre for 102 points of damage.
.ctor :: RegEx Match :: (04:48:54) MalzSent hits the Mud Ogre for 102 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 102
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 102
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 868
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:54) MalzPL hits the Moss Ogre for 28 points of damage.
.ctor :: (04:48:54) MalzPL hits the Moss Ogre for 28 points of damage.
.ctor :: RegEx Match :: (04:48:54) MalzPL hits the Moss Ogre for 28 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 28
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 28
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 870
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:54) MalzDruid hits the Moss Ogre for 21 points of damage.
.ctor :: (04:48:54) MalzDruid hits the Moss Ogre for 21 points of damage.
.ctor :: RegEx Match :: (04:48:54) MalzDruid hits the Moss Ogre for 21 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 21
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 21
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 872
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:54) MalzDruid casts Prayer of Mending.
.ctor :: (04:48:54) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:54) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 874
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:54) MalzDruid's Prayer of Mending heals MalzPL for 550 points.
.ctor :: (04:48:54) MalzDruid's Prayer of Mending heals MalzPL for 550 points.
.ctor :: RegEx Match :: (04:48:54) MalzDruid's Prayer of Mending heals MalzPL for 550 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 550
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 550
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 876
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:54) MalzDruid's Prayer of Mending heals you for 600 points.
.ctor :: (04:48:54) MalzDruid's Prayer of Mending heals you for 600 points.
.ctor :: RegEx Match :: (04:48:54) MalzDruid's Prayer of Mending heals you for 600 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 600
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 600
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 878
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:54) MalzDruid's Prayer of Mending heals MalzSent for 766 points.
.ctor :: (04:48:54) MalzDruid's Prayer of Mending heals MalzSent for 766 points.
.ctor :: RegEx Match :: (04:48:54) MalzDruid's Prayer of Mending heals MalzSent for 766 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 766
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 766
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 880
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:54) MalzDruid's Prayer of Mending heals MalzDruid for 579 points.
.ctor :: (04:48:54) MalzDruid's Prayer of Mending heals MalzDruid for 579 points.
.ctor :: RegEx Match :: (04:48:54) MalzDruid's Prayer of Mending heals MalzDruid for 579 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 579
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 579
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 882
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:54) MalzSent hits the Mud Ogre for 110 points of damage.
.ctor :: (04:48:54) MalzSent hits the Mud Ogre for 110 points of damage.
.ctor :: RegEx Match :: (04:48:54) MalzSent hits the Mud Ogre for 110 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 110
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 110
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 884
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:54) MalzPL hits the Moss Ogre for 22 points of damage.
.ctor :: (04:48:54) MalzPL hits the Moss Ogre for 22 points of damage.
.ctor :: RegEx Match :: (04:48:54) MalzPL hits the Moss Ogre for 22 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 22
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 22
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 886
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:54) MalzDruid hits the Moss Ogre for 31 points of damage.
.ctor :: (04:48:54) MalzDruid hits the Moss Ogre for 31 points of damage.
.ctor :: RegEx Match :: (04:48:54) MalzDruid hits the Moss Ogre for 31 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 31
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 31
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 888
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:54) Mud Ogre's stun immunity has worn off.
.ctor :: (04:48:54) Mud Ogre's stun immunity has worn off.
ParseLine :: (04:48:54) MalzSent hits the Mud Ogre for 132 points of damage.
.ctor :: (04:48:54) MalzSent hits the Mud Ogre for 132 points of damage.
.ctor :: RegEx Match :: (04:48:54) MalzSent hits the Mud Ogre for 132 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 132
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 132
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 892
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:54) The Moss Ogre misses MalzDruid.
.ctor :: (04:48:54) The Moss Ogre misses MalzDruid.
.ctor :: RegEx Match :: (04:48:54) The Moss Ogre misses MalzDruid.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 894
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:48:54) The Mud Ogre misses MalzSent.
.ctor :: (04:48:54) The Mud Ogre misses MalzSent.
.ctor :: RegEx Match :: (04:48:54) The Mud Ogre misses MalzSent.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 896
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:48:54) MalzPL hits the Moss Ogre for 31 points of damage.
.ctor :: (04:48:54) MalzPL hits the Moss Ogre for 31 points of damage.
.ctor :: RegEx Match :: (04:48:54) MalzPL hits the Moss Ogre for 31 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 31
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 31
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 898
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:54) MalzDruid hits the Moss Ogre for 27 points of damage.
.ctor :: (04:48:54) MalzDruid hits the Moss Ogre for 27 points of damage.
.ctor :: RegEx Match :: (04:48:54) MalzDruid hits the Moss Ogre for 27 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 27
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 27
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 900
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:54) MalzPL casts Earthquake.
.ctor :: (04:48:54) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:48:54) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 902
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:54) MalzPL's Earthquake hurts Moss Ogre for 1270 points of damage.
.ctor :: (04:48:54) MalzPL's Earthquake hurts Moss Ogre for 1270 points of damage.
.ctor :: RegEx Match :: (04:48:54) MalzPL's Earthquake hurts Moss Ogre for 1270 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1270
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1270
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 904
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:54) MalzPL casts Earthquake.
.ctor :: (04:48:54) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:48:54) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 906
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:54) MalzPL's Earthquake hurts Moss Ogre for 1222 points of damage.
.ctor :: (04:48:54) MalzPL's Earthquake hurts Moss Ogre for 1222 points of damage.
.ctor :: RegEx Match :: (04:48:54) MalzPL's Earthquake hurts Moss Ogre for 1222 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1222
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1222
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 908
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:54) Moss Ogre casts Flesh of Lead.
.ctor :: (04:48:54) Moss Ogre casts Flesh of Lead.
.ctor :: RegEx Match :: (04:48:54) Moss Ogre casts Flesh of Lead.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = Flesh of Lead
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = Flesh of Lead
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 910
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:54) Moss Ogre feels warded against magic.
.ctor :: (04:48:54) Moss Ogre feels warded against magic.
ParseLine :: (04:48:54) MalzSent hits the Mud Ogre for 221 points of damage.
.ctor :: (04:48:54) MalzSent hits the Mud Ogre for 221 points of damage.
.ctor :: RegEx Match :: (04:48:54) MalzSent hits the Mud Ogre for 221 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 221
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 221
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 914
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:54) The Moss Ogre misses MalzPL.
.ctor :: (04:48:54) The Moss Ogre misses MalzPL.
.ctor :: RegEx Match :: (04:48:54) The Moss Ogre misses MalzPL.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 916
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:48:54) MalzDruid hits the Moss Ogre for 31 points of damage.
.ctor :: (04:48:54) MalzDruid hits the Moss Ogre for 31 points of damage.
.ctor :: RegEx Match :: (04:48:54) MalzDruid hits the Moss Ogre for 31 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 31
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 31
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 918
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:54) MalzPL hits the Moss Ogre for 31 points of damage.
.ctor :: (04:48:54) MalzPL hits the Moss Ogre for 31 points of damage.
.ctor :: RegEx Match :: (04:48:54) MalzPL hits the Moss Ogre for 31 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 31
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 31
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 920
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:54) MalzSent hits the Mud Ogre for 124 points of damage.
.ctor :: (04:48:54) MalzSent hits the Mud Ogre for 124 points of damage.
.ctor :: RegEx Match :: (04:48:54) MalzSent hits the Mud Ogre for 124 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 124
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 124
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 922
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:54) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:48:54) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:48:54) Mud Ogre no longer feels as vulnerable to holy magic.
.ctor :: (04:48:54) Mud Ogre no longer feels as vulnerable to holy magic.
ParseLine :: (04:48:54) MalzSent's holy weapon strikes Mud Ogre for 1525 points of damage!
.ctor :: (04:48:54) MalzSent's holy weapon strikes Mud Ogre for 1525 points of damage!
.ctor :: RegEx Match :: (04:48:54) MalzSent's holy weapon strikes Mud Ogre for 1525 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = holy weapon
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1525
.ctor :: RegEx Match :: Value_Type = strike
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = holy weapon
ParseLine :: AddCombatAction :: Value      = 1525
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 928
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = strike
ParseLine :: (04:48:54) [Combat] Info: The Mud Ogre has died!
.ctor :: (04:48:54) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: (04:48:54) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 930
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:48:54) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:48:54) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:48:54) MalzDruid casts Earthquake.
.ctor :: (04:48:54) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:48:54) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 934
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:54) MalzDruid's Earthquake hurts Moss Ogre for 1299 points of damage.
.ctor :: (04:48:54) MalzDruid's Earthquake hurts Moss Ogre for 1299 points of damage.
.ctor :: RegEx Match :: (04:48:54) MalzDruid's Earthquake hurts Moss Ogre for 1299 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:54
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1299
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1299
ParseLine :: AddCombatAction :: Time       = 04:48:54
ParseLine :: AddCombatAction :: Time_Sorter= 936
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:55) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:48:55) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:48:55) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 938
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:48:55) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:48:55) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:48:55) Moss Ogre's warding fades.
.ctor :: (04:48:55) Moss Ogre's warding fades.
ParseLine :: (04:48:55) MalzDruid's Earthquake hurts Moss Ogre for 1220 points of damage.
.ctor :: (04:48:55) MalzDruid's Earthquake hurts Moss Ogre for 1220 points of damage.
.ctor :: RegEx Match :: (04:48:55) MalzDruid's Earthquake hurts Moss Ogre for 1220 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1220
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1220
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 944
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:55) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:48:55) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:48:55) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 946
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:48:55) MalzDruid casts Call Lightning.
.ctor :: (04:48:55) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:48:55) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 948
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:55) Moss Ogre is stunned!
.ctor :: (04:48:55) Moss Ogre is stunned!
ParseLine :: (04:48:55) MalzSent casts Righteous Word of Binding.
.ctor :: (04:48:55) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:48:55) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 952
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:55) MalzSent's Righteous Word of Binding smites Moss Ogre for 607 points of damage!
.ctor :: (04:48:55) MalzSent's Righteous Word of Binding smites Moss Ogre for 607 points of damage!
.ctor :: RegEx Match :: (04:48:55) MalzSent's Righteous Word of Binding smites Moss Ogre for 607 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 607
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 607
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 954
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:48:55) MalzSent casts Righteous Word of Binding.
.ctor :: (04:48:55) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:48:55) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 956
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:55) MalzDruid's Call Lightning shocks Moss Ogre for 988 points of damage!
.ctor :: (04:48:55) MalzDruid's Call Lightning shocks Moss Ogre for 988 points of damage!
.ctor :: RegEx Match :: (04:48:55) MalzDruid's Call Lightning shocks Moss Ogre for 988 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 988
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 988
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 958
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:48:55) MalzPL casts Prayer of Mending.
.ctor :: (04:48:55) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:55) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 960
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:55) MalzPL's Prayer of Mending heals MalzPL for 662 points.
.ctor :: (04:48:55) MalzPL's Prayer of Mending heals MalzPL for 662 points.
.ctor :: RegEx Match :: (04:48:55) MalzPL's Prayer of Mending heals MalzPL for 662 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 662
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 662
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 962
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:55) MalzPL's Prayer of Mending heals you for 553 points.
.ctor :: (04:48:55) MalzPL's Prayer of Mending heals you for 553 points.
.ctor :: RegEx Match :: (04:48:55) MalzPL's Prayer of Mending heals you for 553 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 553
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 553
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 964
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:55) MalzPL's Prayer of Mending heals MalzSent for 548 points.
.ctor :: (04:48:55) MalzPL's Prayer of Mending heals MalzSent for 548 points.
.ctor :: RegEx Match :: (04:48:55) MalzPL's Prayer of Mending heals MalzSent for 548 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 548
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 548
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 966
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:55) MalzPL's Prayer of Mending heals MalzDruid for 724 points.
.ctor :: (04:48:55) MalzPL's Prayer of Mending heals MalzDruid for 724 points.
.ctor :: RegEx Match :: (04:48:55) MalzPL's Prayer of Mending heals MalzDruid for 724 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 724
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 724
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 968
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:55) Moss Ogre is no longer stunned.
.ctor :: (04:48:55) Moss Ogre is no longer stunned.
ParseLine :: (04:48:55) Moss Ogre casts Earthquake.
.ctor :: (04:48:55) Moss Ogre casts Earthquake.
.ctor :: RegEx Match :: (04:48:55) Moss Ogre casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 972
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:55) Moss Ogre's Earthquake hurts you for 372 points of damage.
.ctor :: (04:48:55) Moss Ogre's Earthquake hurts you for 372 points of damage.
.ctor :: RegEx Match :: (04:48:55) Moss Ogre's Earthquake hurts you for 372 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 372
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 372
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 974
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:55) Moss Ogre's Earthquake hurts MalzPL for 747 points of damage.
.ctor :: (04:48:55) Moss Ogre's Earthquake hurts MalzPL for 747 points of damage.
.ctor :: RegEx Match :: (04:48:55) Moss Ogre's Earthquake hurts MalzPL for 747 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 747
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 747
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 976
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:55) Moss Ogre's Earthquake hurts MalzSent for 409 points of damage.
.ctor :: (04:48:55) Moss Ogre's Earthquake hurts MalzSent for 409 points of damage.
.ctor :: RegEx Match :: (04:48:55) Moss Ogre's Earthquake hurts MalzSent for 409 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 409
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 409
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 978
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:55) Moss Ogre's Earthquake hurts MalzDruid for 513 points of damage.
.ctor :: (04:48:55) Moss Ogre's Earthquake hurts MalzDruid for 513 points of damage.
.ctor :: RegEx Match :: (04:48:55) Moss Ogre's Earthquake hurts MalzDruid for 513 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 513
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 513
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 980
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:55) MalzPL hits the Moss Ogre for 36 points of damage.
.ctor :: (04:48:55) MalzPL hits the Moss Ogre for 36 points of damage.
.ctor :: RegEx Match :: (04:48:55) MalzPL hits the Moss Ogre for 36 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 36
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 36
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 982
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:55) MalzSent hits the Moss Ogre for 137 points of damage.
.ctor :: (04:48:55) MalzSent hits the Moss Ogre for 137 points of damage.
.ctor :: RegEx Match :: (04:48:55) MalzSent hits the Moss Ogre for 137 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 137
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 137
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 984
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:55) MalzDruid hits the Moss Ogre for 30 points of damage.
.ctor :: (04:48:55) MalzDruid hits the Moss Ogre for 30 points of damage.
.ctor :: RegEx Match :: (04:48:55) MalzDruid hits the Moss Ogre for 30 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 30
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 30
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 986
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:55) MalzDruid casts Prayer of Mending.
.ctor :: (04:48:55) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:55) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 988
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:55) MalzDruid's Prayer of Mending heals MalzPL for 661 points.
.ctor :: (04:48:55) MalzDruid's Prayer of Mending heals MalzPL for 661 points.
.ctor :: RegEx Match :: (04:48:55) MalzDruid's Prayer of Mending heals MalzPL for 661 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 661
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 661
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 990
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:55) MalzDruid's Prayer of Mending heals you for 761 points.
.ctor :: (04:48:55) MalzDruid's Prayer of Mending heals you for 761 points.
.ctor :: RegEx Match :: (04:48:55) MalzDruid's Prayer of Mending heals you for 761 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 761
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 761
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 992
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:55) MalzDruid's Prayer of Mending heals MalzSent for 592 points.
.ctor :: (04:48:55) MalzDruid's Prayer of Mending heals MalzSent for 592 points.
.ctor :: RegEx Match :: (04:48:55) MalzDruid's Prayer of Mending heals MalzSent for 592 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 592
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 592
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 994
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:55) MalzDruid's Prayer of Mending heals MalzDruid for 488 points.
.ctor :: (04:48:55) MalzDruid's Prayer of Mending heals MalzDruid for 488 points.
.ctor :: RegEx Match :: (04:48:55) MalzDruid's Prayer of Mending heals MalzDruid for 488 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 488
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 488
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 996
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:55) MalzSent hits the Moss Ogre for 130 points of damage.
.ctor :: (04:48:55) MalzSent hits the Moss Ogre for 130 points of damage.
.ctor :: RegEx Match :: (04:48:55) MalzSent hits the Moss Ogre for 130 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 130
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 130
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 998
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:55) MalzDruid hits the Moss Ogre for 40 points of damage.
.ctor :: (04:48:55) MalzDruid hits the Moss Ogre for 40 points of damage.
.ctor :: RegEx Match :: (04:48:55) MalzDruid hits the Moss Ogre for 40 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 40
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 40
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 1000
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:55) MalzPL hits the Moss Ogre for 19 points of damage.
.ctor :: (04:48:55) MalzPL hits the Moss Ogre for 19 points of damage.
.ctor :: RegEx Match :: (04:48:55) MalzPL hits the Moss Ogre for 19 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 19
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 19
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 1002
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:55) Moss Ogre's stun immunity has worn off.
.ctor :: (04:48:55) Moss Ogre's stun immunity has worn off.
ParseLine :: (04:48:55) The Moss Ogre misses MalzDruid.
.ctor :: (04:48:55) The Moss Ogre misses MalzDruid.
.ctor :: RegEx Match :: (04:48:55) The Moss Ogre misses MalzDruid.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 1006
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:48:55) MalzSent hits the Moss Ogre for 145 points of damage.
.ctor :: (04:48:55) MalzSent hits the Moss Ogre for 145 points of damage.
.ctor :: RegEx Match :: (04:48:55) MalzSent hits the Moss Ogre for 145 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 145
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 145
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 1008
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:55) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:48:55) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:48:55) MalzPL casts Earthquake.
.ctor :: (04:48:55) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:48:55) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 1012
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:55) MalzPL's Earthquake hurts Moss Ogre for 1025 points of damage.
.ctor :: (04:48:55) MalzPL's Earthquake hurts Moss Ogre for 1025 points of damage.
.ctor :: RegEx Match :: (04:48:55) MalzPL's Earthquake hurts Moss Ogre for 1025 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1025
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1025
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 1014
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:55) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:48:55) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:48:55) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 1016
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:48:55) MalzPL casts Prayer of Mending.
.ctor :: (04:48:55) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:55) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 1018
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:55) MalzPL's Prayer of Mending heals MalzPL for 589 points.
.ctor :: (04:48:55) MalzPL's Prayer of Mending heals MalzPL for 589 points.
.ctor :: RegEx Match :: (04:48:55) MalzPL's Prayer of Mending heals MalzPL for 589 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 589
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 589
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 1020
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:55) MalzPL's Prayer of Mending heals you for 663 points.
.ctor :: (04:48:55) MalzPL's Prayer of Mending heals you for 663 points.
.ctor :: RegEx Match :: (04:48:55) MalzPL's Prayer of Mending heals you for 663 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 663
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 663
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 1022
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:55) MalzPL's Prayer of Mending heals MalzSent for 513 points.
.ctor :: (04:48:55) MalzPL's Prayer of Mending heals MalzSent for 513 points.
.ctor :: RegEx Match :: (04:48:55) MalzPL's Prayer of Mending heals MalzSent for 513 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 513
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 513
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 1024
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:55) MalzPL's Prayer of Mending heals MalzDruid for 668 points.
.ctor :: (04:48:55) MalzPL's Prayer of Mending heals MalzDruid for 668 points.
.ctor :: RegEx Match :: (04:48:55) MalzPL's Prayer of Mending heals MalzDruid for 668 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 668
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 668
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 1026
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:55) MalzDruid casts Prayer of Mending.
.ctor :: (04:48:55) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:55) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 1028
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:55) MalzDruid's Prayer of Mending heals MalzPL for 360 points.
.ctor :: (04:48:55) MalzDruid's Prayer of Mending heals MalzPL for 360 points.
.ctor :: RegEx Match :: (04:48:55) MalzDruid's Prayer of Mending heals MalzPL for 360 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 360
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 360
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 1030
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:55) MalzDruid's Prayer of Mending heals you for 630 points.
.ctor :: (04:48:55) MalzDruid's Prayer of Mending heals you for 630 points.
.ctor :: RegEx Match :: (04:48:55) MalzDruid's Prayer of Mending heals you for 630 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 630
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 630
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 1032
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:55) MalzDruid's Prayer of Mending heals MalzSent for 594 points.
.ctor :: (04:48:55) MalzDruid's Prayer of Mending heals MalzSent for 594 points.
.ctor :: RegEx Match :: (04:48:55) MalzDruid's Prayer of Mending heals MalzSent for 594 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 594
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 594
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 1034
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:55) MalzDruid's Prayer of Mending heals MalzDruid for 407 points.
.ctor :: (04:48:55) MalzDruid's Prayer of Mending heals MalzDruid for 407 points.
.ctor :: RegEx Match :: (04:48:55) MalzDruid's Prayer of Mending heals MalzDruid for 407 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 407
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 407
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 1036
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:55) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: (04:48:55) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: RegEx Match :: (04:48:55) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = HardC
.ctor :: RegEx Match :: Ability    = Challenge
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = attack
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 26
.ctor :: RegEx Match :: RegExDesc  = Taunt :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<target>.*) (?<type>[atck]*)s? (?<source>.*)
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = HardC
ParseLine :: AddCombatAction :: Ability    = Challenge
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 1038
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = attack
ParseLine :: (04:48:55) MalzPL casts Prayer of Mending.
.ctor :: (04:48:55) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:55) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 1040
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:55) MalzPL's Prayer of Mending heals MalzPL for 595 points.
.ctor :: (04:48:55) MalzPL's Prayer of Mending heals MalzPL for 595 points.
.ctor :: RegEx Match :: (04:48:55) MalzPL's Prayer of Mending heals MalzPL for 595 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 595
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 595
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 1042
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:55) MalzPL's Prayer of Mending heals you for 638 points.
.ctor :: (04:48:55) MalzPL's Prayer of Mending heals you for 638 points.
.ctor :: RegEx Match :: (04:48:55) MalzPL's Prayer of Mending heals you for 638 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 638
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 638
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 1044
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:55) MalzPL's Prayer of Mending heals MalzSent for 481 points.
.ctor :: (04:48:55) MalzPL's Prayer of Mending heals MalzSent for 481 points.
.ctor :: RegEx Match :: (04:48:55) MalzPL's Prayer of Mending heals MalzSent for 481 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 481
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 481
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 1046
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:55) MalzPL's Prayer of Mending heals MalzDruid for 721 points.
.ctor :: (04:48:55) MalzPL's Prayer of Mending heals MalzDruid for 721 points.
.ctor :: RegEx Match :: (04:48:55) MalzPL's Prayer of Mending heals MalzDruid for 721 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 721
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 721
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 1048
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:55) MalzDruid casts Prayer of Mending.
.ctor :: (04:48:55) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:55) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 1050
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:55) MalzDruid's Prayer of Mending heals MalzPL for 703 points.
.ctor :: (04:48:55) MalzDruid's Prayer of Mending heals MalzPL for 703 points.
.ctor :: RegEx Match :: (04:48:55) MalzDruid's Prayer of Mending heals MalzPL for 703 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 703
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 703
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 1052
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:55) MalzDruid's Prayer of Mending heals you for 545 points.
.ctor :: (04:48:55) MalzDruid's Prayer of Mending heals you for 545 points.
.ctor :: RegEx Match :: (04:48:55) MalzDruid's Prayer of Mending heals you for 545 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 545
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 545
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 1054
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:55) MalzDruid's Prayer of Mending heals MalzSent for 374 points.
.ctor :: (04:48:55) MalzDruid's Prayer of Mending heals MalzSent for 374 points.
.ctor :: RegEx Match :: (04:48:55) MalzDruid's Prayer of Mending heals MalzSent for 374 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 374
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 374
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 1056
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:55) MalzDruid's Prayer of Mending heals MalzDruid for 491 points.
.ctor :: (04:48:55) MalzDruid's Prayer of Mending heals MalzDruid for 491 points.
.ctor :: RegEx Match :: (04:48:55) MalzDruid's Prayer of Mending heals MalzDruid for 491 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 491
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 491
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 1058
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:55) MalzSent casts Holy Word of Binding.
.ctor :: (04:48:55) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:48:55) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 1060
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:55) MalzSent casts Holy Word of Binding.
.ctor :: (04:48:55) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:48:55) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 1062
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:55) MalzPL casts Earthquake.
.ctor :: (04:48:55) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:48:55) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 1064
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:55) MalzPL's Earthquake hurts Moss Ogre for 1421 points of damage.
.ctor :: (04:48:55) MalzPL's Earthquake hurts Moss Ogre for 1421 points of damage.
.ctor :: RegEx Match :: (04:48:55) MalzPL's Earthquake hurts Moss Ogre for 1421 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:55
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1421
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1421
ParseLine :: AddCombatAction :: Time       = 04:48:55
ParseLine :: AddCombatAction :: Time_Sorter= 1066
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:56) MalzPL casts Earthquake.
.ctor :: (04:48:56) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:48:56) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1068
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:56) The Moss Ogre misses YOU!
.ctor :: (04:48:56) The Moss Ogre misses YOU!
.ctor :: RegEx Match :: (04:48:56) The Moss Ogre misses YOU!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = YOU
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1070
ParseLine :: AddCombatAction :: Target     = YOU
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:48:56) MalzDruid casts Earthquake.
.ctor :: (04:48:56) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:48:56) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1072
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:56) MalzDruid's Earthquake hurts Moss Ogre for 573 points of damage.
.ctor :: (04:48:56) MalzDruid's Earthquake hurts Moss Ogre for 573 points of damage.
.ctor :: RegEx Match :: (04:48:56) MalzDruid's Earthquake hurts Moss Ogre for 573 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 573
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 573
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1074
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:56) MalzDruid casts Earthquake.
.ctor :: (04:48:56) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:48:56) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1076
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:56) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:48:56) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:48:56) Moss Ogre no longer feels as vulnerable to holy magic.
.ctor :: (04:48:56) Moss Ogre no longer feels as vulnerable to holy magic.
ParseLine :: (04:48:56) MalzSent casts Righteous Word of Binding.
.ctor :: (04:48:56) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:48:56) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1082
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:56) MalzSent's Righteous Word of Binding smites Moss Ogre for 1123 points of damage!
.ctor :: (04:48:56) MalzSent's Righteous Word of Binding smites Moss Ogre for 1123 points of damage!
.ctor :: RegEx Match :: (04:48:56) MalzSent's Righteous Word of Binding smites Moss Ogre for 1123 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1123
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 1123
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1084
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:48:56) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:48:56) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:48:56) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1086
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:48:56) MalzSent casts Righteous Word of Binding.
.ctor :: (04:48:56) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:48:56) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1088
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:56) The Vorok Mud-Chief misses MalzSent.
.ctor :: (04:48:56) The Vorok Mud-Chief misses MalzSent.
.ctor :: RegEx Match :: (04:48:56) The Vorok Mud-Chief misses MalzSent.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = Vorok Mud-Chief
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1090
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:48:56) MalzSent hits the Vorok Mud-Chief for 115 points of damage.
.ctor :: (04:48:56) MalzSent hits the Vorok Mud-Chief for 115 points of damage.
.ctor :: RegEx Match :: (04:48:56) MalzSent hits the Vorok Mud-Chief for 115 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 115
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 115
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1092
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:56) MalzDruid casts Call Lightning.
.ctor :: (04:48:56) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:48:56) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1094
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:56) MalzDruid casts Call Lightning.
.ctor :: (04:48:56) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:48:56) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1096
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:56) Vorok Mud-Chief is stunned!
.ctor :: (04:48:56) Vorok Mud-Chief is stunned!
ParseLine :: (04:48:56) MalzDruid casts Call Lightning.
.ctor :: (04:48:56) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:48:56) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1100
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:56) MalzDruid's Call Lightning shocks Vorok Mud-Chief for 809 points of damage!
.ctor :: (04:48:56) MalzDruid's Call Lightning shocks Vorok Mud-Chief for 809 points of damage!
.ctor :: RegEx Match :: (04:48:56) MalzDruid's Call Lightning shocks Vorok Mud-Chief for 809 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 809
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 809
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1102
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:48:56) MalzSent hits the Vorok Mud-Chief for 194 points of damage.
.ctor :: (04:48:56) MalzSent hits the Vorok Mud-Chief for 194 points of damage.
.ctor :: RegEx Match :: (04:48:56) MalzSent hits the Vorok Mud-Chief for 194 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 194
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 194
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1104
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:56) MalzPL casts Prayer of Mending.
.ctor :: (04:48:56) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:56) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1106
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:56) MalzPL's Prayer of Mending heals MalzPL for 442 points.
.ctor :: (04:48:56) MalzPL's Prayer of Mending heals MalzPL for 442 points.
.ctor :: RegEx Match :: (04:48:56) MalzPL's Prayer of Mending heals MalzPL for 442 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 442
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 442
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1108
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:56) MalzPL's Prayer of Mending heals you for 420 points.
.ctor :: (04:48:56) MalzPL's Prayer of Mending heals you for 420 points.
.ctor :: RegEx Match :: (04:48:56) MalzPL's Prayer of Mending heals you for 420 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 420
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 420
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1110
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:56) MalzPL's Prayer of Mending heals MalzSent for 636 points.
.ctor :: (04:48:56) MalzPL's Prayer of Mending heals MalzSent for 636 points.
.ctor :: RegEx Match :: (04:48:56) MalzPL's Prayer of Mending heals MalzSent for 636 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 636
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 636
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1112
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:56) MalzPL's Prayer of Mending heals MalzDruid for 459 points.
.ctor :: (04:48:56) MalzPL's Prayer of Mending heals MalzDruid for 459 points.
.ctor :: RegEx Match :: (04:48:56) MalzPL's Prayer of Mending heals MalzDruid for 459 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 459
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 459
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1114
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:56) Vorok Mud-Chief is no longer stunned.
.ctor :: (04:48:56) Vorok Mud-Chief is no longer stunned.
ParseLine :: (04:48:56) MalzSent hits the Vorok Mud-Chief for 113 points of damage.
.ctor :: (04:48:56) MalzSent hits the Vorok Mud-Chief for 113 points of damage.
.ctor :: RegEx Match :: (04:48:56) MalzSent hits the Vorok Mud-Chief for 113 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 113
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 113
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1118
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:56) The Vorok Mud-Chief misses MalzPL.
.ctor :: (04:48:56) The Vorok Mud-Chief misses MalzPL.
.ctor :: RegEx Match :: (04:48:56) The Vorok Mud-Chief misses MalzPL.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = Vorok Mud-Chief
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1120
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:48:56) MalzPL hits the Vorok Mud-Chief for 39 points of damage.
.ctor :: (04:48:56) MalzPL hits the Vorok Mud-Chief for 39 points of damage.
.ctor :: RegEx Match :: (04:48:56) MalzPL hits the Vorok Mud-Chief for 39 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 39
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 39
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1122
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:56) MalzSent hits the Vorok Mud-Chief for 123 points of damage.
.ctor :: (04:48:56) MalzSent hits the Vorok Mud-Chief for 123 points of damage.
.ctor :: RegEx Match :: (04:48:56) MalzSent hits the Vorok Mud-Chief for 123 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 123
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 123
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1124
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:56) MalzDruid casts Prayer of Mending.
.ctor :: (04:48:56) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:56) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1126
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:56) MalzDruid's Prayer of Mending heals MalzPL for 796 points.
.ctor :: (04:48:56) MalzDruid's Prayer of Mending heals MalzPL for 796 points.
.ctor :: RegEx Match :: (04:48:56) MalzDruid's Prayer of Mending heals MalzPL for 796 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 796
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 796
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1128
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:56) MalzDruid's Prayer of Mending heals you for 600 points.
.ctor :: (04:48:56) MalzDruid's Prayer of Mending heals you for 600 points.
.ctor :: RegEx Match :: (04:48:56) MalzDruid's Prayer of Mending heals you for 600 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 600
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 600
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1130
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:56) MalzDruid's Prayer of Mending heals MalzSent for 581 points.
.ctor :: (04:48:56) MalzDruid's Prayer of Mending heals MalzSent for 581 points.
.ctor :: RegEx Match :: (04:48:56) MalzDruid's Prayer of Mending heals MalzSent for 581 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 581
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 581
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1132
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:56) MalzDruid's Prayer of Mending heals MalzDruid for 699 points.
.ctor :: (04:48:56) MalzDruid's Prayer of Mending heals MalzDruid for 699 points.
.ctor :: RegEx Match :: (04:48:56) MalzDruid's Prayer of Mending heals MalzDruid for 699 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 699
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 699
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1134
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:56) MalzPL hits the Vorok Mud-Chief for 42 points of damage.
.ctor :: (04:48:56) MalzPL hits the Vorok Mud-Chief for 42 points of damage.
.ctor :: RegEx Match :: (04:48:56) MalzPL hits the Vorok Mud-Chief for 42 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 42
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 42
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1136
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:56) MalzSent hits the Vorok Mud-Chief for 133 points of damage.
.ctor :: (04:48:56) MalzSent hits the Vorok Mud-Chief for 133 points of damage.
.ctor :: RegEx Match :: (04:48:56) MalzSent hits the Vorok Mud-Chief for 133 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 133
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 133
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1138
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:56) Vorok Mud-Chief's stun immunity has worn off.
.ctor :: (04:48:56) Vorok Mud-Chief's stun immunity has worn off.
ParseLine :: (04:48:56) MalzPL hits the Vorok Mud-Chief for 34 points of damage.
.ctor :: (04:48:56) MalzPL hits the Vorok Mud-Chief for 34 points of damage.
.ctor :: RegEx Match :: (04:48:56) MalzPL hits the Vorok Mud-Chief for 34 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 34
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 34
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1142
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:56) MalzSent hits the Vorok Mud-Chief for 236 points of damage.
.ctor :: (04:48:56) MalzSent hits the Vorok Mud-Chief for 236 points of damage.
.ctor :: RegEx Match :: (04:48:56) MalzSent hits the Vorok Mud-Chief for 236 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 236
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 236
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1144
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:56) MalzPL casts Earthquake.
.ctor :: (04:48:56) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:48:56) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1146
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:56) MalzDruid hits the Vorok Mud-Chief for 41 points of damage.
.ctor :: (04:48:56) MalzDruid hits the Vorok Mud-Chief for 41 points of damage.
.ctor :: RegEx Match :: (04:48:56) MalzDruid hits the Vorok Mud-Chief for 41 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 41
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 41
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1148
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:56) MalzDruid blocks the Vorok Mud-Chief's attack.
.ctor :: (04:48:56) MalzDruid blocks the Vorok Mud-Chief's attack.
ParseLine :: (04:48:56) MalzSent casts Righteous Word of Binding.
.ctor :: (04:48:56) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:48:56) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1152
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:56) MalzSent hits the Vorok Mud-Chief for 112 points of damage.
.ctor :: (04:48:56) MalzSent hits the Vorok Mud-Chief for 112 points of damage.
.ctor :: RegEx Match :: (04:48:56) MalzSent hits the Vorok Mud-Chief for 112 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 112
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 112
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1154
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:56) MalzPL hits the Vorok Mud-Chief for 37 points of damage.
.ctor :: (04:48:56) MalzPL hits the Vorok Mud-Chief for 37 points of damage.
.ctor :: RegEx Match :: (04:48:56) MalzPL hits the Vorok Mud-Chief for 37 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 37
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 37
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1156
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:56) MalzDruid hits the Vorok Mud-Chief for 28 points of damage.
.ctor :: (04:48:56) MalzDruid hits the Vorok Mud-Chief for 28 points of damage.
.ctor :: RegEx Match :: (04:48:56) MalzDruid hits the Vorok Mud-Chief for 28 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 28
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 28
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1158
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:56) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:48:56) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:48:56) MalzDruid casts Earthquake.
.ctor :: (04:48:56) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:48:56) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1162
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:56) MalzDruid's Earthquake hurts Vorok Mud-Chief for 1067 points of damage.
.ctor :: (04:48:56) MalzDruid's Earthquake hurts Vorok Mud-Chief for 1067 points of damage.
.ctor :: RegEx Match :: (04:48:56) MalzDruid's Earthquake hurts Vorok Mud-Chief for 1067 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 1067
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1067
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1164
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:56) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: (04:48:56) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: RegEx Match :: (04:48:56) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = Vorok Mud-Chief
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1166
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:48:56) MalzPL casts Prayer of Mending.
.ctor :: (04:48:56) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:56) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1168
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:56) MalzPL's Prayer of Mending heals MalzPL for 559 points.
.ctor :: (04:48:56) MalzPL's Prayer of Mending heals MalzPL for 559 points.
.ctor :: RegEx Match :: (04:48:56) MalzPL's Prayer of Mending heals MalzPL for 559 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 559
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 559
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1170
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:56) MalzPL's Prayer of Mending heals you for 665 points.
.ctor :: (04:48:56) MalzPL's Prayer of Mending heals you for 665 points.
.ctor :: RegEx Match :: (04:48:56) MalzPL's Prayer of Mending heals you for 665 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 665
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 665
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1172
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:56) MalzPL's Prayer of Mending heals MalzSent for 501 points.
.ctor :: (04:48:56) MalzPL's Prayer of Mending heals MalzSent for 501 points.
.ctor :: RegEx Match :: (04:48:56) MalzPL's Prayer of Mending heals MalzSent for 501 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 501
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 501
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1174
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:56) MalzPL's Prayer of Mending heals MalzDruid for 549 points.
.ctor :: (04:48:56) MalzPL's Prayer of Mending heals MalzDruid for 549 points.
.ctor :: RegEx Match :: (04:48:56) MalzPL's Prayer of Mending heals MalzDruid for 549 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 549
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 549
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1176
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:56) MalzDruid casts Prayer of Mending.
.ctor :: (04:48:56) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:56) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1178
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:56) MalzDruid's Prayer of Mending heals MalzPL for 745 points.
.ctor :: (04:48:56) MalzDruid's Prayer of Mending heals MalzPL for 745 points.
.ctor :: RegEx Match :: (04:48:56) MalzDruid's Prayer of Mending heals MalzPL for 745 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 745
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 745
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1180
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:56) MalzDruid's Prayer of Mending heals you for 801 points.
.ctor :: (04:48:56) MalzDruid's Prayer of Mending heals you for 801 points.
.ctor :: RegEx Match :: (04:48:56) MalzDruid's Prayer of Mending heals you for 801 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 801
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 801
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1182
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:56) MalzDruid's Prayer of Mending heals MalzSent for 571 points.
.ctor :: (04:48:56) MalzDruid's Prayer of Mending heals MalzSent for 571 points.
.ctor :: RegEx Match :: (04:48:56) MalzDruid's Prayer of Mending heals MalzSent for 571 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 571
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 571
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1184
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:56) MalzDruid's Prayer of Mending heals MalzDruid for 533 points.
.ctor :: (04:48:56) MalzDruid's Prayer of Mending heals MalzDruid for 533 points.
.ctor :: RegEx Match :: (04:48:56) MalzDruid's Prayer of Mending heals MalzDruid for 533 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 533
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 533
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1186
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:56) [Combat] Info: The Mud Ogre attacks HardC
.ctor :: (04:48:56) [Combat] Info: The Mud Ogre attacks HardC
.ctor :: RegEx Match :: (04:48:56) [Combat] Info: The Mud Ogre attacks HardC
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = HardC
.ctor :: RegEx Match :: Ability    = Challenge
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = attack
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 26
.ctor :: RegEx Match :: RegExDesc  = Taunt :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<target>.*) (?<type>[atck]*)s? (?<source>.*)
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = HardC
ParseLine :: AddCombatAction :: Ability    = Challenge
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1188
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = attack
ParseLine :: (04:48:56) MalzPL casts Prayer of Mending.
.ctor :: (04:48:56) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:56) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1190
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:56) MalzPL's Prayer of Mending heals MalzPL for 611 points.
.ctor :: (04:48:56) MalzPL's Prayer of Mending heals MalzPL for 611 points.
.ctor :: RegEx Match :: (04:48:56) MalzPL's Prayer of Mending heals MalzPL for 611 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:56
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 611
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 611
ParseLine :: AddCombatAction :: Time       = 04:48:56
ParseLine :: AddCombatAction :: Time_Sorter= 1192
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:57) MalzPL's Prayer of Mending heals you for 584 points.
.ctor :: (04:48:57) MalzPL's Prayer of Mending heals you for 584 points.
.ctor :: RegEx Match :: (04:48:57) MalzPL's Prayer of Mending heals you for 584 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 584
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 584
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1194
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:57) MalzPL's Prayer of Mending heals MalzSent for 603 points.
.ctor :: (04:48:57) MalzPL's Prayer of Mending heals MalzSent for 603 points.
.ctor :: RegEx Match :: (04:48:57) MalzPL's Prayer of Mending heals MalzSent for 603 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 603
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 603
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1196
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:57) MalzPL's Prayer of Mending heals MalzDruid for 639 points.
.ctor :: (04:48:57) MalzPL's Prayer of Mending heals MalzDruid for 639 points.
.ctor :: RegEx Match :: (04:48:57) MalzPL's Prayer of Mending heals MalzDruid for 639 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 639
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 639
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1198
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:57) The Moss Ogre misses MalzPL.
.ctor :: (04:48:57) The Moss Ogre misses MalzPL.
.ctor :: RegEx Match :: (04:48:57) The Moss Ogre misses MalzPL.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1200
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:48:57) MalzPL hits the Moss Ogre for 22 points of damage.
.ctor :: (04:48:57) MalzPL hits the Moss Ogre for 22 points of damage.
.ctor :: RegEx Match :: (04:48:57) MalzPL hits the Moss Ogre for 22 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 22
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 22
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1202
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:57) MalzPL hits the Moss Ogre for 41 points of damage.
.ctor :: (04:48:57) MalzPL hits the Moss Ogre for 41 points of damage.
.ctor :: RegEx Match :: (04:48:57) MalzPL hits the Moss Ogre for 41 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 41
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 41
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1204
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:57) MalzDruid casts Prayer of Mending.
.ctor :: (04:48:57) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:57) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1206
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:57) MalzDruid's Prayer of Mending heals MalzPL for 427 points.
.ctor :: (04:48:57) MalzDruid's Prayer of Mending heals MalzPL for 427 points.
.ctor :: RegEx Match :: (04:48:57) MalzDruid's Prayer of Mending heals MalzPL for 427 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 427
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 427
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1208
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:57) MalzDruid's Prayer of Mending heals you for 530 points.
.ctor :: (04:48:57) MalzDruid's Prayer of Mending heals you for 530 points.
.ctor :: RegEx Match :: (04:48:57) MalzDruid's Prayer of Mending heals you for 530 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 530
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 530
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1210
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:57) MalzDruid's Prayer of Mending heals MalzSent for 658 points.
.ctor :: (04:48:57) MalzDruid's Prayer of Mending heals MalzSent for 658 points.
.ctor :: RegEx Match :: (04:48:57) MalzDruid's Prayer of Mending heals MalzSent for 658 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 658
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 658
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1212
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:57) MalzDruid's Prayer of Mending heals MalzDruid for 534 points.
.ctor :: (04:48:57) MalzDruid's Prayer of Mending heals MalzDruid for 534 points.
.ctor :: RegEx Match :: (04:48:57) MalzDruid's Prayer of Mending heals MalzDruid for 534 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 534
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 534
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1214
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:57) MalzSent casts Righteous Word of Binding.
.ctor :: (04:48:57) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:48:57) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1216
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:57) MalzSent's Righteous Word of Binding smites Moss Ogre for 818 points of damage!
.ctor :: (04:48:57) MalzSent's Righteous Word of Binding smites Moss Ogre for 818 points of damage!
.ctor :: RegEx Match :: (04:48:57) MalzSent's Righteous Word of Binding smites Moss Ogre for 818 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 818
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 818
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1218
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:48:57) MalzSent casts Righteous Word of Binding.
.ctor :: (04:48:57) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:48:57) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1220
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:57) The Moss Ogre misses MalzDruid.
.ctor :: (04:48:57) The Moss Ogre misses MalzDruid.
.ctor :: RegEx Match :: (04:48:57) The Moss Ogre misses MalzDruid.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1222
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:48:57) MalzDruid hits the Moss Ogre for 35 points of damage.
.ctor :: (04:48:57) MalzDruid hits the Moss Ogre for 35 points of damage.
.ctor :: RegEx Match :: (04:48:57) MalzDruid hits the Moss Ogre for 35 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 35
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 35
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1224
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:57) MalzPL hits the Moss Ogre for 31 points of damage.
.ctor :: (04:48:57) MalzPL hits the Moss Ogre for 31 points of damage.
.ctor :: RegEx Match :: (04:48:57) MalzPL hits the Moss Ogre for 31 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 31
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 31
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1226
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:57) MalzPL casts Earthquake.
.ctor :: (04:48:57) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:48:57) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1228
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:57) MalzPL's Earthquake hurts Mud Ogre for 1106 points of damage.
.ctor :: (04:48:57) MalzPL's Earthquake hurts Mud Ogre for 1106 points of damage.
.ctor :: RegEx Match :: (04:48:57) MalzPL's Earthquake hurts Mud Ogre for 1106 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1106
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1106
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1230
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:57) MalzPL casts Earthquake.
.ctor :: (04:48:57) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:48:57) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1232
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:57) MalzPL's Earthquake hurts Moss Ogre for 1127 points of damage.
.ctor :: (04:48:57) MalzPL's Earthquake hurts Moss Ogre for 1127 points of damage.
.ctor :: RegEx Match :: (04:48:57) MalzPL's Earthquake hurts Moss Ogre for 1127 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1127
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1127
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1234
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:57) MalzDruid hits the Moss Ogre for 39 points of damage.
.ctor :: (04:48:57) MalzDruid hits the Moss Ogre for 39 points of damage.
.ctor :: RegEx Match :: (04:48:57) MalzDruid hits the Moss Ogre for 39 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 39
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 39
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1236
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:57) The Moss Ogre misses MalzPL.
.ctor :: (04:48:57) The Moss Ogre misses MalzPL.
.ctor :: RegEx Match :: (04:48:57) The Moss Ogre misses MalzPL.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1238
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:48:57) MalzPL hits the Moss Ogre for 25 points of damage.
.ctor :: (04:48:57) MalzPL hits the Moss Ogre for 25 points of damage.
.ctor :: RegEx Match :: (04:48:57) MalzPL hits the Moss Ogre for 25 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 25
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 25
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1240
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:57) MalzSent casts Exalted Word of Binding.
.ctor :: (04:48:57) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:48:57) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1242
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:57) MalzSent drains 101 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: (04:48:57) MalzSent drains 101 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:48:57) MalzSent drains 101 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 101
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 101
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1244
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:48:57) MalzSent casts Exalted Word of Binding.
.ctor :: (04:48:57) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:48:57) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1246
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:57) MalzSent drains 144 points of mana from Mud Ogre with Exalted Word of Binding.
.ctor :: (04:48:57) MalzSent drains 144 points of mana from Mud Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:48:57) MalzSent drains 144 points of mana from Mud Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 144
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 144
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1248
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:48:57) MalzSent casts Exalted Word of Binding.
.ctor :: (04:48:57) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:48:57) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1250
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:57) Mud Ogre begins to stumble.
.ctor :: (04:48:57) Mud Ogre begins to stumble.
ParseLine :: (04:48:57) MalzSent casts Exalted Word of Binding.
.ctor :: (04:48:57) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:48:57) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1254
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:57) MalzSent drains 109 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: (04:48:57) MalzSent drains 109 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:48:57) MalzSent drains 109 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 109
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 109
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1256
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:48:57) MalzSent drains 156 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: (04:48:57) MalzSent drains 156 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:48:57) MalzSent drains 156 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 156
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 156
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1258
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:48:57) Moss Ogre begins to stumble.
.ctor :: (04:48:57) Moss Ogre begins to stumble.
ParseLine :: (04:48:57) MalzDruid hits the Moss Ogre for 22 points of damage.
.ctor :: (04:48:57) MalzDruid hits the Moss Ogre for 22 points of damage.
.ctor :: RegEx Match :: (04:48:57) MalzDruid hits the Moss Ogre for 22 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 22
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 22
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1262
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:57) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:48:57) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:48:57) Moss Ogre stops stumbling.
.ctor :: (04:48:57) Moss Ogre stops stumbling.
ParseLine :: (04:48:57) MalzPL hits the Moss Ogre for 43 points of damage.
.ctor :: (04:48:57) MalzPL hits the Moss Ogre for 43 points of damage.
.ctor :: RegEx Match :: (04:48:57) MalzPL hits the Moss Ogre for 43 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 43
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 43
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1268
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:57) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:48:57) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:48:57) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1270
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:48:57) MalzDruid casts Earthquake.
.ctor :: (04:48:57) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:48:57) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1272
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:57) MalzDruid's Earthquake hurts Mud Ogre for 1077 points of damage.
.ctor :: (04:48:57) MalzDruid's Earthquake hurts Mud Ogre for 1077 points of damage.
.ctor :: RegEx Match :: (04:48:57) MalzDruid's Earthquake hurts Mud Ogre for 1077 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1077
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1077
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1274
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:57) MalzDruid casts Earthquake.
.ctor :: (04:48:57) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:48:57) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1276
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:57) MalzDruid casts Call Lightning.
.ctor :: (04:48:57) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:48:57) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1278
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:57) MalzDruid casts Call Lightning.
.ctor :: (04:48:57) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:48:57) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1280
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:57) Tavok Chief-brother is stunned!
.ctor :: (04:48:57) Tavok Chief-brother is stunned!
ParseLine :: (04:48:57) MalzDruid casts Call Lightning.
.ctor :: (04:48:57) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:48:57) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1284
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:57) Mud Ogre stops stumbling.
.ctor :: (04:48:57) Mud Ogre stops stumbling.
ParseLine :: (04:48:57) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:48:57) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:48:57) MalzDruid's Call Lightning shocks Tavok Chief-brother for 679 points of damage!
.ctor :: (04:48:57) MalzDruid's Call Lightning shocks Tavok Chief-brother for 679 points of damage!
.ctor :: RegEx Match :: (04:48:57) MalzDruid's Call Lightning shocks Tavok Chief-brother for 679 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 679
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 679
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1290
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:48:57) MalzDruid's Call Lightning shocks Mud Ogre for 721 points of damage!
.ctor :: (04:48:57) MalzDruid's Call Lightning shocks Mud Ogre for 721 points of damage!
.ctor :: RegEx Match :: (04:48:57) MalzDruid's Call Lightning shocks Mud Ogre for 721 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 721
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 721
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1292
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:48:57) [Combat] Info: The Mud Ogre has died!
.ctor :: (04:48:57) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: (04:48:57) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1294
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:48:57) MalzPL casts Prayer of Mending.
.ctor :: (04:48:57) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:57) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1296
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:57) MalzPL's Prayer of Mending heals you for 399 points.
.ctor :: (04:48:57) MalzPL's Prayer of Mending heals you for 399 points.
.ctor :: RegEx Match :: (04:48:57) MalzPL's Prayer of Mending heals you for 399 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 399
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 399
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1298
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:57) MalzPL's Prayer of Mending heals MalzPL for 635 points.
.ctor :: (04:48:57) MalzPL's Prayer of Mending heals MalzPL for 635 points.
.ctor :: RegEx Match :: (04:48:57) MalzPL's Prayer of Mending heals MalzPL for 635 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 635
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 635
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1300
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:57) MalzPL's Prayer of Mending heals MalzSent for 573 points.
.ctor :: (04:48:57) MalzPL's Prayer of Mending heals MalzSent for 573 points.
.ctor :: RegEx Match :: (04:48:57) MalzPL's Prayer of Mending heals MalzSent for 573 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 573
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 573
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1302
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:57) MalzPL's Prayer of Mending heals MalzDruid for 728 points.
.ctor :: (04:48:57) MalzPL's Prayer of Mending heals MalzDruid for 728 points.
.ctor :: RegEx Match :: (04:48:57) MalzPL's Prayer of Mending heals MalzDruid for 728 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 728
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 728
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1304
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:57) Tavok Chief-brother is no longer stunned.
.ctor :: (04:48:57) Tavok Chief-brother is no longer stunned.
ParseLine :: (04:48:57) MalzSent casts Dangiriel's Might.
.ctor :: (04:48:57) MalzSent casts Dangiriel's Might.
.ctor :: RegEx Match :: (04:48:57) MalzSent casts Dangiriel's Might.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Dangiriel's Might
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Dangiriel's Might
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1308
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:57) MalzSent feels more deadly!
.ctor :: (04:48:57) MalzSent feels more deadly!
ParseLine :: (04:48:57) MalzSent feels more deadly!
.ctor :: (04:48:57) MalzSent feels more deadly!
ParseLine :: (04:48:57) You parry the Tavok Chief-brother's attack!
.ctor :: (04:48:57) You parry the Tavok Chief-brother's attack!
.ctor :: RegEx Match :: (04:48:57) You parry the Tavok Chief-brother's attack!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = Tavok Chief-brother
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = You
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = parry
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 17
.ctor :: RegEx Match :: RegExDesc  = Parry :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>parr)[yies]+ (?<source>.*)'s .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1314
ParseLine :: AddCombatAction :: Target     = You
ParseLine :: AddCombatAction :: Value_Type = parry
ParseLine :: (04:48:57) MalzDruid casts Prayer of Mending.
.ctor :: (04:48:57) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:57) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1316
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:57) MalzDruid's Prayer of Mending heals you for 350 points.
.ctor :: (04:48:57) MalzDruid's Prayer of Mending heals you for 350 points.
.ctor :: RegEx Match :: (04:48:57) MalzDruid's Prayer of Mending heals you for 350 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 350
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 350
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1318
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:57) MalzDruid's Prayer of Mending heals MalzPL for 630 points.
.ctor :: (04:48:57) MalzDruid's Prayer of Mending heals MalzPL for 630 points.
.ctor :: RegEx Match :: (04:48:57) MalzDruid's Prayer of Mending heals MalzPL for 630 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:57
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 630
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 630
ParseLine :: AddCombatAction :: Time       = 04:48:57
ParseLine :: AddCombatAction :: Time_Sorter= 1320
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:58) MalzDruid's Prayer of Mending heals MalzSent for 646 points.
.ctor :: (04:48:58) MalzDruid's Prayer of Mending heals MalzSent for 646 points.
.ctor :: RegEx Match :: (04:48:58) MalzDruid's Prayer of Mending heals MalzSent for 646 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 646
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 646
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1322
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:58) MalzDruid's Prayer of Mending heals MalzDruid for 513 points.
.ctor :: (04:48:58) MalzDruid's Prayer of Mending heals MalzDruid for 513 points.
.ctor :: RegEx Match :: (04:48:58) MalzDruid's Prayer of Mending heals MalzDruid for 513 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 513
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 513
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1324
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:58) Tavok Chief-brother's stun immunity has worn off.
.ctor :: (04:48:58) Tavok Chief-brother's stun immunity has worn off.
ParseLine :: (04:48:58) The Tavok Chief-brother hits YOU for 103 points of damage!
.ctor :: (04:48:58) The Tavok Chief-brother hits YOU for 103 points of damage!
.ctor :: RegEx Match :: (04:48:58) The Tavok Chief-brother hits YOU for 103 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = Tavok Chief-brother
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = YOU
.ctor :: RegEx Match :: Value      = 103
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 103
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1328
ParseLine :: AddCombatAction :: Target     = YOU
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:58) MalzPL casts Earthquake.
.ctor :: (04:48:58) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:48:58) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1330
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:58) MalzPL's Earthquake hurts Tavok Chief-brother for 848 points of damage.
.ctor :: (04:48:58) MalzPL's Earthquake hurts Tavok Chief-brother for 848 points of damage.
.ctor :: RegEx Match :: (04:48:58) MalzPL's Earthquake hurts Tavok Chief-brother for 848 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 848
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 848
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1332
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:58) You parry the Tavok Chief-brother's attack!
.ctor :: (04:48:58) You parry the Tavok Chief-brother's attack!
.ctor :: RegEx Match :: (04:48:58) You parry the Tavok Chief-brother's attack!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = Tavok Chief-brother
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = You
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = parry
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 17
.ctor :: RegEx Match :: RegExDesc  = Parry :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>parr)[yies]+ (?<source>.*)'s .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1334
ParseLine :: AddCombatAction :: Target     = You
ParseLine :: AddCombatAction :: Value_Type = parry
ParseLine :: (04:48:58) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:48:58) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:48:58) MalzDruid casts Earthquake.
.ctor :: (04:48:58) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:48:58) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1338
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:58) MalzDruid's Earthquake hurts Tavok Chief-brother for 1437 points of damage.
.ctor :: (04:48:58) MalzDruid's Earthquake hurts Tavok Chief-brother for 1437 points of damage.
.ctor :: RegEx Match :: (04:48:58) MalzDruid's Earthquake hurts Tavok Chief-brother for 1437 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 1437
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1437
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1340
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:58) [Combat] Info: The Tavok Chief-brother has died!
.ctor :: (04:48:58) [Combat] Info: The Tavok Chief-brother has died!
.ctor :: RegEx Match :: (04:48:58) [Combat] Info: The Tavok Chief-brother has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = Tavok Chief-brother
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1342
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:48:58) MalzDruid's Earthquake hurts Mud Ogre for 960 points of damage.
.ctor :: (04:48:58) MalzDruid's Earthquake hurts Mud Ogre for 960 points of damage.
.ctor :: RegEx Match :: (04:48:58) MalzDruid's Earthquake hurts Mud Ogre for 960 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 960
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 960
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1344
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:58) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:48:58) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:48:58) MalzPL casts Call Lightning.
.ctor :: (04:48:58) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:48:58) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1348
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:58) MalzPL casts Call Lightning.
.ctor :: (04:48:58) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:48:58) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1350
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:58) MalzPL's Call Lightning shocks Mud Ogre for 743 points of damage!
.ctor :: (04:48:58) MalzPL's Call Lightning shocks Mud Ogre for 743 points of damage!
.ctor :: RegEx Match :: (04:48:58) MalzPL's Call Lightning shocks Mud Ogre for 743 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 743
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 743
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1352
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:48:58) [Combat] Info: The Mud Ogre has died!
.ctor :: (04:48:58) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: (04:48:58) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1354
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:48:58) MalzPL casts Prayer of Mending.
.ctor :: (04:48:58) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:58) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1356
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:58) MalzPL's Prayer of Mending heals MalzPL for 498 points.
.ctor :: (04:48:58) MalzPL's Prayer of Mending heals MalzPL for 498 points.
.ctor :: RegEx Match :: (04:48:58) MalzPL's Prayer of Mending heals MalzPL for 498 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 498
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 498
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1358
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:58) MalzPL's Prayer of Mending heals you for 744 points.
.ctor :: (04:48:58) MalzPL's Prayer of Mending heals you for 744 points.
.ctor :: RegEx Match :: (04:48:58) MalzPL's Prayer of Mending heals you for 744 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 744
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 744
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1360
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:58) MalzPL's Prayer of Mending heals MalzSent for 804 points.
.ctor :: (04:48:58) MalzPL's Prayer of Mending heals MalzSent for 804 points.
.ctor :: RegEx Match :: (04:48:58) MalzPL's Prayer of Mending heals MalzSent for 804 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 804
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 804
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1362
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:58) MalzPL's Prayer of Mending heals MalzDruid for 528 points.
.ctor :: (04:48:58) MalzPL's Prayer of Mending heals MalzDruid for 528 points.
.ctor :: RegEx Match :: (04:48:58) MalzPL's Prayer of Mending heals MalzDruid for 528 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 528
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 528
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1364
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:58) MalzDruid casts Prayer of Mending.
.ctor :: (04:48:58) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:58) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1366
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:58) MalzDruid's Prayer of Mending heals MalzPL for 456 points.
.ctor :: (04:48:58) MalzDruid's Prayer of Mending heals MalzPL for 456 points.
.ctor :: RegEx Match :: (04:48:58) MalzDruid's Prayer of Mending heals MalzPL for 456 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 456
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 456
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1368
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:58) MalzDruid's Prayer of Mending heals you for 784 points.
.ctor :: (04:48:58) MalzDruid's Prayer of Mending heals you for 784 points.
.ctor :: RegEx Match :: (04:48:58) MalzDruid's Prayer of Mending heals you for 784 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 784
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 784
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1370
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:58) MalzDruid's Prayer of Mending heals MalzSent for 527 points.
.ctor :: (04:48:58) MalzDruid's Prayer of Mending heals MalzSent for 527 points.
.ctor :: RegEx Match :: (04:48:58) MalzDruid's Prayer of Mending heals MalzSent for 527 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 527
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 527
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1372
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:58) MalzDruid's Prayer of Mending heals MalzDruid for 813 points.
.ctor :: (04:48:58) MalzDruid's Prayer of Mending heals MalzDruid for 813 points.
.ctor :: RegEx Match :: (04:48:58) MalzDruid's Prayer of Mending heals MalzDruid for 813 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 813
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 813
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1374
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:58) The Moss Ogre misses MalzSent.
.ctor :: (04:48:58) The Moss Ogre misses MalzSent.
.ctor :: RegEx Match :: (04:48:58) The Moss Ogre misses MalzSent.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1376
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:48:58) MalzSent hits the Moss Ogre for 198 points of damage.
.ctor :: (04:48:58) MalzSent hits the Moss Ogre for 198 points of damage.
.ctor :: RegEx Match :: (04:48:58) MalzSent hits the Moss Ogre for 198 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 198
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 198
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1378
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:58) MalzDruid casts Earthquake.
.ctor :: (04:48:58) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:48:58) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1380
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:58) MalzDruid's Earthquake hurts Moss Ogre for 1197 points of damage.
.ctor :: (04:48:58) MalzDruid's Earthquake hurts Moss Ogre for 1197 points of damage.
.ctor :: RegEx Match :: (04:48:58) MalzDruid's Earthquake hurts Moss Ogre for 1197 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1197
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1197
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1382
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:58) MalzPL casts Call Lightning.
.ctor :: (04:48:58) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:48:58) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1384
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:58) MalzPL casts Call Lightning.
.ctor :: (04:48:58) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:48:58) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1386
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:58) Moss Ogre is stunned!
.ctor :: (04:48:58) Moss Ogre is stunned!
ParseLine :: (04:48:58) MalzPL casts Call Lightning.
.ctor :: (04:48:58) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:48:58) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1390
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:58) MalzPL casts Call Lightning.
.ctor :: (04:48:58) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:48:58) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1392
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:58) MalzPL's Call Lightning shocks Moss Ogre for 866 points of damage!
.ctor :: (04:48:58) MalzPL's Call Lightning shocks Moss Ogre for 866 points of damage!
.ctor :: RegEx Match :: (04:48:58) MalzPL's Call Lightning shocks Moss Ogre for 866 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 866
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 866
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1394
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:48:58) MalzSent hits the Moss Ogre for 169 points of damage.
.ctor :: (04:48:58) MalzSent hits the Moss Ogre for 169 points of damage.
.ctor :: RegEx Match :: (04:48:58) MalzSent hits the Moss Ogre for 169 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 169
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 169
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1396
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:58) MalzSent's holy weapon strikes Moss Ogre for 939 points of damage!
.ctor :: (04:48:58) MalzSent's holy weapon strikes Moss Ogre for 939 points of damage!
.ctor :: RegEx Match :: (04:48:58) MalzSent's holy weapon strikes Moss Ogre for 939 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = holy weapon
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 939
.ctor :: RegEx Match :: Value_Type = strike
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = holy weapon
ParseLine :: AddCombatAction :: Value      = 939
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1398
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = strike
ParseLine :: (04:48:58) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:48:58) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:48:58) Moss Ogre's stun immunity has worn off.
.ctor :: (04:48:58) Moss Ogre's stun immunity has worn off.
ParseLine :: (04:48:58) Moss Ogre is no longer stunned.
.ctor :: (04:48:58) Moss Ogre is no longer stunned.
ParseLine :: (04:48:58) MalzSent casts Righteous Word of Binding.
.ctor :: (04:48:58) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:48:58) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1406
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:58) MalzSent's Righteous Word of Binding smites Moss Ogre for 314 points of damage!
.ctor :: (04:48:58) MalzSent's Righteous Word of Binding smites Moss Ogre for 314 points of damage!
.ctor :: RegEx Match :: (04:48:58) MalzSent's Righteous Word of Binding smites Moss Ogre for 314 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 314
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 314
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1408
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:48:58) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:48:58) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:48:58) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1410
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:48:58) MalzSent casts Righteous Word of Binding.
.ctor :: (04:48:58) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:48:58) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1412
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:58) MalzSent's Righteous Word of Binding smites Moss Ogre for 491 points of damage!
.ctor :: (04:48:58) MalzSent's Righteous Word of Binding smites Moss Ogre for 491 points of damage!
.ctor :: RegEx Match :: (04:48:58) MalzSent's Righteous Word of Binding smites Moss Ogre for 491 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 491
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 491
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1414
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:48:58) MalzSent's Righteous Word of Binding smites Mud Ogre for 447 points of damage!
.ctor :: (04:48:58) MalzSent's Righteous Word of Binding smites Mud Ogre for 447 points of damage!
.ctor :: RegEx Match :: (04:48:58) MalzSent's Righteous Word of Binding smites Mud Ogre for 447 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 447
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 447
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1416
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:48:58) The Mud Ogre misses MalzSent.
.ctor :: (04:48:58) The Mud Ogre misses MalzSent.
.ctor :: RegEx Match :: (04:48:58) The Mud Ogre misses MalzSent.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1418
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:48:58) MalzSent hits the Moss Ogre for 151 points of damage.
.ctor :: (04:48:58) MalzSent hits the Moss Ogre for 151 points of damage.
.ctor :: RegEx Match :: (04:48:58) MalzSent hits the Moss Ogre for 151 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 151
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 151
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1420
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:58) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:48:58) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:48:58) MalzDruid casts Call Lightning.
.ctor :: (04:48:58) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:48:58) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1424
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:58) MalzDruid casts Call Lightning.
.ctor :: (04:48:58) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:48:58) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1426
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:58) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:48:58) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:48:58) MalzDruid's Call Lightning shocks Mud Ogre for 1085 points of damage!
.ctor :: (04:48:58) MalzDruid's Call Lightning shocks Mud Ogre for 1085 points of damage!
.ctor :: RegEx Match :: (04:48:58) MalzDruid's Call Lightning shocks Mud Ogre for 1085 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1085
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 1085
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1430
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:48:58) [Combat] Info: The Mud Ogre has died!
.ctor :: (04:48:58) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: (04:48:58) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1432
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:48:58) MalzDruid's Call Lightning shocks Moss Ogre for 884 points of damage!
.ctor :: (04:48:58) MalzDruid's Call Lightning shocks Moss Ogre for 884 points of damage!
.ctor :: RegEx Match :: (04:48:58) MalzDruid's Call Lightning shocks Moss Ogre for 884 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 884
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 884
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1434
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:48:58) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:48:58) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:48:58) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1436
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:48:58) MalzPL casts Prayer of Mending.
.ctor :: (04:48:58) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:58) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1438
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:58) MalzPL's Prayer of Mending heals you for 699 points.
.ctor :: (04:48:58) MalzPL's Prayer of Mending heals you for 699 points.
.ctor :: RegEx Match :: (04:48:58) MalzPL's Prayer of Mending heals you for 699 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 699
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 699
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1440
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:58) MalzPL's Prayer of Mending heals MalzPL for 594 points.
.ctor :: (04:48:58) MalzPL's Prayer of Mending heals MalzPL for 594 points.
.ctor :: RegEx Match :: (04:48:58) MalzPL's Prayer of Mending heals MalzPL for 594 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 594
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 594
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1442
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:58) MalzPL's Prayer of Mending heals MalzSent for 553 points.
.ctor :: (04:48:58) MalzPL's Prayer of Mending heals MalzSent for 553 points.
.ctor :: RegEx Match :: (04:48:58) MalzPL's Prayer of Mending heals MalzSent for 553 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 553
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 553
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1444
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:58) MalzPL's Prayer of Mending heals MalzDruid for 488 points.
.ctor :: (04:48:58) MalzPL's Prayer of Mending heals MalzDruid for 488 points.
.ctor :: RegEx Match :: (04:48:58) MalzPL's Prayer of Mending heals MalzDruid for 488 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 488
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 488
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1446
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:58) MalzDruid casts Prayer of Mending.
.ctor :: (04:48:58) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:58) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:58
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:58
ParseLine :: AddCombatAction :: Time_Sorter= 1448
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:59) MalzDruid's Prayer of Mending heals you for 570 points.
.ctor :: (04:48:59) MalzDruid's Prayer of Mending heals you for 570 points.
.ctor :: RegEx Match :: (04:48:59) MalzDruid's Prayer of Mending heals you for 570 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 570
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 570
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1450
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:59) MalzDruid's Prayer of Mending heals MalzPL for 573 points.
.ctor :: (04:48:59) MalzDruid's Prayer of Mending heals MalzPL for 573 points.
.ctor :: RegEx Match :: (04:48:59) MalzDruid's Prayer of Mending heals MalzPL for 573 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 573
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 573
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1452
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:59) MalzDruid's Prayer of Mending heals MalzSent for 480 points.
.ctor :: (04:48:59) MalzDruid's Prayer of Mending heals MalzSent for 480 points.
.ctor :: RegEx Match :: (04:48:59) MalzDruid's Prayer of Mending heals MalzSent for 480 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 480
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 480
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1454
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:59) MalzDruid's Prayer of Mending heals MalzDruid for 543 points.
.ctor :: (04:48:59) MalzDruid's Prayer of Mending heals MalzDruid for 543 points.
.ctor :: RegEx Match :: (04:48:59) MalzDruid's Prayer of Mending heals MalzDruid for 543 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 543
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 543
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1456
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:59) MalzSent casts Holy Word of Binding.
.ctor :: (04:48:59) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:48:59) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1458
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:59) MalzSent casts Holy Word of Binding.
.ctor :: (04:48:59) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:48:59) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1460
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:59) MalzSent hits the Moss Ogre for 178 points of damage.
.ctor :: (04:48:59) MalzSent hits the Moss Ogre for 178 points of damage.
.ctor :: RegEx Match :: (04:48:59) MalzSent hits the Moss Ogre for 178 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 178
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 178
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1462
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:59) MalzDruid casts Earthquake.
.ctor :: (04:48:59) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:48:59) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1464
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:59) MalzDruid's Earthquake hurts Moss Ogre for 1028 points of damage.
.ctor :: (04:48:59) MalzDruid's Earthquake hurts Moss Ogre for 1028 points of damage.
.ctor :: RegEx Match :: (04:48:59) MalzDruid's Earthquake hurts Moss Ogre for 1028 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1028
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1028
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1466
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:59) MalzSent parries the Moss Ogre's attack.
.ctor :: (04:48:59) MalzSent parries the Moss Ogre's attack.
.ctor :: RegEx Match :: (04:48:59) MalzSent parries the Moss Ogre's attack.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = parry
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 17
.ctor :: RegEx Match :: RegExDesc  = Parry :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>parr)[yies]+ (?<source>.*)'s .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1468
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = parry
ParseLine :: (04:48:59) MalzPL casts Call Lightning.
.ctor :: (04:48:59) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:48:59) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1470
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:59) MalzPL casts Call Lightning.
.ctor :: (04:48:59) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:48:59) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1472
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:59) Moss Ogre is stunned!
.ctor :: (04:48:59) Moss Ogre is stunned!
ParseLine :: (04:48:59) MalzPL casts Call Lightning.
.ctor :: (04:48:59) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:48:59) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1476
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:59) MalzPL casts Call Lightning.
.ctor :: (04:48:59) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:48:59) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1478
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:59) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:48:59) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:48:59) Moss Ogre no longer feels as vulnerable to holy magic.
.ctor :: (04:48:59) Moss Ogre no longer feels as vulnerable to holy magic.
ParseLine :: (04:48:59) Moss Ogre's stun immunity has worn off.
.ctor :: (04:48:59) Moss Ogre's stun immunity has worn off.
ParseLine :: (04:48:59) Moss Ogre is no longer stunned.
.ctor :: (04:48:59) Moss Ogre is no longer stunned.
ParseLine :: (04:48:59) MalzSent hits the Moss Ogre for 211 points of damage.
.ctor :: (04:48:59) MalzSent hits the Moss Ogre for 211 points of damage.
.ctor :: RegEx Match :: (04:48:59) MalzSent hits the Moss Ogre for 211 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 211
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 211
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1488
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:59) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:48:59) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:48:59) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1490
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:48:59) MalzPL's Call Lightning shocks Moss Ogre for 828 points of damage!
.ctor :: (04:48:59) MalzPL's Call Lightning shocks Moss Ogre for 828 points of damage!
.ctor :: RegEx Match :: (04:48:59) MalzPL's Call Lightning shocks Moss Ogre for 828 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 828
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 828
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1492
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:48:59) MalzPL casts Prayer of Mending.
.ctor :: (04:48:59) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:59) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1494
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:59) MalzPL's Prayer of Mending heals MalzPL for 547 points.
.ctor :: (04:48:59) MalzPL's Prayer of Mending heals MalzPL for 547 points.
.ctor :: RegEx Match :: (04:48:59) MalzPL's Prayer of Mending heals MalzPL for 547 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 547
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 547
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1496
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:59) MalzPL's Prayer of Mending heals you for 629 points.
.ctor :: (04:48:59) MalzPL's Prayer of Mending heals you for 629 points.
.ctor :: RegEx Match :: (04:48:59) MalzPL's Prayer of Mending heals you for 629 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 629
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 629
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1498
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:59) MalzPL's Prayer of Mending heals MalzSent for 361 points.
.ctor :: (04:48:59) MalzPL's Prayer of Mending heals MalzSent for 361 points.
.ctor :: RegEx Match :: (04:48:59) MalzPL's Prayer of Mending heals MalzSent for 361 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 361
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 361
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1500
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:59) MalzPL's Prayer of Mending heals MalzDruid for 523 points.
.ctor :: (04:48:59) MalzPL's Prayer of Mending heals MalzDruid for 523 points.
.ctor :: RegEx Match :: (04:48:59) MalzPL's Prayer of Mending heals MalzDruid for 523 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 523
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 523
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1502
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:59) MalzDruid casts Prayer of Mending.
.ctor :: (04:48:59) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:59) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1504
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:59) MalzDruid's Prayer of Mending heals MalzPL for 538 points.
.ctor :: (04:48:59) MalzDruid's Prayer of Mending heals MalzPL for 538 points.
.ctor :: RegEx Match :: (04:48:59) MalzDruid's Prayer of Mending heals MalzPL for 538 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 538
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 538
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1506
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:59) MalzDruid's Prayer of Mending heals you for 388 points.
.ctor :: (04:48:59) MalzDruid's Prayer of Mending heals you for 388 points.
.ctor :: RegEx Match :: (04:48:59) MalzDruid's Prayer of Mending heals you for 388 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 388
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 388
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1508
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:59) MalzDruid's Prayer of Mending heals MalzSent for 492 points.
.ctor :: (04:48:59) MalzDruid's Prayer of Mending heals MalzSent for 492 points.
.ctor :: RegEx Match :: (04:48:59) MalzDruid's Prayer of Mending heals MalzSent for 492 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 492
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 492
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1510
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:59) MalzDruid's Prayer of Mending heals MalzDruid for 434 points.
.ctor :: (04:48:59) MalzDruid's Prayer of Mending heals MalzDruid for 434 points.
.ctor :: RegEx Match :: (04:48:59) MalzDruid's Prayer of Mending heals MalzDruid for 434 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 434
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 434
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1512
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:59) MalzPL casts Prayer of Mending.
.ctor :: (04:48:59) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:59) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1514
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:59) MalzPL's Prayer of Mending heals MalzPL for 370 points.
.ctor :: (04:48:59) MalzPL's Prayer of Mending heals MalzPL for 370 points.
.ctor :: RegEx Match :: (04:48:59) MalzPL's Prayer of Mending heals MalzPL for 370 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 370
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 370
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1516
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:59) MalzPL's Prayer of Mending heals you for 386 points.
.ctor :: (04:48:59) MalzPL's Prayer of Mending heals you for 386 points.
.ctor :: RegEx Match :: (04:48:59) MalzPL's Prayer of Mending heals you for 386 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 386
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 386
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1518
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:59) MalzPL's Prayer of Mending heals MalzSent for 752 points.
.ctor :: (04:48:59) MalzPL's Prayer of Mending heals MalzSent for 752 points.
.ctor :: RegEx Match :: (04:48:59) MalzPL's Prayer of Mending heals MalzSent for 752 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 752
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 752
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1520
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:59) MalzPL's Prayer of Mending heals MalzDruid for 486 points.
.ctor :: (04:48:59) MalzPL's Prayer of Mending heals MalzDruid for 486 points.
.ctor :: RegEx Match :: (04:48:59) MalzPL's Prayer of Mending heals MalzDruid for 486 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 486
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 486
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1522
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:59) MalzDruid casts Prayer of Mending.
.ctor :: (04:48:59) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:48:59) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1524
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:59) MalzDruid's Prayer of Mending heals MalzPL for 567 points.
.ctor :: (04:48:59) MalzDruid's Prayer of Mending heals MalzPL for 567 points.
.ctor :: RegEx Match :: (04:48:59) MalzDruid's Prayer of Mending heals MalzPL for 567 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 567
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 567
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1526
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:59) MalzDruid's Prayer of Mending heals you for 593 points.
.ctor :: (04:48:59) MalzDruid's Prayer of Mending heals you for 593 points.
.ctor :: RegEx Match :: (04:48:59) MalzDruid's Prayer of Mending heals you for 593 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 593
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 593
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1528
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:59) MalzDruid's Prayer of Mending heals MalzSent for 467 points.
.ctor :: (04:48:59) MalzDruid's Prayer of Mending heals MalzSent for 467 points.
.ctor :: RegEx Match :: (04:48:59) MalzDruid's Prayer of Mending heals MalzSent for 467 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 467
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 467
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1530
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:59) MalzDruid's Prayer of Mending heals MalzDruid for 754 points.
.ctor :: (04:48:59) MalzDruid's Prayer of Mending heals MalzDruid for 754 points.
.ctor :: RegEx Match :: (04:48:59) MalzDruid's Prayer of Mending heals MalzDruid for 754 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 754
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 754
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1532
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:48:59) The Moss Ogre misses MalzDruid.
.ctor :: (04:48:59) The Moss Ogre misses MalzDruid.
.ctor :: RegEx Match :: (04:48:59) The Moss Ogre misses MalzDruid.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1534
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:48:59) MalzDruid hits the Moss Ogre for 50 points of damage.
.ctor :: (04:48:59) MalzDruid hits the Moss Ogre for 50 points of damage.
.ctor :: RegEx Match :: (04:48:59) MalzDruid hits the Moss Ogre for 50 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 50
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 50
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1536
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:59) MalzPL casts Earthquake.
.ctor :: (04:48:59) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:48:59) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1538
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:59) MalzPL's Earthquake hurts Moss Ogre for 989 points of damage.
.ctor :: (04:48:59) MalzPL's Earthquake hurts Moss Ogre for 989 points of damage.
.ctor :: RegEx Match :: (04:48:59) MalzPL's Earthquake hurts Moss Ogre for 989 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 989
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 989
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1540
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:48:59) MalzPL casts Earthquake.
.ctor :: (04:48:59) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:48:59) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1542
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:59) MalzDruid hits the Moss Ogre for 31 points of damage.
.ctor :: (04:48:59) MalzDruid hits the Moss Ogre for 31 points of damage.
.ctor :: RegEx Match :: (04:48:59) MalzDruid hits the Moss Ogre for 31 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 31
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 31
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1544
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:59) MalzSent casts Righteous Word of Binding.
.ctor :: (04:48:59) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:48:59) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1546
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:59) MalzSent's Righteous Word of Binding smites Moss Ogre for 651 points of damage!
.ctor :: (04:48:59) MalzSent's Righteous Word of Binding smites Moss Ogre for 651 points of damage!
.ctor :: RegEx Match :: (04:48:59) MalzSent's Righteous Word of Binding smites Moss Ogre for 651 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 651
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 651
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1548
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:48:59) MalzSent casts Righteous Word of Binding.
.ctor :: (04:48:59) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:48:59) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1550
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:59) MalzDruid hits the Moss Ogre for 35 points of damage.
.ctor :: (04:48:59) MalzDruid hits the Moss Ogre for 35 points of damage.
.ctor :: RegEx Match :: (04:48:59) MalzDruid hits the Moss Ogre for 35 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 35
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 35
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1552
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:59) MalzDruid casts Earthquake.
.ctor :: (04:48:59) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:48:59) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1554
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:59) MalzPL casts Call Lightning.
.ctor :: (04:48:59) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:48:59) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1556
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:59) The Moss Ogre misses MalzPL.
.ctor :: (04:48:59) The Moss Ogre misses MalzPL.
.ctor :: RegEx Match :: (04:48:59) The Moss Ogre misses MalzPL.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1558
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:48:59) MalzPL hits the Moss Ogre for 33 points of damage.
.ctor :: (04:48:59) MalzPL hits the Moss Ogre for 33 points of damage.
.ctor :: RegEx Match :: (04:48:59) MalzPL hits the Moss Ogre for 33 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 33
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 33
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1560
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:59) MalzDruid hits the Moss Ogre for 19 points of damage.
.ctor :: (04:48:59) MalzDruid hits the Moss Ogre for 19 points of damage.
.ctor :: RegEx Match :: (04:48:59) MalzDruid hits the Moss Ogre for 19 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 19
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 19
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1562
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:59) MalzPL hits the Moss Ogre for 33 points of damage.
.ctor :: (04:48:59) MalzPL hits the Moss Ogre for 33 points of damage.
.ctor :: RegEx Match :: (04:48:59) MalzPL hits the Moss Ogre for 33 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 33
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 33
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1564
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:48:59) The Moss Ogre misses MalzPL.
.ctor :: (04:48:59) The Moss Ogre misses MalzPL.
.ctor :: RegEx Match :: (04:48:59) The Moss Ogre misses MalzPL.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1566
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:48:59) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:48:59) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:48:59) MalzDruid casts Call Lightning.
.ctor :: (04:48:59) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:48:59) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1570
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:59) MalzDruid casts Call Lightning.
.ctor :: (04:48:59) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:48:59) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1572
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:48:59) MalzDruid's Call Lightning shocks Moss Ogre for 627 points of damage!
.ctor :: (04:48:59) MalzDruid's Call Lightning shocks Moss Ogre for 627 points of damage!
.ctor :: RegEx Match :: (04:48:59) MalzDruid's Call Lightning shocks Moss Ogre for 627 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 627
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 627
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1574
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:48:59) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:48:59) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:48:59) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:48:59
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:48:59
ParseLine :: AddCombatAction :: Time_Sorter= 1576
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:00) MalzPL casts Prayer of Mending.
.ctor :: (04:49:00) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:00) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1578
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:00) MalzPL's Prayer of Mending heals MalzPL for 692 points.
.ctor :: (04:49:00) MalzPL's Prayer of Mending heals MalzPL for 692 points.
.ctor :: RegEx Match :: (04:49:00) MalzPL's Prayer of Mending heals MalzPL for 692 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 692
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 692
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1580
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:00) MalzPL's Prayer of Mending heals you for 544 points.
.ctor :: (04:49:00) MalzPL's Prayer of Mending heals you for 544 points.
.ctor :: RegEx Match :: (04:49:00) MalzPL's Prayer of Mending heals you for 544 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 544
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 544
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1582
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:00) MalzPL's Prayer of Mending heals MalzSent for 545 points.
.ctor :: (04:49:00) MalzPL's Prayer of Mending heals MalzSent for 545 points.
.ctor :: RegEx Match :: (04:49:00) MalzPL's Prayer of Mending heals MalzSent for 545 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 545
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 545
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1584
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:00) MalzPL's Prayer of Mending heals MalzDruid for 601 points.
.ctor :: (04:49:00) MalzPL's Prayer of Mending heals MalzDruid for 601 points.
.ctor :: RegEx Match :: (04:49:00) MalzPL's Prayer of Mending heals MalzDruid for 601 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 601
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 601
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1586
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:00) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:00) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:00) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1588
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:00) MalzDruid's Prayer of Mending heals MalzPL for 561 points.
.ctor :: (04:49:00) MalzDruid's Prayer of Mending heals MalzPL for 561 points.
.ctor :: RegEx Match :: (04:49:00) MalzDruid's Prayer of Mending heals MalzPL for 561 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 561
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 561
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1590
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:00) MalzDruid's Prayer of Mending heals you for 394 points.
.ctor :: (04:49:00) MalzDruid's Prayer of Mending heals you for 394 points.
.ctor :: RegEx Match :: (04:49:00) MalzDruid's Prayer of Mending heals you for 394 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 394
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 394
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1592
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:00) MalzDruid's Prayer of Mending heals MalzSent for 506 points.
.ctor :: (04:49:00) MalzDruid's Prayer of Mending heals MalzSent for 506 points.
.ctor :: RegEx Match :: (04:49:00) MalzDruid's Prayer of Mending heals MalzSent for 506 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 506
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 506
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1594
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:00) MalzDruid's Prayer of Mending heals MalzDruid for 724 points.
.ctor :: (04:49:00) MalzDruid's Prayer of Mending heals MalzDruid for 724 points.
.ctor :: RegEx Match :: (04:49:00) MalzDruid's Prayer of Mending heals MalzDruid for 724 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 724
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 724
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1596
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:00) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:00) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:00) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1598
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:00) MalzSent drains 107 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: (04:49:00) MalzSent drains 107 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:00) MalzSent drains 107 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 107
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 107
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1600
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:00) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:00) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:00) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1602
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:00) MalzSent drains 153 points of mana from Vorok Mud-Chief with Exalted Word of Binding.
.ctor :: (04:49:00) MalzSent drains 153 points of mana from Vorok Mud-Chief with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:00) MalzSent drains 153 points of mana from Vorok Mud-Chief with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 153
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 153
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1604
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:00) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:00) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:00) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1606
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:00) Vorok Mud-Chief begins to stumble.
.ctor :: (04:49:00) Vorok Mud-Chief begins to stumble.
ParseLine :: (04:49:00) MalzDruid casts Call Lightning.
.ctor :: (04:49:00) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:00) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1610
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:00) Vorok Mud-Chief is stunned!
.ctor :: (04:49:00) Vorok Mud-Chief is stunned!
ParseLine :: (04:49:00) MalzDruid's Call Lightning shocks Vorok Mud-Chief for 759 points of damage!
.ctor :: (04:49:00) MalzDruid's Call Lightning shocks Vorok Mud-Chief for 759 points of damage!
.ctor :: RegEx Match :: (04:49:00) MalzDruid's Call Lightning shocks Vorok Mud-Chief for 759 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 759
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 759
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1614
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:00) Vorok Mud-Chief is no longer stunned.
.ctor :: (04:49:00) Vorok Mud-Chief is no longer stunned.
ParseLine :: (04:49:00) MalzPL casts Prayer of Mending.
.ctor :: (04:49:00) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:00) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1618
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:00) MalzPL's Prayer of Mending heals MalzPL for 632 points.
.ctor :: (04:49:00) MalzPL's Prayer of Mending heals MalzPL for 632 points.
.ctor :: RegEx Match :: (04:49:00) MalzPL's Prayer of Mending heals MalzPL for 632 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 632
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 632
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1620
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:00) MalzPL's Prayer of Mending heals you for 797 points.
.ctor :: (04:49:00) MalzPL's Prayer of Mending heals you for 797 points.
.ctor :: RegEx Match :: (04:49:00) MalzPL's Prayer of Mending heals you for 797 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 797
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 797
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1622
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:00) MalzPL's Prayer of Mending heals MalzSent for 595 points.
.ctor :: (04:49:00) MalzPL's Prayer of Mending heals MalzSent for 595 points.
.ctor :: RegEx Match :: (04:49:00) MalzPL's Prayer of Mending heals MalzSent for 595 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 595
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 595
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1624
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:00) MalzPL's Prayer of Mending heals MalzDruid for 399 points.
.ctor :: (04:49:00) MalzPL's Prayer of Mending heals MalzDruid for 399 points.
.ctor :: RegEx Match :: (04:49:00) MalzPL's Prayer of Mending heals MalzDruid for 399 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 399
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 399
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1626
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:00) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:00) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:00) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1628
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:00) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:00) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:00) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1630
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:00) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:00) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:00) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1632
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:00) MalzDruid's Prayer of Mending heals MalzPL for 668 points.
.ctor :: (04:49:00) MalzDruid's Prayer of Mending heals MalzPL for 668 points.
.ctor :: RegEx Match :: (04:49:00) MalzDruid's Prayer of Mending heals MalzPL for 668 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 668
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 668
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1634
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:00) MalzDruid's Prayer of Mending heals you for 680 points.
.ctor :: (04:49:00) MalzDruid's Prayer of Mending heals you for 680 points.
.ctor :: RegEx Match :: (04:49:00) MalzDruid's Prayer of Mending heals you for 680 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 680
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 680
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1636
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:00) MalzDruid's Prayer of Mending heals MalzSent for 569 points.
.ctor :: (04:49:00) MalzDruid's Prayer of Mending heals MalzSent for 569 points.
.ctor :: RegEx Match :: (04:49:00) MalzDruid's Prayer of Mending heals MalzSent for 569 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 569
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 569
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1638
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:00) MalzDruid's Prayer of Mending heals MalzDruid for 592 points.
.ctor :: (04:49:00) MalzDruid's Prayer of Mending heals MalzDruid for 592 points.
.ctor :: RegEx Match :: (04:49:00) MalzDruid's Prayer of Mending heals MalzDruid for 592 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 592
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 592
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1640
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:00) Vorok Mud-Chief stops stumbling.
.ctor :: (04:49:00) Vorok Mud-Chief stops stumbling.
ParseLine :: (04:49:00) The Vorok Mud-Chief misses MalzSent.
.ctor :: (04:49:00) The Vorok Mud-Chief misses MalzSent.
.ctor :: RegEx Match :: (04:49:00) The Vorok Mud-Chief misses MalzSent.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = Vorok Mud-Chief
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1644
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:00) MalzSent hits the Vorok Mud-Chief for 149 points of damage.
.ctor :: (04:49:00) MalzSent hits the Vorok Mud-Chief for 149 points of damage.
.ctor :: RegEx Match :: (04:49:00) MalzSent hits the Vorok Mud-Chief for 149 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 149
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 149
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1646
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:00) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:00) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:00) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1648
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:00) MalzSent's Righteous Word of Binding smites Vorok Mud-Chief for 1121 points of damage!
.ctor :: (04:49:00) MalzSent's Righteous Word of Binding smites Vorok Mud-Chief for 1121 points of damage!
.ctor :: RegEx Match :: (04:49:00) MalzSent's Righteous Word of Binding smites Vorok Mud-Chief for 1121 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 1121
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 1121
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1650
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:00) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:00) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:00) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1652
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:00) Vorok Mud-Chief's stun immunity has worn off.
.ctor :: (04:49:00) Vorok Mud-Chief's stun immunity has worn off.
ParseLine :: (04:49:00) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:00) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:00) Vorok Mud-Chief no longer feels as vulnerable to holy magic.
.ctor :: (04:49:00) Vorok Mud-Chief no longer feels as vulnerable to holy magic.
ParseLine :: (04:49:00) MalzSent hits the Vorok Mud-Chief for 191 points of damage.
.ctor :: (04:49:00) MalzSent hits the Vorok Mud-Chief for 191 points of damage.
.ctor :: RegEx Match :: (04:49:00) MalzSent hits the Vorok Mud-Chief for 191 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 191
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 191
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1660
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:00) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: (04:49:00) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: RegEx Match :: (04:49:00) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = Vorok Mud-Chief
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1662
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:00) MalzPL casts Prayer of Mending.
.ctor :: (04:49:00) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:00) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1664
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:00) MalzPL's Prayer of Mending heals MalzPL for 566 points.
.ctor :: (04:49:00) MalzPL's Prayer of Mending heals MalzPL for 566 points.
.ctor :: RegEx Match :: (04:49:00) MalzPL's Prayer of Mending heals MalzPL for 566 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 566
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 566
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1666
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:00) MalzPL's Prayer of Mending heals you for 628 points.
.ctor :: (04:49:00) MalzPL's Prayer of Mending heals you for 628 points.
.ctor :: RegEx Match :: (04:49:00) MalzPL's Prayer of Mending heals you for 628 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 628
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 628
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1668
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:00) MalzPL's Prayer of Mending heals MalzSent for 598 points.
.ctor :: (04:49:00) MalzPL's Prayer of Mending heals MalzSent for 598 points.
.ctor :: RegEx Match :: (04:49:00) MalzPL's Prayer of Mending heals MalzSent for 598 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 598
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 598
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1670
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:00) MalzPL's Prayer of Mending heals MalzDruid for 734 points.
.ctor :: (04:49:00) MalzPL's Prayer of Mending heals MalzDruid for 734 points.
.ctor :: RegEx Match :: (04:49:00) MalzPL's Prayer of Mending heals MalzDruid for 734 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 734
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 734
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1672
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:00) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:00) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:00) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1674
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:00) MalzDruid's Prayer of Mending heals MalzPL for 548 points.
.ctor :: (04:49:00) MalzDruid's Prayer of Mending heals MalzPL for 548 points.
.ctor :: RegEx Match :: (04:49:00) MalzDruid's Prayer of Mending heals MalzPL for 548 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 548
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 548
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1676
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:00) MalzDruid's Prayer of Mending heals you for 445 points.
.ctor :: (04:49:00) MalzDruid's Prayer of Mending heals you for 445 points.
.ctor :: RegEx Match :: (04:49:00) MalzDruid's Prayer of Mending heals you for 445 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 445
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 445
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1678
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:00) MalzDruid's Prayer of Mending heals MalzSent for 690 points.
.ctor :: (04:49:00) MalzDruid's Prayer of Mending heals MalzSent for 690 points.
.ctor :: RegEx Match :: (04:49:00) MalzDruid's Prayer of Mending heals MalzSent for 690 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 690
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 690
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1680
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:00) MalzDruid's Prayer of Mending heals MalzDruid for 698 points.
.ctor :: (04:49:00) MalzDruid's Prayer of Mending heals MalzDruid for 698 points.
.ctor :: RegEx Match :: (04:49:00) MalzDruid's Prayer of Mending heals MalzDruid for 698 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 698
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 698
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1682
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:00) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: (04:49:00) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: RegEx Match :: (04:49:00) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = HardC
.ctor :: RegEx Match :: Ability    = Challenge
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = attack
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 26
.ctor :: RegEx Match :: RegExDesc  = Taunt :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<target>.*) (?<type>[atck]*)s? (?<source>.*)
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = HardC
ParseLine :: AddCombatAction :: Ability    = Challenge
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1684
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = attack
ParseLine :: (04:49:00) MalzPL casts Prayer of Mending.
.ctor :: (04:49:00) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:00) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1686
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:00) MalzPL's Prayer of Mending heals MalzPL for 485 points.
.ctor :: (04:49:00) MalzPL's Prayer of Mending heals MalzPL for 485 points.
.ctor :: RegEx Match :: (04:49:00) MalzPL's Prayer of Mending heals MalzPL for 485 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 485
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 485
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1688
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:00) MalzPL's Prayer of Mending heals you for 615 points.
.ctor :: (04:49:00) MalzPL's Prayer of Mending heals you for 615 points.
.ctor :: RegEx Match :: (04:49:00) MalzPL's Prayer of Mending heals you for 615 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 615
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 615
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1690
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:00) MalzPL's Prayer of Mending heals MalzSent for 739 points.
.ctor :: (04:49:00) MalzPL's Prayer of Mending heals MalzSent for 739 points.
.ctor :: RegEx Match :: (04:49:00) MalzPL's Prayer of Mending heals MalzSent for 739 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 739
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 739
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1692
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:00) MalzPL's Prayer of Mending heals MalzDruid for 750 points.
.ctor :: (04:49:00) MalzPL's Prayer of Mending heals MalzDruid for 750 points.
.ctor :: RegEx Match :: (04:49:00) MalzPL's Prayer of Mending heals MalzDruid for 750 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 750
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 750
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1694
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:00) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:00) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:00) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1696
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:00) MalzDruid's Prayer of Mending heals MalzPL for 646 points.
.ctor :: (04:49:00) MalzDruid's Prayer of Mending heals MalzPL for 646 points.
.ctor :: RegEx Match :: (04:49:00) MalzDruid's Prayer of Mending heals MalzPL for 646 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 646
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 646
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1698
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:00) MalzDruid's Prayer of Mending heals you for 731 points.
.ctor :: (04:49:00) MalzDruid's Prayer of Mending heals you for 731 points.
.ctor :: RegEx Match :: (04:49:00) MalzDruid's Prayer of Mending heals you for 731 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 731
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 731
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1700
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:00) MalzDruid's Prayer of Mending heals MalzSent for 605 points.
.ctor :: (04:49:00) MalzDruid's Prayer of Mending heals MalzSent for 605 points.
.ctor :: RegEx Match :: (04:49:00) MalzDruid's Prayer of Mending heals MalzSent for 605 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 605
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 605
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1702
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:00) MalzDruid's Prayer of Mending heals MalzDruid for 446 points.
.ctor :: (04:49:00) MalzDruid's Prayer of Mending heals MalzDruid for 446 points.
.ctor :: RegEx Match :: (04:49:00) MalzDruid's Prayer of Mending heals MalzDruid for 446 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:00
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 446
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 446
ParseLine :: AddCombatAction :: Time       = 04:49:00
ParseLine :: AddCombatAction :: Time_Sorter= 1704
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:01) MalzPL casts Earthquake.
.ctor :: (04:49:01) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:01) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1706
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:01) MalzPL's Earthquake hurts Moss Ogre for 1130 points of damage.
.ctor :: (04:49:01) MalzPL's Earthquake hurts Moss Ogre for 1130 points of damage.
.ctor :: RegEx Match :: (04:49:01) MalzPL's Earthquake hurts Moss Ogre for 1130 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1130
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1130
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1708
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:01) MalzPL casts Earthquake.
.ctor :: (04:49:01) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:01) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1710
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:01) MalzDruid casts Earthquake.
.ctor :: (04:49:01) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:01) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1712
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:01) MalzDruid's Earthquake hurts Moss Ogre for 876 points of damage.
.ctor :: (04:49:01) MalzDruid's Earthquake hurts Moss Ogre for 876 points of damage.
.ctor :: RegEx Match :: (04:49:01) MalzDruid's Earthquake hurts Moss Ogre for 876 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 876
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 876
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1714
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:01) MalzDruid casts Earthquake.
.ctor :: (04:49:01) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:01) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1716
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:01) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:01) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:01) MalzPL casts Call Lightning.
.ctor :: (04:49:01) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:01) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1720
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:01) MalzPL casts Call Lightning.
.ctor :: (04:49:01) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:01) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1722
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:01) MalzPL's Call Lightning shocks Moss Ogre for 1023 points of damage!
.ctor :: (04:49:01) MalzPL's Call Lightning shocks Moss Ogre for 1023 points of damage!
.ctor :: RegEx Match :: (04:49:01) MalzPL's Call Lightning shocks Moss Ogre for 1023 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1023
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 1023
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1724
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:01) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:01) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:01) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1726
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:01) MalzPL casts Prayer of Mending.
.ctor :: (04:49:01) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:01) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1728
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:01) MalzPL's Prayer of Mending heals MalzPL for 522 points.
.ctor :: (04:49:01) MalzPL's Prayer of Mending heals MalzPL for 522 points.
.ctor :: RegEx Match :: (04:49:01) MalzPL's Prayer of Mending heals MalzPL for 522 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 522
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 522
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1730
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:01) MalzPL's Prayer of Mending heals you for 476 points.
.ctor :: (04:49:01) MalzPL's Prayer of Mending heals you for 476 points.
.ctor :: RegEx Match :: (04:49:01) MalzPL's Prayer of Mending heals you for 476 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 476
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 476
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1732
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:01) MalzPL's Prayer of Mending heals MalzSent for 675 points.
.ctor :: (04:49:01) MalzPL's Prayer of Mending heals MalzSent for 675 points.
.ctor :: RegEx Match :: (04:49:01) MalzPL's Prayer of Mending heals MalzSent for 675 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 675
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 675
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1734
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:01) MalzPL's Prayer of Mending heals MalzDruid for 781 points.
.ctor :: (04:49:01) MalzPL's Prayer of Mending heals MalzDruid for 781 points.
.ctor :: RegEx Match :: (04:49:01) MalzPL's Prayer of Mending heals MalzDruid for 781 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 781
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 781
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1736
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:01) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:01) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:01) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1738
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:01) MalzDruid's Prayer of Mending heals MalzPL for 604 points.
.ctor :: (04:49:01) MalzDruid's Prayer of Mending heals MalzPL for 604 points.
.ctor :: RegEx Match :: (04:49:01) MalzDruid's Prayer of Mending heals MalzPL for 604 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 604
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 604
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1740
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:01) MalzDruid's Prayer of Mending heals you for 490 points.
.ctor :: (04:49:01) MalzDruid's Prayer of Mending heals you for 490 points.
.ctor :: RegEx Match :: (04:49:01) MalzDruid's Prayer of Mending heals you for 490 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 490
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 490
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1742
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:01) MalzDruid's Prayer of Mending heals MalzSent for 419 points.
.ctor :: (04:49:01) MalzDruid's Prayer of Mending heals MalzSent for 419 points.
.ctor :: RegEx Match :: (04:49:01) MalzDruid's Prayer of Mending heals MalzSent for 419 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 419
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 419
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1744
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:01) MalzDruid's Prayer of Mending heals MalzDruid for 640 points.
.ctor :: (04:49:01) MalzDruid's Prayer of Mending heals MalzDruid for 640 points.
.ctor :: RegEx Match :: (04:49:01) MalzDruid's Prayer of Mending heals MalzDruid for 640 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 640
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 640
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1746
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:01) [Combat] Info: The Mud Ogre attacks HardC
.ctor :: (04:49:01) [Combat] Info: The Mud Ogre attacks HardC
.ctor :: RegEx Match :: (04:49:01) [Combat] Info: The Mud Ogre attacks HardC
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = HardC
.ctor :: RegEx Match :: Ability    = Challenge
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = attack
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 26
.ctor :: RegEx Match :: RegExDesc  = Taunt :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<target>.*) (?<type>[atck]*)s? (?<source>.*)
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = HardC
ParseLine :: AddCombatAction :: Ability    = Challenge
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1748
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = attack
ParseLine :: (04:49:01) MalzPL casts Earthquake.
.ctor :: (04:49:01) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:01) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1750
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:01) MalzPL's Earthquake hurts Moss Ogre for 1352 points of damage.
.ctor :: (04:49:01) MalzPL's Earthquake hurts Moss Ogre for 1352 points of damage.
.ctor :: RegEx Match :: (04:49:01) MalzPL's Earthquake hurts Moss Ogre for 1352 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1352
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1352
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1752
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:01) MalzPL casts Earthquake.
.ctor :: (04:49:01) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:01) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1754
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:01) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:01) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:01) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1756
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:01) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:01) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:01) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1758
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:01) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:01) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:01) Moss Ogre no longer feels as vulnerable to holy magic.
.ctor :: (04:49:01) Moss Ogre no longer feels as vulnerable to holy magic.
ParseLine :: (04:49:01) MalzDruid casts Earthquake.
.ctor :: (04:49:01) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:01) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1764
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:01) MalzDruid's Earthquake hurts Moss Ogre for 1352 points of damage.
.ctor :: (04:49:01) MalzDruid's Earthquake hurts Moss Ogre for 1352 points of damage.
.ctor :: RegEx Match :: (04:49:01) MalzDruid's Earthquake hurts Moss Ogre for 1352 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1352
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1352
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1766
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:01) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:01) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:01) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1768
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:01) MalzDruid casts Earthquake.
.ctor :: (04:49:01) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:01) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1770
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:01) MalzDruid's Earthquake hurts Moss Ogre for 830 points of damage.
.ctor :: (04:49:01) MalzDruid's Earthquake hurts Moss Ogre for 830 points of damage.
.ctor :: RegEx Match :: (04:49:01) MalzDruid's Earthquake hurts Moss Ogre for 830 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 830
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 830
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1772
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:01) MalzDruid's Earthquake hurts Mud Ogre for 1178 points of damage.
.ctor :: (04:49:01) MalzDruid's Earthquake hurts Mud Ogre for 1178 points of damage.
.ctor :: RegEx Match :: (04:49:01) MalzDruid's Earthquake hurts Mud Ogre for 1178 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1178
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1178
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1774
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:01) MalzDruid's Earthquake hurts Mud Ogre for 845 points of damage.
.ctor :: (04:49:01) MalzDruid's Earthquake hurts Mud Ogre for 845 points of damage.
.ctor :: RegEx Match :: (04:49:01) MalzDruid's Earthquake hurts Mud Ogre for 845 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 845
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 845
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1776
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:01) Mud Ogre feels warded from harm.
.ctor :: (04:49:01) Mud Ogre feels warded from harm.
ParseLine :: (04:49:01) The Mud Ogre misses MalzSent.
.ctor :: (04:49:01) The Mud Ogre misses MalzSent.
.ctor :: RegEx Match :: (04:49:01) The Mud Ogre misses MalzSent.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1780
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:01) MalzSent hits the Mud Ogre for 160 points of damage.
.ctor :: (04:49:01) MalzSent hits the Mud Ogre for 160 points of damage.
.ctor :: RegEx Match :: (04:49:01) MalzSent hits the Mud Ogre for 160 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 160
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 160
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1782
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:01) MalzPL casts Call Lightning.
.ctor :: (04:49:01) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:01) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1784
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:01) MalzPL casts Call Lightning.
.ctor :: (04:49:01) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:01) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1786
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:01) Moss Ogre is stunned!
.ctor :: (04:49:01) Moss Ogre is stunned!
ParseLine :: (04:49:01) Mud Ogre is stunned!
.ctor :: (04:49:01) Mud Ogre is stunned!
ParseLine :: (04:49:01) Mud Ogre is stunned!
.ctor :: (04:49:01) Mud Ogre is stunned!
ParseLine :: (04:49:01) MalzPL's Call Lightning shocks Moss Ogre for 748 points of damage!
.ctor :: (04:49:01) MalzPL's Call Lightning shocks Moss Ogre for 748 points of damage!
.ctor :: RegEx Match :: (04:49:01) MalzPL's Call Lightning shocks Moss Ogre for 748 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 748
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 748
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1794
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:01) MalzPL's Call Lightning shocks Mud Ogre for 983 points of damage!
.ctor :: (04:49:01) MalzPL's Call Lightning shocks Mud Ogre for 983 points of damage!
.ctor :: RegEx Match :: (04:49:01) MalzPL's Call Lightning shocks Mud Ogre for 983 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 983
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 983
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1796
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:01) MalzPL's Call Lightning shocks Mud Ogre for 766 points of damage!
.ctor :: (04:49:01) MalzPL's Call Lightning shocks Mud Ogre for 766 points of damage!
.ctor :: RegEx Match :: (04:49:01) MalzPL's Call Lightning shocks Mud Ogre for 766 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 766
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 766
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1798
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:01) MalzSent hits the Mud Ogre for 193 points of damage.
.ctor :: (04:49:01) MalzSent hits the Mud Ogre for 193 points of damage.
.ctor :: RegEx Match :: (04:49:01) MalzSent hits the Mud Ogre for 193 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 193
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 193
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1800
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:01) Moss Ogre is no longer stunned.
.ctor :: (04:49:01) Moss Ogre is no longer stunned.
ParseLine :: (04:49:01) Mud Ogre is no longer stunned.
.ctor :: (04:49:01) Mud Ogre is no longer stunned.
ParseLine :: (04:49:01) Mud Ogre is no longer stunned.
.ctor :: (04:49:01) Mud Ogre is no longer stunned.
ParseLine :: (04:49:01) The Moss Ogre misses MalzPL.
.ctor :: (04:49:01) The Moss Ogre misses MalzPL.
.ctor :: RegEx Match :: (04:49:01) The Moss Ogre misses MalzPL.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1808
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:01) MalzPL hits the Moss Ogre for 42 points of damage.
.ctor :: (04:49:01) MalzPL hits the Moss Ogre for 42 points of damage.
.ctor :: RegEx Match :: (04:49:01) MalzPL hits the Moss Ogre for 42 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 42
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 42
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1810
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:01) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:01) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:01) Moss Ogre no longer feels as vulnerable to holy magic.
.ctor :: (04:49:01) Moss Ogre no longer feels as vulnerable to holy magic.
ParseLine :: (04:49:01) Moss Ogre's stun immunity has worn off.
.ctor :: (04:49:01) Moss Ogre's stun immunity has worn off.
ParseLine :: (04:49:01) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:01) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:01) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1818
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:01) MalzSent's Righteous Word of Binding smites Moss Ogre for 865 points of damage!
.ctor :: (04:49:01) MalzSent's Righteous Word of Binding smites Moss Ogre for 865 points of damage!
.ctor :: RegEx Match :: (04:49:01) MalzSent's Righteous Word of Binding smites Moss Ogre for 865 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 865
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 865
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1820
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:01) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:01) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:01) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1822
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:01) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:01) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:01) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:01
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:01
ParseLine :: AddCombatAction :: Time_Sorter= 1824
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:01) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:01) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:01) Mud Ogre no longer feels as vulnerable to holy magic.
.ctor :: (04:49:01) Mud Ogre no longer feels as vulnerable to holy magic.
ParseLine :: (04:49:01) Mud Ogre's stun immunity has worn off.
.ctor :: (04:49:01) Mud Ogre's stun immunity has worn off.
ParseLine :: (04:49:02) Mud Ogre is no longer warded from harm.
.ctor :: (04:49:02) Mud Ogre is no longer warded from harm.
ParseLine :: (04:49:02) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:02) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:02) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1834
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:02) MalzSent's Righteous Word of Binding smites Mud Ogre for 1057 points of damage!
.ctor :: (04:49:02) MalzSent's Righteous Word of Binding smites Mud Ogre for 1057 points of damage!
.ctor :: RegEx Match :: (04:49:02) MalzSent's Righteous Word of Binding smites Mud Ogre for 1057 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1057
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 1057
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1836
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:02) [Combat] Info: The Mud Ogre has died!
.ctor :: (04:49:02) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: (04:49:02) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1838
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:02) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:02) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:02) Mud Ogre no longer feels as vulnerable to holy magic.
.ctor :: (04:49:02) Mud Ogre no longer feels as vulnerable to holy magic.
ParseLine :: (04:49:02) Mud Ogre's stun immunity has worn off.
.ctor :: (04:49:02) Mud Ogre's stun immunity has worn off.
ParseLine :: (04:49:02) MalzSent's Righteous Word of Binding smites Mud Ogre for 1004 points of damage!
.ctor :: (04:49:02) MalzSent's Righteous Word of Binding smites Mud Ogre for 1004 points of damage!
.ctor :: RegEx Match :: (04:49:02) MalzSent's Righteous Word of Binding smites Mud Ogre for 1004 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1004
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 1004
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1846
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:02) [Combat] Info: The Mud Ogre has died!
.ctor :: (04:49:02) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: (04:49:02) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1848
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:02) MalzDruid casts Call Lightning.
.ctor :: (04:49:02) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:02) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1850
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:02) MalzDruid casts Call Lightning.
.ctor :: (04:49:02) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:02) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1852
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:02) Mud Ogre is stunned!
.ctor :: (04:49:02) Mud Ogre is stunned!
ParseLine :: (04:49:02) MalzDruid casts Call Lightning.
.ctor :: (04:49:02) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:02) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1856
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:02) MalzDruid casts Call Lightning.
.ctor :: (04:49:02) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:02) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1858
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:02) MalzDruid's Call Lightning shocks Mud Ogre for 897 points of damage!
.ctor :: (04:49:02) MalzDruid's Call Lightning shocks Mud Ogre for 897 points of damage!
.ctor :: RegEx Match :: (04:49:02) MalzDruid's Call Lightning shocks Mud Ogre for 897 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 897
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 897
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1860
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:02) Mud Ogre is no longer stunned.
.ctor :: (04:49:02) Mud Ogre is no longer stunned.
ParseLine :: (04:49:02) MalzPL casts Prayer of Mending.
.ctor :: (04:49:02) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:02) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1864
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:02) MalzPL's Prayer of Mending heals MalzPL for 607 points.
.ctor :: (04:49:02) MalzPL's Prayer of Mending heals MalzPL for 607 points.
.ctor :: RegEx Match :: (04:49:02) MalzPL's Prayer of Mending heals MalzPL for 607 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 607
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 607
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1866
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:02) MalzPL's Prayer of Mending heals you for 381 points.
.ctor :: (04:49:02) MalzPL's Prayer of Mending heals you for 381 points.
.ctor :: RegEx Match :: (04:49:02) MalzPL's Prayer of Mending heals you for 381 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 381
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 381
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1868
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:02) MalzPL's Prayer of Mending heals MalzSent for 677 points.
.ctor :: (04:49:02) MalzPL's Prayer of Mending heals MalzSent for 677 points.
.ctor :: RegEx Match :: (04:49:02) MalzPL's Prayer of Mending heals MalzSent for 677 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 677
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 677
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1870
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:02) MalzPL's Prayer of Mending heals MalzDruid for 704 points.
.ctor :: (04:49:02) MalzPL's Prayer of Mending heals MalzDruid for 704 points.
.ctor :: RegEx Match :: (04:49:02) MalzPL's Prayer of Mending heals MalzDruid for 704 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 704
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 704
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1872
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:02) The Mud Ogre misses MalzPL.
.ctor :: (04:49:02) The Mud Ogre misses MalzPL.
.ctor :: RegEx Match :: (04:49:02) The Mud Ogre misses MalzPL.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1874
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:02) MalzPL hits the Mud Ogre for 36 points of damage.
.ctor :: (04:49:02) MalzPL hits the Mud Ogre for 36 points of damage.
.ctor :: RegEx Match :: (04:49:02) MalzPL hits the Mud Ogre for 36 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 36
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 36
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1876
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:02) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:02) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:02) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1878
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:02) MalzDruid's Prayer of Mending heals MalzPL for 452 points.
.ctor :: (04:49:02) MalzDruid's Prayer of Mending heals MalzPL for 452 points.
.ctor :: RegEx Match :: (04:49:02) MalzDruid's Prayer of Mending heals MalzPL for 452 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 452
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 452
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1880
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:02) MalzDruid's Prayer of Mending heals you for 547 points.
.ctor :: (04:49:02) MalzDruid's Prayer of Mending heals you for 547 points.
.ctor :: RegEx Match :: (04:49:02) MalzDruid's Prayer of Mending heals you for 547 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 547
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 547
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1882
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:02) MalzDruid's Prayer of Mending heals MalzSent for 532 points.
.ctor :: (04:49:02) MalzDruid's Prayer of Mending heals MalzSent for 532 points.
.ctor :: RegEx Match :: (04:49:02) MalzDruid's Prayer of Mending heals MalzSent for 532 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 532
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 532
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1884
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:02) MalzDruid's Prayer of Mending heals MalzDruid for 635 points.
.ctor :: (04:49:02) MalzDruid's Prayer of Mending heals MalzDruid for 635 points.
.ctor :: RegEx Match :: (04:49:02) MalzDruid's Prayer of Mending heals MalzDruid for 635 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 635
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 635
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1886
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:02) Mud Ogre's stun immunity has worn off.
.ctor :: (04:49:02) Mud Ogre's stun immunity has worn off.
ParseLine :: (04:49:02) MalzPL hits the Mud Ogre for 28 points of damage.
.ctor :: (04:49:02) MalzPL hits the Mud Ogre for 28 points of damage.
.ctor :: RegEx Match :: (04:49:02) MalzPL hits the Mud Ogre for 28 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 28
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 28
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1890
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:02) The Mud Ogre misses MalzDruid.
.ctor :: (04:49:02) The Mud Ogre misses MalzDruid.
.ctor :: RegEx Match :: (04:49:02) The Mud Ogre misses MalzDruid.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1892
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:02) MalzDruid hits the Mud Ogre for 23 points of damage.
.ctor :: (04:49:02) MalzDruid hits the Mud Ogre for 23 points of damage.
.ctor :: RegEx Match :: (04:49:02) MalzDruid hits the Mud Ogre for 23 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 23
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 23
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1894
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:02) MalzPL casts Earthquake.
.ctor :: (04:49:02) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:02) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1896
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:02) MalzPL's Earthquake hurts Mud Ogre for 1057 points of damage.
.ctor :: (04:49:02) MalzPL's Earthquake hurts Mud Ogre for 1057 points of damage.
.ctor :: RegEx Match :: (04:49:02) MalzPL's Earthquake hurts Mud Ogre for 1057 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1057
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1057
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1898
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:02) MalzPL's Earthquake hurts Moss Ogre for 1123 points of damage.
.ctor :: (04:49:02) MalzPL's Earthquake hurts Moss Ogre for 1123 points of damage.
.ctor :: RegEx Match :: (04:49:02) MalzPL's Earthquake hurts Moss Ogre for 1123 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1123
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1123
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1900
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:02) MalzPL hits the Mud Ogre for 33 points of damage.
.ctor :: (04:49:02) MalzPL hits the Mud Ogre for 33 points of damage.
.ctor :: RegEx Match :: (04:49:02) MalzPL hits the Mud Ogre for 33 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 33
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 33
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1902
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:02) MalzDruid hits the Mud Ogre for 14 points of damage.
.ctor :: (04:49:02) MalzDruid hits the Mud Ogre for 14 points of damage.
.ctor :: RegEx Match :: (04:49:02) MalzDruid hits the Mud Ogre for 14 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 14
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 14
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1904
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:02) The Moss Ogre misses MalzPL.
.ctor :: (04:49:02) The Moss Ogre misses MalzPL.
.ctor :: RegEx Match :: (04:49:02) The Moss Ogre misses MalzPL.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1906
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:02) MalzPL hits the Mud Ogre for 26 points of damage.
.ctor :: (04:49:02) MalzPL hits the Mud Ogre for 26 points of damage.
.ctor :: RegEx Match :: (04:49:02) MalzPL hits the Mud Ogre for 26 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 26
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 26
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1908
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:02) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:02) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:02) MalzDruid casts Earthquake.
.ctor :: (04:49:02) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:02) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1912
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:02) MalzDruid's Earthquake hurts Mud Ogre for 1082 points of damage.
.ctor :: (04:49:02) MalzDruid's Earthquake hurts Mud Ogre for 1082 points of damage.
.ctor :: RegEx Match :: (04:49:02) MalzDruid's Earthquake hurts Mud Ogre for 1082 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1082
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1082
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1914
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:02) [Combat] Info: The Mud Ogre has died!
.ctor :: (04:49:02) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: (04:49:02) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1916
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:02) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:02) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:02) MalzDruid's Earthquake hurts Moss Ogre for 1223 points of damage.
.ctor :: (04:49:02) MalzDruid's Earthquake hurts Moss Ogre for 1223 points of damage.
.ctor :: RegEx Match :: (04:49:02) MalzDruid's Earthquake hurts Moss Ogre for 1223 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1223
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1223
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1920
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:02) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:02) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:02) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1922
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:02) MalzPL casts Prayer of Mending.
.ctor :: (04:49:02) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:02) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1924
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:02) MalzPL's Prayer of Mending heals MalzPL for 518 points.
.ctor :: (04:49:02) MalzPL's Prayer of Mending heals MalzPL for 518 points.
.ctor :: RegEx Match :: (04:49:02) MalzPL's Prayer of Mending heals MalzPL for 518 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 518
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 518
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1926
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:02) MalzPL's Prayer of Mending heals you for 808 points.
.ctor :: (04:49:02) MalzPL's Prayer of Mending heals you for 808 points.
.ctor :: RegEx Match :: (04:49:02) MalzPL's Prayer of Mending heals you for 808 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 808
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 808
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1928
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:02) MalzPL's Prayer of Mending heals MalzSent for 475 points.
.ctor :: (04:49:02) MalzPL's Prayer of Mending heals MalzSent for 475 points.
.ctor :: RegEx Match :: (04:49:02) MalzPL's Prayer of Mending heals MalzSent for 475 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 475
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 475
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1930
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:02) MalzPL's Prayer of Mending heals MalzDruid for 689 points.
.ctor :: (04:49:02) MalzPL's Prayer of Mending heals MalzDruid for 689 points.
.ctor :: RegEx Match :: (04:49:02) MalzPL's Prayer of Mending heals MalzDruid for 689 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 689
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 689
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1932
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:02) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:02) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:02) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1934
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:02) MalzDruid's Prayer of Mending heals MalzPL for 370 points.
.ctor :: (04:49:02) MalzDruid's Prayer of Mending heals MalzPL for 370 points.
.ctor :: RegEx Match :: (04:49:02) MalzDruid's Prayer of Mending heals MalzPL for 370 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 370
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 370
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1936
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:02) MalzDruid's Prayer of Mending heals you for 749 points.
.ctor :: (04:49:02) MalzDruid's Prayer of Mending heals you for 749 points.
.ctor :: RegEx Match :: (04:49:02) MalzDruid's Prayer of Mending heals you for 749 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 749
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 749
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1938
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:02) MalzDruid's Prayer of Mending heals MalzSent for 469 points.
.ctor :: (04:49:02) MalzDruid's Prayer of Mending heals MalzSent for 469 points.
.ctor :: RegEx Match :: (04:49:02) MalzDruid's Prayer of Mending heals MalzSent for 469 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 469
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 469
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1940
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:02) MalzDruid's Prayer of Mending heals MalzDruid for 676 points.
.ctor :: (04:49:02) MalzDruid's Prayer of Mending heals MalzDruid for 676 points.
.ctor :: RegEx Match :: (04:49:02) MalzDruid's Prayer of Mending heals MalzDruid for 676 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 676
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 676
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1942
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:02) MalzDruid assumes Offensive Stance.
.ctor :: (04:49:02) MalzDruid assumes Offensive Stance.
.ctor :: RegEx Match :: (04:49:02) MalzDruid assumes Offensive Stance.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Offensive Stance
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = assume
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 23
.ctor :: RegEx Match :: RegExDesc  = Use power -- assume :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>assume)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Offensive Stance
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1944
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = assume
ParseLine :: (04:49:02) MalzPL casts Prayer of Mending.
.ctor :: (04:49:02) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:02) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1946
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:02) MalzPL's Prayer of Mending heals MalzPL for 434 points.
.ctor :: (04:49:02) MalzPL's Prayer of Mending heals MalzPL for 434 points.
.ctor :: RegEx Match :: (04:49:02) MalzPL's Prayer of Mending heals MalzPL for 434 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 434
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 434
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1948
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:02) MalzPL's Prayer of Mending heals you for 430 points.
.ctor :: (04:49:02) MalzPL's Prayer of Mending heals you for 430 points.
.ctor :: RegEx Match :: (04:49:02) MalzPL's Prayer of Mending heals you for 430 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 430
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 430
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1950
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:02) MalzPL's Prayer of Mending heals MalzSent for 615 points.
.ctor :: (04:49:02) MalzPL's Prayer of Mending heals MalzSent for 615 points.
.ctor :: RegEx Match :: (04:49:02) MalzPL's Prayer of Mending heals MalzSent for 615 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 615
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 615
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1952
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:02) MalzPL's Prayer of Mending heals MalzDruid for 686 points.
.ctor :: (04:49:02) MalzPL's Prayer of Mending heals MalzDruid for 686 points.
.ctor :: RegEx Match :: (04:49:02) MalzPL's Prayer of Mending heals MalzDruid for 686 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 686
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 686
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1954
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:02) MalzDruid casts Blessing of the Grove.
.ctor :: (04:49:02) MalzDruid casts Blessing of the Grove.
.ctor :: RegEx Match :: (04:49:02) MalzDruid casts Blessing of the Grove.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:02
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Blessing of the Grove
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Blessing of the Grove
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:02
ParseLine :: AddCombatAction :: Time_Sorter= 1956
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:02) MalzDruid looks stronger and healthier!
.ctor :: (04:49:02) MalzDruid looks stronger and healthier!
ParseLine :: (04:49:03) MalzDruid looks stronger and healthier!
.ctor :: (04:49:03) MalzDruid looks stronger and healthier!
ParseLine :: (04:49:03) MalzPL assumes Offensive Stance.
.ctor :: (04:49:03) MalzPL assumes Offensive Stance.
.ctor :: RegEx Match :: (04:49:03) MalzPL assumes Offensive Stance.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Offensive Stance
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = assume
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 23
.ctor :: RegEx Match :: RegExDesc  = Use power -- assume :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>assume)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Offensive Stance
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 1962
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = assume
ParseLine :: (04:49:03) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: (04:49:03) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: RegEx Match :: (04:49:03) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = HardC
.ctor :: RegEx Match :: Ability    = Challenge
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = attack
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 26
.ctor :: RegEx Match :: RegExDesc  = Taunt :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<target>.*) (?<type>[atck]*)s? (?<source>.*)
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = HardC
ParseLine :: AddCombatAction :: Ability    = Challenge
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 1964
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = attack
ParseLine :: (04:49:03) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:03) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:03) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 1966
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:03) MalzDruid's Prayer of Mending heals MalzPL for 690 points.
.ctor :: (04:49:03) MalzDruid's Prayer of Mending heals MalzPL for 690 points.
.ctor :: RegEx Match :: (04:49:03) MalzDruid's Prayer of Mending heals MalzPL for 690 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 690
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 690
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 1968
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:03) MalzDruid's Prayer of Mending heals you for 723 points.
.ctor :: (04:49:03) MalzDruid's Prayer of Mending heals you for 723 points.
.ctor :: RegEx Match :: (04:49:03) MalzDruid's Prayer of Mending heals you for 723 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 723
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 723
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 1970
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:03) MalzDruid's Prayer of Mending heals MalzSent for 389 points.
.ctor :: (04:49:03) MalzDruid's Prayer of Mending heals MalzSent for 389 points.
.ctor :: RegEx Match :: (04:49:03) MalzDruid's Prayer of Mending heals MalzSent for 389 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 389
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 389
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 1972
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:03) MalzDruid's Prayer of Mending heals MalzDruid for 503 points.
.ctor :: (04:49:03) MalzDruid's Prayer of Mending heals MalzDruid for 503 points.
.ctor :: RegEx Match :: (04:49:03) MalzDruid's Prayer of Mending heals MalzDruid for 503 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 503
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 503
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 1974
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:03) MalzPL casts Blessing of the Grove.
.ctor :: (04:49:03) MalzPL casts Blessing of the Grove.
.ctor :: RegEx Match :: (04:49:03) MalzPL casts Blessing of the Grove.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Blessing of the Grove
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Blessing of the Grove
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 1976
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:03) MalzPL looks stronger and healthier!
.ctor :: (04:49:03) MalzPL looks stronger and healthier!
ParseLine :: (04:49:03) MalzPL looks stronger and healthier!
.ctor :: (04:49:03) MalzPL looks stronger and healthier!
ParseLine :: (04:49:03) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:03) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:03) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 1982
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:03) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:03) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:03) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 1984
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:03) MalzDruid casts Earthquake.
.ctor :: (04:49:03) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:03) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 1986
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:03) MalzDruid's Earthquake hurts Moss Ogre for 1217 points of damage.
.ctor :: (04:49:03) MalzDruid's Earthquake hurts Moss Ogre for 1217 points of damage.
.ctor :: RegEx Match :: (04:49:03) MalzDruid's Earthquake hurts Moss Ogre for 1217 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1217
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1217
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 1988
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:03) MalzDruid casts Earthquake.
.ctor :: (04:49:03) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:03) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 1990
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:03) MalzPL casts Call Lightning.
.ctor :: (04:49:03) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:03) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 1992
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:03) MalzPL casts Call Lightning.
.ctor :: (04:49:03) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:03) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 1994
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:03) Moss Ogre is stunned!
.ctor :: (04:49:03) Moss Ogre is stunned!
ParseLine :: (04:49:03) MalzPL casts Call Lightning.
.ctor :: (04:49:03) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:03) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 1998
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:03) MalzPL's Call Lightning shocks Moss Ogre for 738 points of damage!
.ctor :: (04:49:03) MalzPL's Call Lightning shocks Moss Ogre for 738 points of damage!
.ctor :: RegEx Match :: (04:49:03) MalzPL's Call Lightning shocks Moss Ogre for 738 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 738
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 738
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 2000
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:03) Moss Ogre is no longer stunned.
.ctor :: (04:49:03) Moss Ogre is no longer stunned.
ParseLine :: (04:49:03) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:03) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:03) Moss Ogre no longer feels as vulnerable to holy magic.
.ctor :: (04:49:03) Moss Ogre no longer feels as vulnerable to holy magic.
ParseLine :: (04:49:03) Moss Ogre's stun immunity has worn off.
.ctor :: (04:49:03) Moss Ogre's stun immunity has worn off.
ParseLine :: (04:49:03) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:03) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:03) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 2010
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:03) MalzSent's Righteous Word of Binding smites Moss Ogre for 1275 points of damage!
.ctor :: (04:49:03) MalzSent's Righteous Word of Binding smites Moss Ogre for 1275 points of damage!
.ctor :: RegEx Match :: (04:49:03) MalzSent's Righteous Word of Binding smites Moss Ogre for 1275 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1275
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 1275
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 2012
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:03) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:03) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:03) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 2014
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:03) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:03) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:03) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 2016
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:03) MalzPL casts Prayer of Mending.
.ctor :: (04:49:03) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:03) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 2018
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:03) MalzPL's Prayer of Mending heals MalzPL for 669 points.
.ctor :: (04:49:03) MalzPL's Prayer of Mending heals MalzPL for 669 points.
.ctor :: RegEx Match :: (04:49:03) MalzPL's Prayer of Mending heals MalzPL for 669 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 669
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 669
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 2020
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:03) MalzPL's Prayer of Mending heals MalzSent for 513 points.
.ctor :: (04:49:03) MalzPL's Prayer of Mending heals MalzSent for 513 points.
.ctor :: RegEx Match :: (04:49:03) MalzPL's Prayer of Mending heals MalzSent for 513 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 513
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 513
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 2022
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:03) MalzPL's Prayer of Mending heals MalzDruid for 811 points.
.ctor :: (04:49:03) MalzPL's Prayer of Mending heals MalzDruid for 811 points.
.ctor :: RegEx Match :: (04:49:03) MalzPL's Prayer of Mending heals MalzDruid for 811 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 811
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 811
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 2024
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:03) The Tavok Chief-brother misses YOU!
.ctor :: (04:49:03) The Tavok Chief-brother misses YOU!
.ctor :: RegEx Match :: (04:49:03) The Tavok Chief-brother misses YOU!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = Tavok Chief-brother
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = YOU
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 2026
ParseLine :: AddCombatAction :: Target     = YOU
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:03) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:03) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:03) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 2028
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:03) MalzDruid's Prayer of Mending heals MalzPL for 403 points.
.ctor :: (04:49:03) MalzDruid's Prayer of Mending heals MalzPL for 403 points.
.ctor :: RegEx Match :: (04:49:03) MalzDruid's Prayer of Mending heals MalzPL for 403 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 403
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 403
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 2030
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:03) MalzDruid's Prayer of Mending heals MalzSent for 788 points.
.ctor :: (04:49:03) MalzDruid's Prayer of Mending heals MalzSent for 788 points.
.ctor :: RegEx Match :: (04:49:03) MalzDruid's Prayer of Mending heals MalzSent for 788 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 788
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 788
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 2032
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:03) MalzDruid's Prayer of Mending heals MalzDruid for 367 points.
.ctor :: (04:49:03) MalzDruid's Prayer of Mending heals MalzDruid for 367 points.
.ctor :: RegEx Match :: (04:49:03) MalzDruid's Prayer of Mending heals MalzDruid for 367 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 367
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 367
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 2034
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:03) MalzPL casts Earthquake.
.ctor :: (04:49:03) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:03) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 2036
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:03) MalzPL's Earthquake hurts Vorok Mud-Chief for 903 points of damage.
.ctor :: (04:49:03) MalzPL's Earthquake hurts Vorok Mud-Chief for 903 points of damage.
.ctor :: RegEx Match :: (04:49:03) MalzPL's Earthquake hurts Vorok Mud-Chief for 903 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 903
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 903
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 2038
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:03) MalzPL casts Earthquake.
.ctor :: (04:49:03) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:03) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 2040
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:03) The Vorok Mud-Chief misses MalzDruid.
.ctor :: (04:49:03) The Vorok Mud-Chief misses MalzDruid.
.ctor :: RegEx Match :: (04:49:03) The Vorok Mud-Chief misses MalzDruid.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = Vorok Mud-Chief
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 2042
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:03) MalzDruid hits the Vorok Mud-Chief for 42 points of damage.
.ctor :: (04:49:03) MalzDruid hits the Vorok Mud-Chief for 42 points of damage.
.ctor :: RegEx Match :: (04:49:03) MalzDruid hits the Vorok Mud-Chief for 42 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 42
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 42
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 2044
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:03) MalzDruid casts Earthquake.
.ctor :: (04:49:03) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:03) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 2046
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:03) MalzDruid's Earthquake hurts Vorok Mud-Chief for 1220 points of damage.
.ctor :: (04:49:03) MalzDruid's Earthquake hurts Vorok Mud-Chief for 1220 points of damage.
.ctor :: RegEx Match :: (04:49:03) MalzDruid's Earthquake hurts Vorok Mud-Chief for 1220 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 1220
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1220
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 2048
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:03) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:03) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:03) MalzPL casts Call Lightning.
.ctor :: (04:49:03) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:03) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 2052
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:03) MalzPL's Call Lightning shocks Vorok Mud-Chief for 795 points of damage!
.ctor :: (04:49:03) MalzPL's Call Lightning shocks Vorok Mud-Chief for 795 points of damage!
.ctor :: RegEx Match :: (04:49:03) MalzPL's Call Lightning shocks Vorok Mud-Chief for 795 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 795
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 795
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 2054
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:03) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: (04:49:03) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: RegEx Match :: (04:49:03) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = Vorok Mud-Chief
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 2056
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:03) MalzDruid casts Call Lightning.
.ctor :: (04:49:03) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:03) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 2058
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:03) MalzDruid casts Call Lightning.
.ctor :: (04:49:03) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:03) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 2060
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:03) Tavok Chief-brother is stunned!
.ctor :: (04:49:03) Tavok Chief-brother is stunned!
ParseLine :: (04:49:03) MalzDruid casts Call Lightning.
.ctor :: (04:49:03) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:03) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 2064
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:03) MalzDruid casts Call Lightning.
.ctor :: (04:49:03) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:03) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 2066
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:03) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:03) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:03) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 2068
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:03) MalzSent drains 97 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: (04:49:03) MalzSent drains 97 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:03) MalzSent drains 97 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 97
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 97
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 2070
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:03) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:03) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:03) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 2072
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:03) MalzSent drains 138 points of mana from Tavok Chief-brother with Exalted Word of Binding.
.ctor :: (04:49:03) MalzSent drains 138 points of mana from Tavok Chief-brother with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:03) MalzSent drains 138 points of mana from Tavok Chief-brother with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 138
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 138
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 2074
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:03) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:03) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:03) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 2076
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:03) Tavok Chief-brother begins to stumble.
.ctor :: (04:49:03) Tavok Chief-brother begins to stumble.
ParseLine :: (04:49:03) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:03) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:03) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 2080
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:03) MalzDruid's Call Lightning shocks Tavok Chief-brother for 898 points of damage!
.ctor :: (04:49:03) MalzDruid's Call Lightning shocks Tavok Chief-brother for 898 points of damage!
.ctor :: RegEx Match :: (04:49:03) MalzDruid's Call Lightning shocks Tavok Chief-brother for 898 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 898
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 898
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 2082
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:03) MalzPL casts Prayer of Mending.
.ctor :: (04:49:03) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:03) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 2084
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:03) MalzPL's Prayer of Mending heals you for 604 points.
.ctor :: (04:49:03) MalzPL's Prayer of Mending heals you for 604 points.
.ctor :: RegEx Match :: (04:49:03) MalzPL's Prayer of Mending heals you for 604 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:03
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 604
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 604
ParseLine :: AddCombatAction :: Time       = 04:49:03
ParseLine :: AddCombatAction :: Time_Sorter= 2086
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:04) MalzPL's Prayer of Mending heals MalzPL for 428 points.
.ctor :: (04:49:04) MalzPL's Prayer of Mending heals MalzPL for 428 points.
.ctor :: RegEx Match :: (04:49:04) MalzPL's Prayer of Mending heals MalzPL for 428 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 428
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 428
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2088
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:04) MalzPL's Prayer of Mending heals MalzSent for 667 points.
.ctor :: (04:49:04) MalzPL's Prayer of Mending heals MalzSent for 667 points.
.ctor :: RegEx Match :: (04:49:04) MalzPL's Prayer of Mending heals MalzSent for 667 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 667
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 667
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2090
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:04) MalzPL's Prayer of Mending heals MalzDruid for 428 points.
.ctor :: (04:49:04) MalzPL's Prayer of Mending heals MalzDruid for 428 points.
.ctor :: RegEx Match :: (04:49:04) MalzPL's Prayer of Mending heals MalzDruid for 428 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 428
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 428
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2092
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:04) Tavok Chief-brother is no longer stunned.
.ctor :: (04:49:04) Tavok Chief-brother is no longer stunned.
ParseLine :: (04:49:04) The Tavok Chief-brother misses YOU!
.ctor :: (04:49:04) The Tavok Chief-brother misses YOU!
.ctor :: RegEx Match :: (04:49:04) The Tavok Chief-brother misses YOU!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = Tavok Chief-brother
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = YOU
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2096
ParseLine :: AddCombatAction :: Target     = YOU
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:04) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:04) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:04) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2098
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:04) MalzDruid's Prayer of Mending heals you for 791 points.
.ctor :: (04:49:04) MalzDruid's Prayer of Mending heals you for 791 points.
.ctor :: RegEx Match :: (04:49:04) MalzDruid's Prayer of Mending heals you for 791 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 791
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 791
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2100
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:04) MalzDruid's Prayer of Mending heals MalzPL for 550 points.
.ctor :: (04:49:04) MalzDruid's Prayer of Mending heals MalzPL for 550 points.
.ctor :: RegEx Match :: (04:49:04) MalzDruid's Prayer of Mending heals MalzPL for 550 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 550
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 550
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2102
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:04) MalzDruid's Prayer of Mending heals MalzSent for 528 points.
.ctor :: (04:49:04) MalzDruid's Prayer of Mending heals MalzSent for 528 points.
.ctor :: RegEx Match :: (04:49:04) MalzDruid's Prayer of Mending heals MalzSent for 528 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 528
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 528
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2104
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:04) MalzDruid's Prayer of Mending heals MalzDruid for 494 points.
.ctor :: (04:49:04) MalzDruid's Prayer of Mending heals MalzDruid for 494 points.
.ctor :: RegEx Match :: (04:49:04) MalzDruid's Prayer of Mending heals MalzDruid for 494 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 494
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 494
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2106
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:04) You parry the Tavok Chief-brother's attack!
.ctor :: (04:49:04) You parry the Tavok Chief-brother's attack!
.ctor :: RegEx Match :: (04:49:04) You parry the Tavok Chief-brother's attack!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = Tavok Chief-brother
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = You
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = parry
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 17
.ctor :: RegEx Match :: RegExDesc  = Parry :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>parr)[yies]+ (?<source>.*)'s .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2108
ParseLine :: AddCombatAction :: Target     = You
ParseLine :: AddCombatAction :: Value_Type = parry
ParseLine :: (04:49:04) Tavok Chief-brother's stun immunity has worn off.
.ctor :: (04:49:04) Tavok Chief-brother's stun immunity has worn off.
ParseLine :: (04:49:04) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:04) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:04) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2112
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:04) MalzPL casts Earthquake.
.ctor :: (04:49:04) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:04) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2114
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:04) MalzPL's Earthquake hurts Tavok Chief-brother for 1079 points of damage.
.ctor :: (04:49:04) MalzPL's Earthquake hurts Tavok Chief-brother for 1079 points of damage.
.ctor :: RegEx Match :: (04:49:04) MalzPL's Earthquake hurts Tavok Chief-brother for 1079 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 1079
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1079
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2116
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:04) Tavok Chief-brother stops stumbling.
.ctor :: (04:49:04) Tavok Chief-brother stops stumbling.
ParseLine :: (04:49:04) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:04) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:04) Tavok Chief-brother no longer feels as vulnerable to holy magic.
.ctor :: (04:49:04) Tavok Chief-brother no longer feels as vulnerable to holy magic.
ParseLine :: (04:49:04) MalzDruid casts Earthquake.
.ctor :: (04:49:04) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:04) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2124
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:04) MalzDruid's Earthquake hurts Tavok Chief-brother for 1311 points of damage.
.ctor :: (04:49:04) MalzDruid's Earthquake hurts Tavok Chief-brother for 1311 points of damage.
.ctor :: RegEx Match :: (04:49:04) MalzDruid's Earthquake hurts Tavok Chief-brother for 1311 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 1311
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1311
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2126
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:04) [Combat] Info: The Tavok Chief-brother has died!
.ctor :: (04:49:04) [Combat] Info: The Tavok Chief-brother has died!
.ctor :: RegEx Match :: (04:49:04) [Combat] Info: The Tavok Chief-brother has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = Tavok Chief-brother
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2128
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:04) You parry the Tavok Chief-brother's attack!
.ctor :: (04:49:04) You parry the Tavok Chief-brother's attack!
.ctor :: RegEx Match :: (04:49:04) You parry the Tavok Chief-brother's attack!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = Tavok Chief-brother
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = You
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = parry
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 17
.ctor :: RegEx Match :: RegExDesc  = Parry :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>parr)[yies]+ (?<source>.*)'s .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2130
ParseLine :: AddCombatAction :: Target     = You
ParseLine :: AddCombatAction :: Value_Type = parry
ParseLine :: (04:49:04) MalzPL casts Prayer of Mending.
.ctor :: (04:49:04) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:04) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2132
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:04) MalzPL's Prayer of Mending heals you for 535 points.
.ctor :: (04:49:04) MalzPL's Prayer of Mending heals you for 535 points.
.ctor :: RegEx Match :: (04:49:04) MalzPL's Prayer of Mending heals you for 535 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 535
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 535
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2134
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:04) MalzPL's Prayer of Mending heals MalzPL for 608 points.
.ctor :: (04:49:04) MalzPL's Prayer of Mending heals MalzPL for 608 points.
.ctor :: RegEx Match :: (04:49:04) MalzPL's Prayer of Mending heals MalzPL for 608 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 608
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 608
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2136
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:04) MalzPL's Prayer of Mending heals MalzSent for 546 points.
.ctor :: (04:49:04) MalzPL's Prayer of Mending heals MalzSent for 546 points.
.ctor :: RegEx Match :: (04:49:04) MalzPL's Prayer of Mending heals MalzSent for 546 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 546
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 546
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2138
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:04) MalzPL's Prayer of Mending heals MalzDruid for 594 points.
.ctor :: (04:49:04) MalzPL's Prayer of Mending heals MalzDruid for 594 points.
.ctor :: RegEx Match :: (04:49:04) MalzPL's Prayer of Mending heals MalzDruid for 594 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 594
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 594
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2140
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:04) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:04) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:04) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2142
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:04) MalzDruid's Prayer of Mending heals you for 544 points.
.ctor :: (04:49:04) MalzDruid's Prayer of Mending heals you for 544 points.
.ctor :: RegEx Match :: (04:49:04) MalzDruid's Prayer of Mending heals you for 544 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 544
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 544
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2144
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:04) MalzDruid's Prayer of Mending heals MalzPL for 860 points.
.ctor :: (04:49:04) MalzDruid's Prayer of Mending heals MalzPL for 860 points.
.ctor :: RegEx Match :: (04:49:04) MalzDruid's Prayer of Mending heals MalzPL for 860 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 860
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 860
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2146
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:04) MalzDruid's Prayer of Mending heals MalzSent for 462 points.
.ctor :: (04:49:04) MalzDruid's Prayer of Mending heals MalzSent for 462 points.
.ctor :: RegEx Match :: (04:49:04) MalzDruid's Prayer of Mending heals MalzSent for 462 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 462
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 462
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2148
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:04) MalzDruid's Prayer of Mending heals MalzDruid for 583 points.
.ctor :: (04:49:04) MalzDruid's Prayer of Mending heals MalzDruid for 583 points.
.ctor :: RegEx Match :: (04:49:04) MalzDruid's Prayer of Mending heals MalzDruid for 583 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 583
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 583
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2150
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:04) MalzPL casts Prayer of Mending.
.ctor :: (04:49:04) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:04) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2152
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:04) MalzPL's Prayer of Mending heals you for 514 points.
.ctor :: (04:49:04) MalzPL's Prayer of Mending heals you for 514 points.
.ctor :: RegEx Match :: (04:49:04) MalzPL's Prayer of Mending heals you for 514 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 514
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 514
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2154
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:04) MalzPL's Prayer of Mending heals MalzPL for 526 points.
.ctor :: (04:49:04) MalzPL's Prayer of Mending heals MalzPL for 526 points.
.ctor :: RegEx Match :: (04:49:04) MalzPL's Prayer of Mending heals MalzPL for 526 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 526
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 526
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2156
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:04) MalzPL's Prayer of Mending heals MalzSent for 511 points.
.ctor :: (04:49:04) MalzPL's Prayer of Mending heals MalzSent for 511 points.
.ctor :: RegEx Match :: (04:49:04) MalzPL's Prayer of Mending heals MalzSent for 511 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 511
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 511
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2158
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:04) MalzPL's Prayer of Mending heals MalzDruid for 474 points.
.ctor :: (04:49:04) MalzPL's Prayer of Mending heals MalzDruid for 474 points.
.ctor :: RegEx Match :: (04:49:04) MalzPL's Prayer of Mending heals MalzDruid for 474 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 474
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 474
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2160
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:04) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:04) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:04) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2162
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:04) MalzDruid's Prayer of Mending heals you for 549 points.
.ctor :: (04:49:04) MalzDruid's Prayer of Mending heals you for 549 points.
.ctor :: RegEx Match :: (04:49:04) MalzDruid's Prayer of Mending heals you for 549 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 549
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 549
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2164
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:04) MalzDruid's Prayer of Mending heals MalzPL for 543 points.
.ctor :: (04:49:04) MalzDruid's Prayer of Mending heals MalzPL for 543 points.
.ctor :: RegEx Match :: (04:49:04) MalzDruid's Prayer of Mending heals MalzPL for 543 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 543
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 543
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2166
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:04) MalzDruid's Prayer of Mending heals MalzSent for 684 points.
.ctor :: (04:49:04) MalzDruid's Prayer of Mending heals MalzSent for 684 points.
.ctor :: RegEx Match :: (04:49:04) MalzDruid's Prayer of Mending heals MalzSent for 684 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 684
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 684
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2168
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:04) MalzDruid's Prayer of Mending heals MalzDruid for 539 points.
.ctor :: (04:49:04) MalzDruid's Prayer of Mending heals MalzDruid for 539 points.
.ctor :: RegEx Match :: (04:49:04) MalzDruid's Prayer of Mending heals MalzDruid for 539 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 539
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 539
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2170
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:04) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: (04:49:04) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: RegEx Match :: (04:49:04) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = HardC
.ctor :: RegEx Match :: Ability    = Challenge
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = attack
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 26
.ctor :: RegEx Match :: RegExDesc  = Taunt :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<target>.*) (?<type>[atck]*)s? (?<source>.*)
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = HardC
ParseLine :: AddCombatAction :: Ability    = Challenge
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2172
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = attack
ParseLine :: (04:49:04) MalzDruid casts Earthquake.
.ctor :: (04:49:04) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:04) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2174
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:04) MalzDruid's Earthquake hurts Moss Ogre for 1374 points of damage.
.ctor :: (04:49:04) MalzDruid's Earthquake hurts Moss Ogre for 1374 points of damage.
.ctor :: RegEx Match :: (04:49:04) MalzDruid's Earthquake hurts Moss Ogre for 1374 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1374
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1374
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2176
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:04) MalzDruid casts Earthquake.
.ctor :: (04:49:04) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:04) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2178
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:04) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:04) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:04) MalzPL casts Call Lightning.
.ctor :: (04:49:04) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:04) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2182
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:04) MalzPL casts Call Lightning.
.ctor :: (04:49:04) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:04) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2184
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:04) MalzPL's Call Lightning shocks Moss Ogre for 1002 points of damage!
.ctor :: (04:49:04) MalzPL's Call Lightning shocks Moss Ogre for 1002 points of damage!
.ctor :: RegEx Match :: (04:49:04) MalzPL's Call Lightning shocks Moss Ogre for 1002 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1002
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 1002
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2186
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:04) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:04) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:04) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2188
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:04) MalzPL casts Prayer of Mending.
.ctor :: (04:49:04) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:04) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2190
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:04) MalzPL's Prayer of Mending heals you for 381 points.
.ctor :: (04:49:04) MalzPL's Prayer of Mending heals you for 381 points.
.ctor :: RegEx Match :: (04:49:04) MalzPL's Prayer of Mending heals you for 381 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 381
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 381
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2192
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:04) MalzPL's Prayer of Mending heals MalzPL for 607 points.
.ctor :: (04:49:04) MalzPL's Prayer of Mending heals MalzPL for 607 points.
.ctor :: RegEx Match :: (04:49:04) MalzPL's Prayer of Mending heals MalzPL for 607 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 607
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 607
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2194
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:04) MalzPL's Prayer of Mending heals MalzSent for 577 points.
.ctor :: (04:49:04) MalzPL's Prayer of Mending heals MalzSent for 577 points.
.ctor :: RegEx Match :: (04:49:04) MalzPL's Prayer of Mending heals MalzSent for 577 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 577
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 577
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2196
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:04) MalzPL's Prayer of Mending heals MalzDruid for 438 points.
.ctor :: (04:49:04) MalzPL's Prayer of Mending heals MalzDruid for 438 points.
.ctor :: RegEx Match :: (04:49:04) MalzPL's Prayer of Mending heals MalzDruid for 438 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 438
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 438
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2198
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:04) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:04) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:04) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2200
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:04) MalzDruid's Prayer of Mending heals you for 723 points.
.ctor :: (04:49:04) MalzDruid's Prayer of Mending heals you for 723 points.
.ctor :: RegEx Match :: (04:49:04) MalzDruid's Prayer of Mending heals you for 723 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 723
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 723
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2202
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:04) MalzDruid's Prayer of Mending heals MalzPL for 592 points.
.ctor :: (04:49:04) MalzDruid's Prayer of Mending heals MalzPL for 592 points.
.ctor :: RegEx Match :: (04:49:04) MalzDruid's Prayer of Mending heals MalzPL for 592 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 592
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 592
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2204
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:04) MalzDruid's Prayer of Mending heals MalzSent for 420 points.
.ctor :: (04:49:04) MalzDruid's Prayer of Mending heals MalzSent for 420 points.
.ctor :: RegEx Match :: (04:49:04) MalzDruid's Prayer of Mending heals MalzSent for 420 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 420
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 420
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2206
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:04) MalzDruid's Prayer of Mending heals MalzDruid for 744 points.
.ctor :: (04:49:04) MalzDruid's Prayer of Mending heals MalzDruid for 744 points.
.ctor :: RegEx Match :: (04:49:04) MalzDruid's Prayer of Mending heals MalzDruid for 744 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 744
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 744
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2208
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:04) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:04) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:04) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2210
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:04) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:04) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:04) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2212
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:04) MalzPL casts Prayer of Mending.
.ctor :: (04:49:04) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:04) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2214
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:04) MalzPL's Prayer of Mending heals you for 588 points.
.ctor :: (04:49:04) MalzPL's Prayer of Mending heals you for 588 points.
.ctor :: RegEx Match :: (04:49:04) MalzPL's Prayer of Mending heals you for 588 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:04
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 588
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 588
ParseLine :: AddCombatAction :: Time       = 04:49:04
ParseLine :: AddCombatAction :: Time_Sorter= 2216
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:05) MalzPL's Prayer of Mending heals MalzPL for 731 points.
.ctor :: (04:49:05) MalzPL's Prayer of Mending heals MalzPL for 731 points.
.ctor :: RegEx Match :: (04:49:05) MalzPL's Prayer of Mending heals MalzPL for 731 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 731
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 731
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2218
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:05) MalzPL's Prayer of Mending heals MalzSent for 502 points.
.ctor :: (04:49:05) MalzPL's Prayer of Mending heals MalzSent for 502 points.
.ctor :: RegEx Match :: (04:49:05) MalzPL's Prayer of Mending heals MalzSent for 502 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 502
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 502
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2220
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:05) MalzPL's Prayer of Mending heals MalzDruid for 587 points.
.ctor :: (04:49:05) MalzPL's Prayer of Mending heals MalzDruid for 587 points.
.ctor :: RegEx Match :: (04:49:05) MalzPL's Prayer of Mending heals MalzDruid for 587 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 587
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 587
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2222
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:05) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:05) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:05) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2224
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:05) MalzSent's Righteous Word of Binding smites Moss Ogre for 521 points of damage!
.ctor :: (04:49:05) MalzSent's Righteous Word of Binding smites Moss Ogre for 521 points of damage!
.ctor :: RegEx Match :: (04:49:05) MalzSent's Righteous Word of Binding smites Moss Ogre for 521 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 521
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 521
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2226
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:05) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:05) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:05) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2228
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:05) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:05) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:05) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2230
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:05) MalzDruid's Prayer of Mending heals you for 397 points.
.ctor :: (04:49:05) MalzDruid's Prayer of Mending heals you for 397 points.
.ctor :: RegEx Match :: (04:49:05) MalzDruid's Prayer of Mending heals you for 397 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 397
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 397
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2232
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:05) MalzDruid's Prayer of Mending heals MalzPL for 453 points.
.ctor :: (04:49:05) MalzDruid's Prayer of Mending heals MalzPL for 453 points.
.ctor :: RegEx Match :: (04:49:05) MalzDruid's Prayer of Mending heals MalzPL for 453 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 453
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 453
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2234
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:05) MalzDruid's Prayer of Mending heals MalzSent for 525 points.
.ctor :: (04:49:05) MalzDruid's Prayer of Mending heals MalzSent for 525 points.
.ctor :: RegEx Match :: (04:49:05) MalzDruid's Prayer of Mending heals MalzSent for 525 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 525
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 525
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2236
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:05) MalzDruid's Prayer of Mending heals MalzDruid for 673 points.
.ctor :: (04:49:05) MalzDruid's Prayer of Mending heals MalzDruid for 673 points.
.ctor :: RegEx Match :: (04:49:05) MalzDruid's Prayer of Mending heals MalzDruid for 673 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 673
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 673
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2238
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:05) The Mud Ogre misses MalzDruid.
.ctor :: (04:49:05) The Mud Ogre misses MalzDruid.
.ctor :: RegEx Match :: (04:49:05) The Mud Ogre misses MalzDruid.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2240
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:05) MalzDruid hits the Mud Ogre for 43 points of damage.
.ctor :: (04:49:05) MalzDruid hits the Mud Ogre for 43 points of damage.
.ctor :: RegEx Match :: (04:49:05) MalzDruid hits the Mud Ogre for 43 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 43
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 43
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2242
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:05) MalzPL casts Earthquake.
.ctor :: (04:49:05) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:05) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2244
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:05) MalzPL's Earthquake hurts Moss Ogre for 600 points of damage.
.ctor :: (04:49:05) MalzPL's Earthquake hurts Moss Ogre for 600 points of damage.
.ctor :: RegEx Match :: (04:49:05) MalzPL's Earthquake hurts Moss Ogre for 600 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 600
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 600
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2246
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:05) MalzPL casts Earthquake.
.ctor :: (04:49:05) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:05) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2248
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:05) MalzPL casts Earthquake.
.ctor :: (04:49:05) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:05) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2250
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:05) MalzPL's Earthquake hurts Mud Ogre for 1565 points of damage.
.ctor :: (04:49:05) MalzPL's Earthquake hurts Mud Ogre for 1565 points of damage.
.ctor :: RegEx Match :: (04:49:05) MalzPL's Earthquake hurts Mud Ogre for 1565 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1565
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1565
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2252
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:05) MalzDruid hits the Mud Ogre for 23 points of damage.
.ctor :: (04:49:05) MalzDruid hits the Mud Ogre for 23 points of damage.
.ctor :: RegEx Match :: (04:49:05) MalzDruid hits the Mud Ogre for 23 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 23
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 23
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2254
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:05) The Moss Ogre misses MalzPL.
.ctor :: (04:49:05) The Moss Ogre misses MalzPL.
.ctor :: RegEx Match :: (04:49:05) The Moss Ogre misses MalzPL.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2256
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:05) The Moss Ogre misses MalzPL.
.ctor :: (04:49:05) The Moss Ogre misses MalzPL.
.ctor :: RegEx Match :: (04:49:05) The Moss Ogre misses MalzPL.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2258
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:05) The Mud Ogre misses MalzPL.
.ctor :: (04:49:05) The Mud Ogre misses MalzPL.
.ctor :: RegEx Match :: (04:49:05) The Mud Ogre misses MalzPL.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2260
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:05) The Mud Ogre misses MalzSent.
.ctor :: (04:49:05) The Mud Ogre misses MalzSent.
.ctor :: RegEx Match :: (04:49:05) The Mud Ogre misses MalzSent.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2262
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:05) MalzPL hits the Moss Ogre for 42 points of damage.
.ctor :: (04:49:05) MalzPL hits the Moss Ogre for 42 points of damage.
.ctor :: RegEx Match :: (04:49:05) MalzPL hits the Moss Ogre for 42 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 42
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 42
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2264
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:05) MalzSent hits the Mud Ogre for 125 points of damage.
.ctor :: (04:49:05) MalzSent hits the Mud Ogre for 125 points of damage.
.ctor :: RegEx Match :: (04:49:05) MalzSent hits the Mud Ogre for 125 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 125
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 125
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2266
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:05) MalzDruid casts Earthquake.
.ctor :: (04:49:05) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:05) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2268
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:05) MalzDruid's Earthquake hurts Moss Ogre for 1329 points of damage.
.ctor :: (04:49:05) MalzDruid's Earthquake hurts Moss Ogre for 1329 points of damage.
.ctor :: RegEx Match :: (04:49:05) MalzDruid's Earthquake hurts Moss Ogre for 1329 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1329
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1329
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2270
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:05) MalzDruid casts Earthquake.
.ctor :: (04:49:05) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:05) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2272
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:05) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:05) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:05) Moss Ogre no longer feels as vulnerable to holy magic.
.ctor :: (04:49:05) Moss Ogre no longer feels as vulnerable to holy magic.
ParseLine :: (04:49:05) MalzDruid's Earthquake hurts Moss Ogre for 1439 points of damage.
.ctor :: (04:49:05) MalzDruid's Earthquake hurts Moss Ogre for 1439 points of damage.
.ctor :: RegEx Match :: (04:49:05) MalzDruid's Earthquake hurts Moss Ogre for 1439 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1439
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1439
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2278
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:05) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:05) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:05) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2280
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:05) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:05) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:05) MalzDruid's Earthquake hurts Mud Ogre for 892 points of damage.
.ctor :: (04:49:05) MalzDruid's Earthquake hurts Mud Ogre for 892 points of damage.
.ctor :: RegEx Match :: (04:49:05) MalzDruid's Earthquake hurts Mud Ogre for 892 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 892
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 892
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2284
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:05) [Combat] Info: The Mud Ogre has died!
.ctor :: (04:49:05) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: (04:49:05) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2286
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:05) MalzDruid's Earthquake hurts Mud Ogre for 1067 points of damage.
.ctor :: (04:49:05) MalzDruid's Earthquake hurts Mud Ogre for 1067 points of damage.
.ctor :: RegEx Match :: (04:49:05) MalzDruid's Earthquake hurts Mud Ogre for 1067 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1067
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1067
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2288
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:05) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:05) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:05) MalzPL casts Call Lightning.
.ctor :: (04:49:05) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:05) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2292
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:05) MalzPL casts Call Lightning.
.ctor :: (04:49:05) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:05) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2294
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:05) Moss Ogre is stunned!
.ctor :: (04:49:05) Moss Ogre is stunned!
ParseLine :: (04:49:05) MalzPL's Call Lightning shocks Moss Ogre for 953 points of damage!
.ctor :: (04:49:05) MalzPL's Call Lightning shocks Moss Ogre for 953 points of damage!
.ctor :: RegEx Match :: (04:49:05) MalzPL's Call Lightning shocks Moss Ogre for 953 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 953
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 953
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2298
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:05) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:05) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:05) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2300
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:05) MalzSent hits the Mud Ogre for 84 points of damage.
.ctor :: (04:49:05) MalzSent hits the Mud Ogre for 84 points of damage.
.ctor :: RegEx Match :: (04:49:05) MalzSent hits the Mud Ogre for 84 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 84
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 84
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2302
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:05) MalzPL's Call Lightning shocks Moss Ogre for 616 points of damage!
.ctor :: (04:49:05) MalzPL's Call Lightning shocks Moss Ogre for 616 points of damage!
.ctor :: RegEx Match :: (04:49:05) MalzPL's Call Lightning shocks Moss Ogre for 616 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 616
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 616
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2304
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:05) Moss Ogre is no longer stunned.
.ctor :: (04:49:05) Moss Ogre is no longer stunned.
ParseLine :: (04:49:05) MalzSent hits the Mud Ogre for 175 points of damage.
.ctor :: (04:49:05) MalzSent hits the Mud Ogre for 175 points of damage.
.ctor :: RegEx Match :: (04:49:05) MalzSent hits the Mud Ogre for 175 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 175
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 175
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2308
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:05) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:05) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:05) Moss Ogre's stun immunity has worn off.
.ctor :: (04:49:05) Moss Ogre's stun immunity has worn off.
ParseLine :: (04:49:05) MalzDruid casts Call Lightning.
.ctor :: (04:49:05) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:05) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2314
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:05) MalzDruid casts Call Lightning.
.ctor :: (04:49:05) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:05) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2316
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:05) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:05) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:05) MalzDruid casts Call Lightning.
.ctor :: (04:49:05) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:05) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2320
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:05) MalzDruid's Call Lightning shocks Moss Ogre for 805 points of damage!
.ctor :: (04:49:05) MalzDruid's Call Lightning shocks Moss Ogre for 805 points of damage!
.ctor :: RegEx Match :: (04:49:05) MalzDruid's Call Lightning shocks Moss Ogre for 805 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 805
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 805
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2322
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:05) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:05) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:05) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2324
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:05) MalzDruid's Call Lightning shocks Mud Ogre for 794 points of damage!
.ctor :: (04:49:05) MalzDruid's Call Lightning shocks Mud Ogre for 794 points of damage!
.ctor :: RegEx Match :: (04:49:05) MalzDruid's Call Lightning shocks Mud Ogre for 794 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 794
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 794
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2326
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:05) [Combat] Info: The Mud Ogre has died!
.ctor :: (04:49:05) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: (04:49:05) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2328
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:05) MalzPL casts Prayer of Mending.
.ctor :: (04:49:05) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:05) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2330
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:05) MalzPL's Prayer of Mending heals you for 676 points.
.ctor :: (04:49:05) MalzPL's Prayer of Mending heals you for 676 points.
.ctor :: RegEx Match :: (04:49:05) MalzPL's Prayer of Mending heals you for 676 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 676
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 676
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2332
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:05) MalzPL's Prayer of Mending heals MalzPL for 646 points.
.ctor :: (04:49:05) MalzPL's Prayer of Mending heals MalzPL for 646 points.
.ctor :: RegEx Match :: (04:49:05) MalzPL's Prayer of Mending heals MalzPL for 646 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 646
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 646
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2334
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:05) MalzPL's Prayer of Mending heals MalzSent for 511 points.
.ctor :: (04:49:05) MalzPL's Prayer of Mending heals MalzSent for 511 points.
.ctor :: RegEx Match :: (04:49:05) MalzPL's Prayer of Mending heals MalzSent for 511 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 511
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 511
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2336
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:05) MalzPL's Prayer of Mending heals MalzDruid for 520 points.
.ctor :: (04:49:05) MalzPL's Prayer of Mending heals MalzDruid for 520 points.
.ctor :: RegEx Match :: (04:49:05) MalzPL's Prayer of Mending heals MalzDruid for 520 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 520
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 520
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2338
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:05) MalzSent assumes Defensive Stance.
.ctor :: (04:49:05) MalzSent assumes Defensive Stance.
.ctor :: RegEx Match :: (04:49:05) MalzSent assumes Defensive Stance.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Defensive Stance
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = assume
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 23
.ctor :: RegEx Match :: RegExDesc  = Use power -- assume :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>assume)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Defensive Stance
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2340
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = assume
ParseLine :: (04:49:05) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:05) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:05) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2342
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:05) MalzDruid's Prayer of Mending heals MalzPL for 698 points.
.ctor :: (04:49:05) MalzDruid's Prayer of Mending heals MalzPL for 698 points.
.ctor :: RegEx Match :: (04:49:05) MalzDruid's Prayer of Mending heals MalzPL for 698 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:05
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 698
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 698
ParseLine :: AddCombatAction :: Time       = 04:49:05
ParseLine :: AddCombatAction :: Time_Sorter= 2344
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:06) MalzDruid's Prayer of Mending heals you for 752 points.
.ctor :: (04:49:06) MalzDruid's Prayer of Mending heals you for 752 points.
.ctor :: RegEx Match :: (04:49:06) MalzDruid's Prayer of Mending heals you for 752 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 752
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 752
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2346
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:06) MalzDruid's Prayer of Mending heals MalzSent for 457 points.
.ctor :: (04:49:06) MalzDruid's Prayer of Mending heals MalzSent for 457 points.
.ctor :: RegEx Match :: (04:49:06) MalzDruid's Prayer of Mending heals MalzSent for 457 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 457
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 457
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2348
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:06) MalzDruid's Prayer of Mending heals MalzDruid for 695 points.
.ctor :: (04:49:06) MalzDruid's Prayer of Mending heals MalzDruid for 695 points.
.ctor :: RegEx Match :: (04:49:06) MalzDruid's Prayer of Mending heals MalzDruid for 695 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 695
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 695
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2350
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:06) MalzPL assumes Offensive Stance.
.ctor :: (04:49:06) MalzPL assumes Offensive Stance.
.ctor :: RegEx Match :: (04:49:06) MalzPL assumes Offensive Stance.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Offensive Stance
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = assume
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 23
.ctor :: RegEx Match :: RegExDesc  = Use power -- assume :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>assume)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Offensive Stance
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2352
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = assume
ParseLine :: (04:49:06) [Combat] Info: The Mud Ogre attacks HardC
.ctor :: (04:49:06) [Combat] Info: The Mud Ogre attacks HardC
.ctor :: RegEx Match :: (04:49:06) [Combat] Info: The Mud Ogre attacks HardC
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = HardC
.ctor :: RegEx Match :: Ability    = Challenge
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = attack
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 26
.ctor :: RegEx Match :: RegExDesc  = Taunt :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<target>.*) (?<type>[atck]*)s? (?<source>.*)
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = HardC
ParseLine :: AddCombatAction :: Ability    = Challenge
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2354
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = attack
ParseLine :: (04:49:06) MalzDruid assumes Offensive Stance.
.ctor :: (04:49:06) MalzDruid assumes Offensive Stance.
.ctor :: RegEx Match :: (04:49:06) MalzDruid assumes Offensive Stance.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Offensive Stance
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = assume
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 23
.ctor :: RegEx Match :: RegExDesc  = Use power -- assume :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>assume)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Offensive Stance
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2356
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = assume
ParseLine :: (04:49:06) MalzPL casts Prayer of Mending.
.ctor :: (04:49:06) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:06) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2358
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:06) MalzPL's Prayer of Mending heals MalzPL for 448 points.
.ctor :: (04:49:06) MalzPL's Prayer of Mending heals MalzPL for 448 points.
.ctor :: RegEx Match :: (04:49:06) MalzPL's Prayer of Mending heals MalzPL for 448 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 448
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 448
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2360
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:06) MalzPL's Prayer of Mending heals you for 553 points.
.ctor :: (04:49:06) MalzPL's Prayer of Mending heals you for 553 points.
.ctor :: RegEx Match :: (04:49:06) MalzPL's Prayer of Mending heals you for 553 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 553
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 553
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2362
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:06) MalzPL's Prayer of Mending heals MalzSent for 736 points.
.ctor :: (04:49:06) MalzPL's Prayer of Mending heals MalzSent for 736 points.
.ctor :: RegEx Match :: (04:49:06) MalzPL's Prayer of Mending heals MalzSent for 736 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 736
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 736
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2364
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:06) MalzPL's Prayer of Mending heals MalzDruid for 595 points.
.ctor :: (04:49:06) MalzPL's Prayer of Mending heals MalzDruid for 595 points.
.ctor :: RegEx Match :: (04:49:06) MalzPL's Prayer of Mending heals MalzDruid for 595 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 595
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 595
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2366
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:06) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:06) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:06) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2368
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:06) MalzDruid's Prayer of Mending heals MalzPL for 713 points.
.ctor :: (04:49:06) MalzDruid's Prayer of Mending heals MalzPL for 713 points.
.ctor :: RegEx Match :: (04:49:06) MalzDruid's Prayer of Mending heals MalzPL for 713 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 713
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 713
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2370
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:06) MalzDruid's Prayer of Mending heals you for 525 points.
.ctor :: (04:49:06) MalzDruid's Prayer of Mending heals you for 525 points.
.ctor :: RegEx Match :: (04:49:06) MalzDruid's Prayer of Mending heals you for 525 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 525
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 525
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2372
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:06) MalzDruid's Prayer of Mending heals MalzSent for 621 points.
.ctor :: (04:49:06) MalzDruid's Prayer of Mending heals MalzSent for 621 points.
.ctor :: RegEx Match :: (04:49:06) MalzDruid's Prayer of Mending heals MalzSent for 621 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 621
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 621
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2374
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:06) MalzDruid's Prayer of Mending heals MalzDruid for 589 points.
.ctor :: (04:49:06) MalzDruid's Prayer of Mending heals MalzDruid for 589 points.
.ctor :: RegEx Match :: (04:49:06) MalzDruid's Prayer of Mending heals MalzDruid for 589 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 589
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 589
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2376
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:06) You block the Mud Ogre's attack!
.ctor :: (04:49:06) You block the Mud Ogre's attack!
.ctor :: RegEx Match :: (04:49:06) You block the Mud Ogre's attack!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = You
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = block
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 16
.ctor :: RegEx Match :: RegExDesc  = You Block :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>block) (?<source>.*)'s .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2378
ParseLine :: AddCombatAction :: Target     = You
ParseLine :: AddCombatAction :: Value_Type = block
ParseLine :: (04:49:06) MalzPL casts Earthquake.
.ctor :: (04:49:06) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:06) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2380
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:06) MalzPL's Earthquake hurts Mud Ogre for 1230 points of damage.
.ctor :: (04:49:06) MalzPL's Earthquake hurts Mud Ogre for 1230 points of damage.
.ctor :: RegEx Match :: (04:49:06) MalzPL's Earthquake hurts Mud Ogre for 1230 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1230
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1230
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2382
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:06) MalzPL casts Earthquake.
.ctor :: (04:49:06) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:06) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2384
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:06) Mud Ogre casts Mantle of Stone.
.ctor :: (04:49:06) Mud Ogre casts Mantle of Stone.
.ctor :: RegEx Match :: (04:49:06) Mud Ogre casts Mantle of Stone.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = Mantle of Stone
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = Mantle of Stone
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2386
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:06) Mud Ogre feels warded from harm.
.ctor :: (04:49:06) Mud Ogre feels warded from harm.
ParseLine :: (04:49:06) MalzDruid casts Earthquake.
.ctor :: (04:49:06) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:06) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2390
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:06) MalzDruid's Earthquake hurts Mud Ogre for 943 points of damage.
.ctor :: (04:49:06) MalzDruid's Earthquake hurts Mud Ogre for 943 points of damage.
.ctor :: RegEx Match :: (04:49:06) MalzDruid's Earthquake hurts Mud Ogre for 943 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 943
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 943
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2392
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:06) MalzDruid casts Earthquake.
.ctor :: (04:49:06) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:06) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2394
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:06) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:06) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:06) Mud Ogre is no longer warded from harm.
.ctor :: (04:49:06) Mud Ogre is no longer warded from harm.
ParseLine :: (04:49:06) MalzPL casts Call Lightning.
.ctor :: (04:49:06) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:06) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2400
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:06) MalzPL casts Call Lightning.
.ctor :: (04:49:06) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:06) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2402
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:06) MalzPL's Call Lightning shocks Mud Ogre for 813 points of damage!
.ctor :: (04:49:06) MalzPL's Call Lightning shocks Mud Ogre for 813 points of damage!
.ctor :: RegEx Match :: (04:49:06) MalzPL's Call Lightning shocks Mud Ogre for 813 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 813
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 813
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2404
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:06) [Combat] Info: The Mud Ogre has died!
.ctor :: (04:49:06) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: (04:49:06) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2406
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:06) You block the Mud Ogre's attack!
.ctor :: (04:49:06) You block the Mud Ogre's attack!
.ctor :: RegEx Match :: (04:49:06) You block the Mud Ogre's attack!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = You
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = block
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 16
.ctor :: RegEx Match :: RegExDesc  = You Block :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>block) (?<source>.*)'s .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2408
ParseLine :: AddCombatAction :: Target     = You
ParseLine :: AddCombatAction :: Value_Type = block
ParseLine :: (04:49:06) MalzDruid casts Call Lightning.
.ctor :: (04:49:06) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:06) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2410
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:06) MalzDruid casts Call Lightning.
.ctor :: (04:49:06) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:06) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2412
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:06) Moss Ogre is stunned!
.ctor :: (04:49:06) Moss Ogre is stunned!
ParseLine :: (04:49:06) MalzDruid casts Call Lightning.
.ctor :: (04:49:06) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:06) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2416
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:06) MalzDruid's Call Lightning shocks Moss Ogre for 640 points of damage!
.ctor :: (04:49:06) MalzDruid's Call Lightning shocks Moss Ogre for 640 points of damage!
.ctor :: RegEx Match :: (04:49:06) MalzDruid's Call Lightning shocks Moss Ogre for 640 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 640
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 640
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2418
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:06) Moss Ogre is no longer stunned.
.ctor :: (04:49:06) Moss Ogre is no longer stunned.
ParseLine :: (04:49:06) MalzPL casts Prayer of Mending.
.ctor :: (04:49:06) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:06) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2422
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:06) MalzPL's Prayer of Mending heals MalzPL for 511 points.
.ctor :: (04:49:06) MalzPL's Prayer of Mending heals MalzPL for 511 points.
.ctor :: RegEx Match :: (04:49:06) MalzPL's Prayer of Mending heals MalzPL for 511 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 511
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 511
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2424
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:06) MalzPL's Prayer of Mending heals you for 844 points.
.ctor :: (04:49:06) MalzPL's Prayer of Mending heals you for 844 points.
.ctor :: RegEx Match :: (04:49:06) MalzPL's Prayer of Mending heals you for 844 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 844
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 844
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2426
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:06) MalzPL's Prayer of Mending heals MalzSent for 563 points.
.ctor :: (04:49:06) MalzPL's Prayer of Mending heals MalzSent for 563 points.
.ctor :: RegEx Match :: (04:49:06) MalzPL's Prayer of Mending heals MalzSent for 563 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 563
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 563
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2428
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:06) MalzPL's Prayer of Mending heals MalzDruid for 630 points.
.ctor :: (04:49:06) MalzPL's Prayer of Mending heals MalzDruid for 630 points.
.ctor :: RegEx Match :: (04:49:06) MalzPL's Prayer of Mending heals MalzDruid for 630 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 630
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 630
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2430
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:06) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:06) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:06) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2432
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:06) MalzSent drains 104 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: (04:49:06) MalzSent drains 104 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:06) MalzSent drains 104 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 104
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 104
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2434
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:06) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:06) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:06) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2436
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:06) MalzSent drains 148 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: (04:49:06) MalzSent drains 148 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:06) MalzSent drains 148 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 148
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 148
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2438
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:06) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:06) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:06) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2440
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:06) Moss Ogre begins to stumble.
.ctor :: (04:49:06) Moss Ogre begins to stumble.
ParseLine :: (04:49:06) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:06) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:06) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2444
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:06) The Moss Ogre misses MalzPL.
.ctor :: (04:49:06) The Moss Ogre misses MalzPL.
.ctor :: RegEx Match :: (04:49:06) The Moss Ogre misses MalzPL.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2446
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:06) MalzPL hits the Moss Ogre for 30 points of damage.
.ctor :: (04:49:06) MalzPL hits the Moss Ogre for 30 points of damage.
.ctor :: RegEx Match :: (04:49:06) MalzPL hits the Moss Ogre for 30 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 30
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 30
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2448
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:06) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:06) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:06) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2450
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:06) MalzDruid's Prayer of Mending heals MalzPL for 489 points.
.ctor :: (04:49:06) MalzDruid's Prayer of Mending heals MalzPL for 489 points.
.ctor :: RegEx Match :: (04:49:06) MalzDruid's Prayer of Mending heals MalzPL for 489 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 489
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 489
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2452
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:06) MalzDruid's Prayer of Mending heals you for 465 points.
.ctor :: (04:49:06) MalzDruid's Prayer of Mending heals you for 465 points.
.ctor :: RegEx Match :: (04:49:06) MalzDruid's Prayer of Mending heals you for 465 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 465
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 465
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2454
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:06) MalzDruid's Prayer of Mending heals MalzSent for 603 points.
.ctor :: (04:49:06) MalzDruid's Prayer of Mending heals MalzSent for 603 points.
.ctor :: RegEx Match :: (04:49:06) MalzDruid's Prayer of Mending heals MalzSent for 603 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 603
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 603
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2456
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:06) MalzDruid's Prayer of Mending heals MalzDruid for 531 points.
.ctor :: (04:49:06) MalzDruid's Prayer of Mending heals MalzDruid for 531 points.
.ctor :: RegEx Match :: (04:49:06) MalzDruid's Prayer of Mending heals MalzDruid for 531 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 531
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 531
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2458
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:06) Moss Ogre's stun immunity has worn off.
.ctor :: (04:49:06) Moss Ogre's stun immunity has worn off.
ParseLine :: (04:49:06) MalzPL misses the Moss Ogre.
.ctor :: (04:49:06) MalzPL misses the Moss Ogre.
.ctor :: RegEx Match :: (04:49:06) MalzPL misses the Moss Ogre.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2462
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:06) MalzPL casts Earthquake.
.ctor :: (04:49:06) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:06) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2464
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:06) MalzPL's Earthquake hurts Moss Ogre for 1260 points of damage.
.ctor :: (04:49:06) MalzPL's Earthquake hurts Moss Ogre for 1260 points of damage.
.ctor :: RegEx Match :: (04:49:06) MalzPL's Earthquake hurts Moss Ogre for 1260 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1260
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1260
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2466
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:06) The Moss Ogre misses MalzDruid.
.ctor :: (04:49:06) The Moss Ogre misses MalzDruid.
.ctor :: RegEx Match :: (04:49:06) The Moss Ogre misses MalzDruid.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2468
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:06) MalzDruid hits the Moss Ogre for 19 points of damage.
.ctor :: (04:49:06) MalzDruid hits the Moss Ogre for 19 points of damage.
.ctor :: RegEx Match :: (04:49:06) MalzDruid hits the Moss Ogre for 19 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 19
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 19
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2470
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:06) MalzPL hits the Moss Ogre for 39 points of damage.
.ctor :: (04:49:06) MalzPL hits the Moss Ogre for 39 points of damage.
.ctor :: RegEx Match :: (04:49:06) MalzPL hits the Moss Ogre for 39 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 39
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 39
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2472
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:06) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:06) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:06) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:06
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:06
ParseLine :: AddCombatAction :: Time_Sorter= 2474
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:07) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:07) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:07) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2476
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:07) MalzDruid hits the Moss Ogre for 41 points of damage.
.ctor :: (04:49:07) MalzDruid hits the Moss Ogre for 41 points of damage.
.ctor :: RegEx Match :: (04:49:07) MalzDruid hits the Moss Ogre for 41 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 41
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 41
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2478
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:07) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:07) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:07) Moss Ogre no longer feels as vulnerable to holy magic.
.ctor :: (04:49:07) Moss Ogre no longer feels as vulnerable to holy magic.
ParseLine :: (04:49:07) Moss Ogre stops stumbling.
.ctor :: (04:49:07) Moss Ogre stops stumbling.
ParseLine :: (04:49:07) MalzDruid casts Earthquake.
.ctor :: (04:49:07) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:07) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2486
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:07) MalzDruid's Earthquake hurts Moss Ogre for 1508 points of damage.
.ctor :: (04:49:07) MalzDruid's Earthquake hurts Moss Ogre for 1508 points of damage.
.ctor :: RegEx Match :: (04:49:07) MalzDruid's Earthquake hurts Moss Ogre for 1508 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1508
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1508
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2488
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:07) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:07) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:07) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2490
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:07) MalzPL casts Call Lightning.
.ctor :: (04:49:07) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:07) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2492
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:07) The Vorok Mud-Chief misses MalzSent.
.ctor :: (04:49:07) The Vorok Mud-Chief misses MalzSent.
.ctor :: RegEx Match :: (04:49:07) The Vorok Mud-Chief misses MalzSent.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = Vorok Mud-Chief
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2494
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:07) MalzSent hits the Vorok Mud-Chief for 131 points of damage.
.ctor :: (04:49:07) MalzSent hits the Vorok Mud-Chief for 131 points of damage.
.ctor :: RegEx Match :: (04:49:07) MalzSent hits the Vorok Mud-Chief for 131 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 131
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 131
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2496
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:07) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:07) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:07) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2498
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:07) MalzSent's Righteous Word of Binding smites Vorok Mud-Chief for 1118 points of damage!
.ctor :: (04:49:07) MalzSent's Righteous Word of Binding smites Vorok Mud-Chief for 1118 points of damage!
.ctor :: RegEx Match :: (04:49:07) MalzSent's Righteous Word of Binding smites Vorok Mud-Chief for 1118 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 1118
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 1118
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2500
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:07) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:07) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:07) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2502
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:07) MalzSent hits the Vorok Mud-Chief for 186 points of damage.
.ctor :: (04:49:07) MalzSent hits the Vorok Mud-Chief for 186 points of damage.
.ctor :: RegEx Match :: (04:49:07) MalzSent hits the Vorok Mud-Chief for 186 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 186
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 186
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2504
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:07) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:07) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:07) Vorok Mud-Chief no longer feels as vulnerable to holy magic.
.ctor :: (04:49:07) Vorok Mud-Chief no longer feels as vulnerable to holy magic.
ParseLine :: (04:49:07) MalzDruid casts Call Lightning.
.ctor :: (04:49:07) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:07) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2510
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:07) MalzDruid's Call Lightning shocks Vorok Mud-Chief for 826 points of damage!
.ctor :: (04:49:07) MalzDruid's Call Lightning shocks Vorok Mud-Chief for 826 points of damage!
.ctor :: RegEx Match :: (04:49:07) MalzDruid's Call Lightning shocks Vorok Mud-Chief for 826 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 826
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 826
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2512
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:07) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: (04:49:07) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: RegEx Match :: (04:49:07) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = Vorok Mud-Chief
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2514
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:07) MalzPL casts Prayer of Mending.
.ctor :: (04:49:07) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:07) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2516
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:07) MalzPL's Prayer of Mending heals MalzPL for 619 points.
.ctor :: (04:49:07) MalzPL's Prayer of Mending heals MalzPL for 619 points.
.ctor :: RegEx Match :: (04:49:07) MalzPL's Prayer of Mending heals MalzPL for 619 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 619
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 619
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2518
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:07) MalzPL's Prayer of Mending heals you for 361 points.
.ctor :: (04:49:07) MalzPL's Prayer of Mending heals you for 361 points.
.ctor :: RegEx Match :: (04:49:07) MalzPL's Prayer of Mending heals you for 361 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 361
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 361
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2520
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:07) MalzPL's Prayer of Mending heals MalzSent for 561 points.
.ctor :: (04:49:07) MalzPL's Prayer of Mending heals MalzSent for 561 points.
.ctor :: RegEx Match :: (04:49:07) MalzPL's Prayer of Mending heals MalzSent for 561 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 561
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 561
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2522
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:07) MalzPL's Prayer of Mending heals MalzDruid for 629 points.
.ctor :: (04:49:07) MalzPL's Prayer of Mending heals MalzDruid for 629 points.
.ctor :: RegEx Match :: (04:49:07) MalzPL's Prayer of Mending heals MalzDruid for 629 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 629
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 629
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2524
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:07) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:07) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:07) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2526
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:07) MalzDruid's Prayer of Mending heals MalzPL for 659 points.
.ctor :: (04:49:07) MalzDruid's Prayer of Mending heals MalzPL for 659 points.
.ctor :: RegEx Match :: (04:49:07) MalzDruid's Prayer of Mending heals MalzPL for 659 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 659
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 659
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2528
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:07) MalzDruid's Prayer of Mending heals you for 380 points.
.ctor :: (04:49:07) MalzDruid's Prayer of Mending heals you for 380 points.
.ctor :: RegEx Match :: (04:49:07) MalzDruid's Prayer of Mending heals you for 380 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 380
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 380
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2530
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:07) MalzDruid's Prayer of Mending heals MalzSent for 715 points.
.ctor :: (04:49:07) MalzDruid's Prayer of Mending heals MalzSent for 715 points.
.ctor :: RegEx Match :: (04:49:07) MalzDruid's Prayer of Mending heals MalzSent for 715 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 715
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 715
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2532
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:07) MalzDruid's Prayer of Mending heals MalzDruid for 513 points.
.ctor :: (04:49:07) MalzDruid's Prayer of Mending heals MalzDruid for 513 points.
.ctor :: RegEx Match :: (04:49:07) MalzDruid's Prayer of Mending heals MalzDruid for 513 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 513
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 513
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2534
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:07) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:07) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:07) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2536
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:07) MalzSent drains 106 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: (04:49:07) MalzSent drains 106 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:07) MalzSent drains 106 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 106
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 106
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2538
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:07) MalzSent drains 152 points of mana from Tavok Chief-brother with Exalted Word of Binding.
.ctor :: (04:49:07) MalzSent drains 152 points of mana from Tavok Chief-brother with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:07) MalzSent drains 152 points of mana from Tavok Chief-brother with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 152
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 152
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2540
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:07) Tavok Chief-brother begins to stumble.
.ctor :: (04:49:07) Tavok Chief-brother begins to stumble.
ParseLine :: (04:49:07) MalzDruid casts Call Lightning.
.ctor :: (04:49:07) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:07) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2544
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:07) Tavok Chief-brother is stunned!
.ctor :: (04:49:07) Tavok Chief-brother is stunned!
ParseLine :: (04:49:07) MalzDruid's Call Lightning shocks Tavok Chief-brother for 585 points of damage!
.ctor :: (04:49:07) MalzDruid's Call Lightning shocks Tavok Chief-brother for 585 points of damage!
.ctor :: RegEx Match :: (04:49:07) MalzDruid's Call Lightning shocks Tavok Chief-brother for 585 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 585
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 585
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2548
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:07) MalzPL casts Prayer of Mending.
.ctor :: (04:49:07) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:07) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2550
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:07) MalzPL's Prayer of Mending heals MalzPL for 500 points.
.ctor :: (04:49:07) MalzPL's Prayer of Mending heals MalzPL for 500 points.
.ctor :: RegEx Match :: (04:49:07) MalzPL's Prayer of Mending heals MalzPL for 500 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 500
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 500
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2552
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:07) MalzPL's Prayer of Mending heals you for 495 points.
.ctor :: (04:49:07) MalzPL's Prayer of Mending heals you for 495 points.
.ctor :: RegEx Match :: (04:49:07) MalzPL's Prayer of Mending heals you for 495 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 495
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 495
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2554
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:07) MalzPL's Prayer of Mending heals MalzSent for 551 points.
.ctor :: (04:49:07) MalzPL's Prayer of Mending heals MalzSent for 551 points.
.ctor :: RegEx Match :: (04:49:07) MalzPL's Prayer of Mending heals MalzSent for 551 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 551
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 551
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2556
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:07) MalzPL's Prayer of Mending heals MalzDruid for 628 points.
.ctor :: (04:49:07) MalzPL's Prayer of Mending heals MalzDruid for 628 points.
.ctor :: RegEx Match :: (04:49:07) MalzPL's Prayer of Mending heals MalzDruid for 628 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 628
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 628
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2558
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:07) Tavok Chief-brother is no longer stunned.
.ctor :: (04:49:07) Tavok Chief-brother is no longer stunned.
ParseLine :: (04:49:07) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:07) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:07) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2562
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:07) MalzDruid's Prayer of Mending heals MalzPL for 524 points.
.ctor :: (04:49:07) MalzDruid's Prayer of Mending heals MalzPL for 524 points.
.ctor :: RegEx Match :: (04:49:07) MalzDruid's Prayer of Mending heals MalzPL for 524 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 524
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 524
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2564
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:07) MalzDruid's Prayer of Mending heals you for 531 points.
.ctor :: (04:49:07) MalzDruid's Prayer of Mending heals you for 531 points.
.ctor :: RegEx Match :: (04:49:07) MalzDruid's Prayer of Mending heals you for 531 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 531
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 531
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2566
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:07) MalzDruid's Prayer of Mending heals MalzSent for 526 points.
.ctor :: (04:49:07) MalzDruid's Prayer of Mending heals MalzSent for 526 points.
.ctor :: RegEx Match :: (04:49:07) MalzDruid's Prayer of Mending heals MalzSent for 526 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 526
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 526
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2568
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:07) MalzDruid's Prayer of Mending heals MalzDruid for 410 points.
.ctor :: (04:49:07) MalzDruid's Prayer of Mending heals MalzDruid for 410 points.
.ctor :: RegEx Match :: (04:49:07) MalzDruid's Prayer of Mending heals MalzDruid for 410 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 410
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 410
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2570
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:07) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:07) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:07) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2572
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:07) Tavok Chief-brother's stun immunity has worn off.
.ctor :: (04:49:07) Tavok Chief-brother's stun immunity has worn off.
ParseLine :: (04:49:07) MalzPL casts Earthquake.
.ctor :: (04:49:07) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:07) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2576
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:07) MalzPL's Earthquake hurts Tavok Chief-brother for 980 points of damage.
.ctor :: (04:49:07) MalzPL's Earthquake hurts Tavok Chief-brother for 980 points of damage.
.ctor :: RegEx Match :: (04:49:07) MalzPL's Earthquake hurts Tavok Chief-brother for 980 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 980
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 980
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2578
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:07) MalzPL casts Earthquake.
.ctor :: (04:49:07) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:07) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2580
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:07) Tavok Chief-brother stops stumbling.
.ctor :: (04:49:07) Tavok Chief-brother stops stumbling.
ParseLine :: (04:49:07) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:07) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:07) Tavok Chief-brother no longer feels as vulnerable to holy magic.
.ctor :: (04:49:07) Tavok Chief-brother no longer feels as vulnerable to holy magic.
ParseLine :: (04:49:07) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:07) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:07) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2588
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:07) MalzSent's Righteous Word of Binding smites Tavok Chief-brother for 1131 points of damage!
.ctor :: (04:49:07) MalzSent's Righteous Word of Binding smites Tavok Chief-brother for 1131 points of damage!
.ctor :: RegEx Match :: (04:49:07) MalzSent's Righteous Word of Binding smites Tavok Chief-brother for 1131 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 1131
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 1131
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2590
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:07) [Combat] Info: The Tavok Chief-brother has died!
.ctor :: (04:49:07) [Combat] Info: The Tavok Chief-brother has died!
.ctor :: RegEx Match :: (04:49:07) [Combat] Info: The Tavok Chief-brother has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = Tavok Chief-brother
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2592
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:07) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:07) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:07) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2594
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:07) MalzPL casts Prayer of Mending.
.ctor :: (04:49:07) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:07) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2596
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:07) MalzPL's Prayer of Mending heals MalzPL for 679 points.
.ctor :: (04:49:07) MalzPL's Prayer of Mending heals MalzPL for 679 points.
.ctor :: RegEx Match :: (04:49:07) MalzPL's Prayer of Mending heals MalzPL for 679 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 679
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 679
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2598
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:07) MalzPL's Prayer of Mending heals you for 587 points.
.ctor :: (04:49:07) MalzPL's Prayer of Mending heals you for 587 points.
.ctor :: RegEx Match :: (04:49:07) MalzPL's Prayer of Mending heals you for 587 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:07
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 587
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 587
ParseLine :: AddCombatAction :: Time       = 04:49:07
ParseLine :: AddCombatAction :: Time_Sorter= 2600
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:08) MalzPL's Prayer of Mending heals MalzSent for 641 points.
.ctor :: (04:49:08) MalzPL's Prayer of Mending heals MalzSent for 641 points.
.ctor :: RegEx Match :: (04:49:08) MalzPL's Prayer of Mending heals MalzSent for 641 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 641
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 641
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2602
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:08) MalzPL's Prayer of Mending heals MalzDruid for 604 points.
.ctor :: (04:49:08) MalzPL's Prayer of Mending heals MalzDruid for 604 points.
.ctor :: RegEx Match :: (04:49:08) MalzPL's Prayer of Mending heals MalzDruid for 604 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 604
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 604
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2604
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:08) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:08) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:08) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2606
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:08) MalzDruid's Prayer of Mending heals MalzPL for 524 points.
.ctor :: (04:49:08) MalzDruid's Prayer of Mending heals MalzPL for 524 points.
.ctor :: RegEx Match :: (04:49:08) MalzDruid's Prayer of Mending heals MalzPL for 524 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 524
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 524
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2608
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:08) MalzDruid's Prayer of Mending heals you for 538 points.
.ctor :: (04:49:08) MalzDruid's Prayer of Mending heals you for 538 points.
.ctor :: RegEx Match :: (04:49:08) MalzDruid's Prayer of Mending heals you for 538 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 538
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 538
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2610
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:08) MalzDruid's Prayer of Mending heals MalzSent for 713 points.
.ctor :: (04:49:08) MalzDruid's Prayer of Mending heals MalzSent for 713 points.
.ctor :: RegEx Match :: (04:49:08) MalzDruid's Prayer of Mending heals MalzSent for 713 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 713
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 713
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2612
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:08) MalzDruid's Prayer of Mending heals MalzDruid for 641 points.
.ctor :: (04:49:08) MalzDruid's Prayer of Mending heals MalzDruid for 641 points.
.ctor :: RegEx Match :: (04:49:08) MalzDruid's Prayer of Mending heals MalzDruid for 641 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 641
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 641
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2614
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:08) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: (04:49:08) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: RegEx Match :: (04:49:08) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = HardC
.ctor :: RegEx Match :: Ability    = Challenge
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = attack
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 26
.ctor :: RegEx Match :: RegExDesc  = Taunt :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<target>.*) (?<type>[atck]*)s? (?<source>.*)
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = HardC
ParseLine :: AddCombatAction :: Ability    = Challenge
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2616
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = attack
ParseLine :: (04:49:08) MalzPL casts Prayer of Mending.
.ctor :: (04:49:08) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:08) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2618
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:08) MalzPL's Prayer of Mending heals MalzPL for 619 points.
.ctor :: (04:49:08) MalzPL's Prayer of Mending heals MalzPL for 619 points.
.ctor :: RegEx Match :: (04:49:08) MalzPL's Prayer of Mending heals MalzPL for 619 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 619
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 619
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2620
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:08) MalzPL's Prayer of Mending heals you for 727 points.
.ctor :: (04:49:08) MalzPL's Prayer of Mending heals you for 727 points.
.ctor :: RegEx Match :: (04:49:08) MalzPL's Prayer of Mending heals you for 727 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 727
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 727
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2622
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:08) MalzPL's Prayer of Mending heals MalzSent for 520 points.
.ctor :: (04:49:08) MalzPL's Prayer of Mending heals MalzSent for 520 points.
.ctor :: RegEx Match :: (04:49:08) MalzPL's Prayer of Mending heals MalzSent for 520 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 520
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 520
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2624
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:08) MalzPL's Prayer of Mending heals MalzDruid for 546 points.
.ctor :: (04:49:08) MalzPL's Prayer of Mending heals MalzDruid for 546 points.
.ctor :: RegEx Match :: (04:49:08) MalzPL's Prayer of Mending heals MalzDruid for 546 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 546
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 546
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2626
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:08) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:08) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:08) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2628
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:08) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:08) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:08) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2630
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:08) MalzDruid's Prayer of Mending heals MalzPL for 693 points.
.ctor :: (04:49:08) MalzDruid's Prayer of Mending heals MalzPL for 693 points.
.ctor :: RegEx Match :: (04:49:08) MalzDruid's Prayer of Mending heals MalzPL for 693 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 693
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 693
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2632
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:08) MalzDruid's Prayer of Mending heals you for 531 points.
.ctor :: (04:49:08) MalzDruid's Prayer of Mending heals you for 531 points.
.ctor :: RegEx Match :: (04:49:08) MalzDruid's Prayer of Mending heals you for 531 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 531
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 531
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2634
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:08) MalzDruid's Prayer of Mending heals MalzSent for 617 points.
.ctor :: (04:49:08) MalzDruid's Prayer of Mending heals MalzSent for 617 points.
.ctor :: RegEx Match :: (04:49:08) MalzDruid's Prayer of Mending heals MalzSent for 617 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 617
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 617
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2636
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:08) MalzDruid's Prayer of Mending heals MalzDruid for 664 points.
.ctor :: (04:49:08) MalzDruid's Prayer of Mending heals MalzDruid for 664 points.
.ctor :: RegEx Match :: (04:49:08) MalzDruid's Prayer of Mending heals MalzDruid for 664 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 664
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 664
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2638
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:08) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:08) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:08) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2640
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:08) MalzSent's Righteous Word of Binding smites Moss Ogre for 506 points of damage!
.ctor :: (04:49:08) MalzSent's Righteous Word of Binding smites Moss Ogre for 506 points of damage!
.ctor :: RegEx Match :: (04:49:08) MalzSent's Righteous Word of Binding smites Moss Ogre for 506 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 506
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 506
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2642
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:08) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:08) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:08) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2644
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:08) Moss Ogre casts Flesh of Lead.
.ctor :: (04:49:08) Moss Ogre casts Flesh of Lead.
.ctor :: RegEx Match :: (04:49:08) Moss Ogre casts Flesh of Lead.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = Flesh of Lead
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = Flesh of Lead
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2646
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:08) Moss Ogre feels warded against magic.
.ctor :: (04:49:08) Moss Ogre feels warded against magic.
ParseLine :: (04:49:08) MalzPL casts Earthquake.
.ctor :: (04:49:08) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:08) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2650
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:08) MalzPL's Earthquake hurts Moss Ogre for 1664 points of damage.
.ctor :: (04:49:08) MalzPL's Earthquake hurts Moss Ogre for 1664 points of damage.
.ctor :: RegEx Match :: (04:49:08) MalzPL's Earthquake hurts Moss Ogre for 1664 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1664
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1664
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2652
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:08) MalzPL casts Earthquake.
.ctor :: (04:49:08) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:08) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2654
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:08) The Moss Ogre misses YOU!
.ctor :: (04:49:08) The Moss Ogre misses YOU!
.ctor :: RegEx Match :: (04:49:08) The Moss Ogre misses YOU!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = YOU
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2656
ParseLine :: AddCombatAction :: Target     = YOU
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:08) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:08) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:08) Moss Ogre's warding fades.
.ctor :: (04:49:08) Moss Ogre's warding fades.
ParseLine :: (04:49:08) Moss Ogre no longer feels as vulnerable to holy magic.
.ctor :: (04:49:08) Moss Ogre no longer feels as vulnerable to holy magic.
ParseLine :: (04:49:08) MalzDruid casts Earthquake.
.ctor :: (04:49:08) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:08) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2664
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:08) MalzDruid's Earthquake hurts Moss Ogre for 1319 points of damage.
.ctor :: (04:49:08) MalzDruid's Earthquake hurts Moss Ogre for 1319 points of damage.
.ctor :: RegEx Match :: (04:49:08) MalzDruid's Earthquake hurts Moss Ogre for 1319 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1319
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1319
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2666
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:08) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:08) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:08) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2668
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:08) MalzDruid casts Earthquake.
.ctor :: (04:49:08) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:08) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2670
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:08) MalzDruid casts Call Lightning.
.ctor :: (04:49:08) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:08) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2672
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:08) MalzDruid casts Call Lightning.
.ctor :: (04:49:08) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:08) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2674
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:08) MalzDruid casts Call Lightning.
.ctor :: (04:49:08) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:08) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2676
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:08) Mud Ogre is stunned!
.ctor :: (04:49:08) Mud Ogre is stunned!
ParseLine :: (04:49:08) Moss Ogre is stunned!
.ctor :: (04:49:08) Moss Ogre is stunned!
ParseLine :: (04:49:08) MalzDruid's Call Lightning shocks Mud Ogre for 710 points of damage!
.ctor :: (04:49:08) MalzDruid's Call Lightning shocks Mud Ogre for 710 points of damage!
.ctor :: RegEx Match :: (04:49:08) MalzDruid's Call Lightning shocks Mud Ogre for 710 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 710
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 710
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2682
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:08) MalzPL casts Prayer of Mending.
.ctor :: (04:49:08) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:08) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2684
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:08) MalzPL's Prayer of Mending heals MalzPL for 627 points.
.ctor :: (04:49:08) MalzPL's Prayer of Mending heals MalzPL for 627 points.
.ctor :: RegEx Match :: (04:49:08) MalzPL's Prayer of Mending heals MalzPL for 627 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 627
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 627
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2686
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:08) MalzPL's Prayer of Mending heals you for 463 points.
.ctor :: (04:49:08) MalzPL's Prayer of Mending heals you for 463 points.
.ctor :: RegEx Match :: (04:49:08) MalzPL's Prayer of Mending heals you for 463 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 463
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 463
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2688
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:08) MalzPL's Prayer of Mending heals MalzSent for 434 points.
.ctor :: (04:49:08) MalzPL's Prayer of Mending heals MalzSent for 434 points.
.ctor :: RegEx Match :: (04:49:08) MalzPL's Prayer of Mending heals MalzSent for 434 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 434
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 434
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2690
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:08) Moss Ogre is no longer stunned.
.ctor :: (04:49:08) Moss Ogre is no longer stunned.
ParseLine :: (04:49:08) Mud Ogre is no longer stunned.
.ctor :: (04:49:08) Mud Ogre is no longer stunned.
ParseLine :: (04:49:08) MalzPL's Prayer of Mending heals MalzDruid for 574 points.
.ctor :: (04:49:08) MalzPL's Prayer of Mending heals MalzDruid for 574 points.
.ctor :: RegEx Match :: (04:49:08) MalzPL's Prayer of Mending heals MalzDruid for 574 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 574
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 574
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2696
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:08) The Mud Ogre misses MalzPL.
.ctor :: (04:49:08) The Mud Ogre misses MalzPL.
.ctor :: RegEx Match :: (04:49:08) The Mud Ogre misses MalzPL.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2698
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:08) MalzPL hits the Mud Ogre for 21 points of damage.
.ctor :: (04:49:08) MalzPL hits the Mud Ogre for 21 points of damage.
.ctor :: RegEx Match :: (04:49:08) MalzPL hits the Mud Ogre for 21 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 21
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 21
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2700
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:08) MalzDruid hits the Moss Ogre for 32 points of damage.
.ctor :: (04:49:08) MalzDruid hits the Moss Ogre for 32 points of damage.
.ctor :: RegEx Match :: (04:49:08) MalzDruid hits the Moss Ogre for 32 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 32
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 32
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2702
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:08) The Moss Ogre misses MalzDruid.
.ctor :: (04:49:08) The Moss Ogre misses MalzDruid.
.ctor :: RegEx Match :: (04:49:08) The Moss Ogre misses MalzDruid.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2704
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:08) MalzPL hits the Mud Ogre for 28 points of damage.
.ctor :: (04:49:08) MalzPL hits the Mud Ogre for 28 points of damage.
.ctor :: RegEx Match :: (04:49:08) MalzPL hits the Mud Ogre for 28 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 28
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 28
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2706
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:08) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:08) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:08) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2708
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:08) MalzSent's Righteous Word of Binding smites Mud Ogre for 741 points of damage!
.ctor :: (04:49:08) MalzSent's Righteous Word of Binding smites Mud Ogre for 741 points of damage!
.ctor :: RegEx Match :: (04:49:08) MalzSent's Righteous Word of Binding smites Mud Ogre for 741 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 741
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 741
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2710
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:08) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:08) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:08) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2712
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:08) MalzDruid hits the Moss Ogre for 49 points of damage.
.ctor :: (04:49:08) MalzDruid hits the Moss Ogre for 49 points of damage.
.ctor :: RegEx Match :: (04:49:08) MalzDruid hits the Moss Ogre for 49 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 49
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 49
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2714
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:08) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:08) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:08) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2716
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:08) MalzDruid's Prayer of Mending heals MalzPL for 626 points.
.ctor :: (04:49:08) MalzDruid's Prayer of Mending heals MalzPL for 626 points.
.ctor :: RegEx Match :: (04:49:08) MalzDruid's Prayer of Mending heals MalzPL for 626 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 626
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 626
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2718
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:08) MalzDruid's Prayer of Mending heals you for 563 points.
.ctor :: (04:49:08) MalzDruid's Prayer of Mending heals you for 563 points.
.ctor :: RegEx Match :: (04:49:08) MalzDruid's Prayer of Mending heals you for 563 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 563
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 563
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2720
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:08) MalzDruid's Prayer of Mending heals MalzSent for 527 points.
.ctor :: (04:49:08) MalzDruid's Prayer of Mending heals MalzSent for 527 points.
.ctor :: RegEx Match :: (04:49:08) MalzDruid's Prayer of Mending heals MalzSent for 527 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 527
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 527
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2722
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:08) MalzDruid's Prayer of Mending heals MalzDruid for 414 points.
.ctor :: (04:49:08) MalzDruid's Prayer of Mending heals MalzDruid for 414 points.
.ctor :: RegEx Match :: (04:49:08) MalzDruid's Prayer of Mending heals MalzDruid for 414 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:08
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 414
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 414
ParseLine :: AddCombatAction :: Time       = 04:49:08
ParseLine :: AddCombatAction :: Time_Sorter= 2724
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:08) Moss Ogre's stun immunity has worn off.
.ctor :: (04:49:08) Moss Ogre's stun immunity has worn off.
ParseLine :: (04:49:08) Mud Ogre's stun immunity has worn off.
.ctor :: (04:49:08) Mud Ogre's stun immunity has worn off.
ParseLine :: (04:49:09) MalzPL hits the Mud Ogre for 46 points of damage.
.ctor :: (04:49:09) MalzPL hits the Mud Ogre for 46 points of damage.
.ctor :: RegEx Match :: (04:49:09) MalzPL hits the Mud Ogre for 46 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 46
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 46
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2730
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:09) The Moss Ogre misses MalzDruid.
.ctor :: (04:49:09) The Moss Ogre misses MalzDruid.
.ctor :: RegEx Match :: (04:49:09) The Moss Ogre misses MalzDruid.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2732
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:09) MalzDruid hits the Moss Ogre for 27 points of damage.
.ctor :: (04:49:09) MalzDruid hits the Moss Ogre for 27 points of damage.
.ctor :: RegEx Match :: (04:49:09) MalzDruid hits the Moss Ogre for 27 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 27
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 27
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2734
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:09) MalzPL casts Earthquake.
.ctor :: (04:49:09) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:09) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2736
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:09) MalzPL's Earthquake hurts Moss Ogre for 1098 points of damage.
.ctor :: (04:49:09) MalzPL's Earthquake hurts Moss Ogre for 1098 points of damage.
.ctor :: RegEx Match :: (04:49:09) MalzPL's Earthquake hurts Moss Ogre for 1098 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1098
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1098
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2738
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:09) MalzPL's Earthquake hurts Moss Ogre for 998 points of damage.
.ctor :: (04:49:09) MalzPL's Earthquake hurts Moss Ogre for 998 points of damage.
.ctor :: RegEx Match :: (04:49:09) MalzPL's Earthquake hurts Moss Ogre for 998 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 998
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 998
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2740
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:09) MalzPL's Earthquake hurts Mud Ogre for 574 points of damage.
.ctor :: (04:49:09) MalzPL's Earthquake hurts Mud Ogre for 574 points of damage.
.ctor :: RegEx Match :: (04:49:09) MalzPL's Earthquake hurts Mud Ogre for 574 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 574
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 574
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2742
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:09) MalzPL's Earthquake hurts Moss Ogre for 1320 points of damage.
.ctor :: (04:49:09) MalzPL's Earthquake hurts Moss Ogre for 1320 points of damage.
.ctor :: RegEx Match :: (04:49:09) MalzPL's Earthquake hurts Moss Ogre for 1320 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1320
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1320
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2744
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:09) MalzPL's Earthquake hurts Mud Ogre for 1325 points of damage.
.ctor :: (04:49:09) MalzPL's Earthquake hurts Mud Ogre for 1325 points of damage.
.ctor :: RegEx Match :: (04:49:09) MalzPL's Earthquake hurts Mud Ogre for 1325 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1325
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1325
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2746
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:09) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:09) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:09) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2748
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:09) MalzSent drains 97 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: (04:49:09) MalzSent drains 97 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:09) MalzSent drains 97 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 97
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 97
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2750
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:09) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:09) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:09) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2752
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:09) MalzSent drains 139 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: (04:49:09) MalzSent drains 139 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:09) MalzSent drains 139 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 139
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 139
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2754
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:09) Moss Ogre begins to stumble.
.ctor :: (04:49:09) Moss Ogre begins to stumble.
ParseLine :: (04:49:09) MalzSent drains 102 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: (04:49:09) MalzSent drains 102 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:09) MalzSent drains 102 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 102
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 102
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2758
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:09) MalzSent drains 147 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: (04:49:09) MalzSent drains 147 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:09) MalzSent drains 147 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 147
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 147
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2760
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:09) Moss Ogre begins to stumble.
.ctor :: (04:49:09) Moss Ogre begins to stumble.
ParseLine :: (04:49:09) MalzSent drains 111 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: (04:49:09) MalzSent drains 111 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:09) MalzSent drains 111 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 111
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 111
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2764
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:09) MalzSent drains 158 points of mana from Mud Ogre with Exalted Word of Binding.
.ctor :: (04:49:09) MalzSent drains 158 points of mana from Mud Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:09) MalzSent drains 158 points of mana from Mud Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 158
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 158
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2766
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:09) Mud Ogre begins to stumble.
.ctor :: (04:49:09) Mud Ogre begins to stumble.
ParseLine :: (04:49:09) MalzSent drains 100 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: (04:49:09) MalzSent drains 100 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:09) MalzSent drains 100 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 100
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 100
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2770
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:09) MalzSent drains 143 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: (04:49:09) MalzSent drains 143 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:09) MalzSent drains 143 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 143
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 143
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2772
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:09) Moss Ogre begins to stumble.
.ctor :: (04:49:09) Moss Ogre begins to stumble.
ParseLine :: (04:49:09) MalzSent drains 100 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: (04:49:09) MalzSent drains 100 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:09) MalzSent drains 100 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 100
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 100
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2776
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:09) MalzSent drains 143 points of mana from Mud Ogre with Exalted Word of Binding.
.ctor :: (04:49:09) MalzSent drains 143 points of mana from Mud Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:09) MalzSent drains 143 points of mana from Mud Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 143
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 143
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2778
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:09) Mud Ogre begins to stumble.
.ctor :: (04:49:09) Mud Ogre begins to stumble.
ParseLine :: (04:49:09) MalzPL hits the Mud Ogre for 35 points of damage.
.ctor :: (04:49:09) MalzPL hits the Mud Ogre for 35 points of damage.
.ctor :: RegEx Match :: (04:49:09) MalzPL hits the Mud Ogre for 35 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 35
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 35
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2782
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:09) MalzDruid hits the Moss Ogre for 32 points of damage.
.ctor :: (04:49:09) MalzDruid hits the Moss Ogre for 32 points of damage.
.ctor :: RegEx Match :: (04:49:09) MalzDruid hits the Moss Ogre for 32 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 32
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 32
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2784
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:09) The Mud Ogre misses MalzSent.
.ctor :: (04:49:09) The Mud Ogre misses MalzSent.
.ctor :: RegEx Match :: (04:49:09) The Mud Ogre misses MalzSent.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2786
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:09) MalzSent misses the Mud Ogre.
.ctor :: (04:49:09) MalzSent misses the Mud Ogre.
.ctor :: RegEx Match :: (04:49:09) MalzSent misses the Mud Ogre.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2788
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:09) MalzSent blocks the Moss Ogre's attack.
.ctor :: (04:49:09) MalzSent blocks the Moss Ogre's attack.
ParseLine :: (04:49:09) MalzPL misses the Mud Ogre.
.ctor :: (04:49:09) MalzPL misses the Mud Ogre.
.ctor :: RegEx Match :: (04:49:09) MalzPL misses the Mud Ogre.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2792
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:09) MalzDruid casts Earthquake.
.ctor :: (04:49:09) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:09) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2794
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:09) MalzDruid's Earthquake hurts Moss Ogre for 1050 points of damage.
.ctor :: (04:49:09) MalzDruid's Earthquake hurts Moss Ogre for 1050 points of damage.
.ctor :: RegEx Match :: (04:49:09) MalzDruid's Earthquake hurts Moss Ogre for 1050 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1050
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1050
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2796
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:09) MalzDruid casts Earthquake.
.ctor :: (04:49:09) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:09) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2798
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:09) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:09) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:09) Moss Ogre stops stumbling.
.ctor :: (04:49:09) Moss Ogre stops stumbling.
ParseLine :: (04:49:09) MalzDruid's Earthquake hurts Moss Ogre for 1515 points of damage.
.ctor :: (04:49:09) MalzDruid's Earthquake hurts Moss Ogre for 1515 points of damage.
.ctor :: RegEx Match :: (04:49:09) MalzDruid's Earthquake hurts Moss Ogre for 1515 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1515
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1515
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2804
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:09) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:09) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:09) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2806
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:09) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:09) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:09) Mud Ogre stops stumbling.
.ctor :: (04:49:09) Mud Ogre stops stumbling.
ParseLine :: (04:49:09) MalzDruid's Earthquake hurts Mud Ogre for 1197 points of damage.
.ctor :: (04:49:09) MalzDruid's Earthquake hurts Mud Ogre for 1197 points of damage.
.ctor :: RegEx Match :: (04:49:09) MalzDruid's Earthquake hurts Mud Ogre for 1197 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1197
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1197
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2812
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:09) [Combat] Info: The Mud Ogre has died!
.ctor :: (04:49:09) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: (04:49:09) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2814
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:09) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:09) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:09) Moss Ogre stops stumbling.
.ctor :: (04:49:09) Moss Ogre stops stumbling.
ParseLine :: (04:49:09) MalzDruid's Earthquake hurts Moss Ogre for 1508 points of damage.
.ctor :: (04:49:09) MalzDruid's Earthquake hurts Moss Ogre for 1508 points of damage.
.ctor :: RegEx Match :: (04:49:09) MalzDruid's Earthquake hurts Moss Ogre for 1508 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1508
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1508
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2820
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:09) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:09) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:09) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2822
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:09) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:09) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:09) Mud Ogre stops stumbling.
.ctor :: (04:49:09) Mud Ogre stops stumbling.
ParseLine :: (04:49:09) MalzDruid's Earthquake hurts Mud Ogre for 1204 points of damage.
.ctor :: (04:49:09) MalzDruid's Earthquake hurts Mud Ogre for 1204 points of damage.
.ctor :: RegEx Match :: (04:49:09) MalzDruid's Earthquake hurts Mud Ogre for 1204 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1204
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1204
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2828
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:09) [Combat] Info: The Mud Ogre has died!
.ctor :: (04:49:09) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: (04:49:09) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2830
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:09) MalzSent blocks the Mud Ogre's attack.
.ctor :: (04:49:09) MalzSent blocks the Mud Ogre's attack.
ParseLine :: (04:49:09) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:09) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:09) Moss Ogre stops stumbling.
.ctor :: (04:49:09) Moss Ogre stops stumbling.
ParseLine :: (04:49:09) MalzPL casts Call Lightning.
.ctor :: (04:49:09) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:09) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2838
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:09) MalzPL casts Call Lightning.
.ctor :: (04:49:09) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:09) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2840
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:09) MalzPL's Call Lightning shocks Moss Ogre for 797 points of damage!
.ctor :: (04:49:09) MalzPL's Call Lightning shocks Moss Ogre for 797 points of damage!
.ctor :: RegEx Match :: (04:49:09) MalzPL's Call Lightning shocks Moss Ogre for 797 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 797
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 797
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2842
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:09) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:09) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:09) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2844
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:09) MalzPL casts Prayer of Mending.
.ctor :: (04:49:09) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:09) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2846
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:09) MalzPL's Prayer of Mending heals MalzPL for 668 points.
.ctor :: (04:49:09) MalzPL's Prayer of Mending heals MalzPL for 668 points.
.ctor :: RegEx Match :: (04:49:09) MalzPL's Prayer of Mending heals MalzPL for 668 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 668
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 668
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2848
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:09) MalzPL's Prayer of Mending heals you for 393 points.
.ctor :: (04:49:09) MalzPL's Prayer of Mending heals you for 393 points.
.ctor :: RegEx Match :: (04:49:09) MalzPL's Prayer of Mending heals you for 393 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 393
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 393
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2850
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:09) MalzPL's Prayer of Mending heals MalzSent for 790 points.
.ctor :: (04:49:09) MalzPL's Prayer of Mending heals MalzSent for 790 points.
.ctor :: RegEx Match :: (04:49:09) MalzPL's Prayer of Mending heals MalzSent for 790 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 790
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 790
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2852
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:09) MalzPL's Prayer of Mending heals MalzDruid for 683 points.
.ctor :: (04:49:09) MalzPL's Prayer of Mending heals MalzDruid for 683 points.
.ctor :: RegEx Match :: (04:49:09) MalzPL's Prayer of Mending heals MalzDruid for 683 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:09
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 683
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 683
ParseLine :: AddCombatAction :: Time       = 04:49:09
ParseLine :: AddCombatAction :: Time_Sorter= 2854
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:10) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:10) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:10) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2856
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:10) MalzDruid's Prayer of Mending heals MalzPL for 577 points.
.ctor :: (04:49:10) MalzDruid's Prayer of Mending heals MalzPL for 577 points.
.ctor :: RegEx Match :: (04:49:10) MalzDruid's Prayer of Mending heals MalzPL for 577 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 577
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 577
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2858
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:10) MalzDruid's Prayer of Mending heals you for 648 points.
.ctor :: (04:49:10) MalzDruid's Prayer of Mending heals you for 648 points.
.ctor :: RegEx Match :: (04:49:10) MalzDruid's Prayer of Mending heals you for 648 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 648
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 648
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2860
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:10) MalzDruid's Prayer of Mending heals MalzSent for 625 points.
.ctor :: (04:49:10) MalzDruid's Prayer of Mending heals MalzSent for 625 points.
.ctor :: RegEx Match :: (04:49:10) MalzDruid's Prayer of Mending heals MalzSent for 625 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 625
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 625
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2862
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:10) MalzDruid's Prayer of Mending heals MalzDruid for 555 points.
.ctor :: (04:49:10) MalzDruid's Prayer of Mending heals MalzDruid for 555 points.
.ctor :: RegEx Match :: (04:49:10) MalzDruid's Prayer of Mending heals MalzDruid for 555 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 555
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 555
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2864
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:10) MalzPL casts Prayer of Mending.
.ctor :: (04:49:10) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:10) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2866
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:10) MalzPL's Prayer of Mending heals you for 543 points.
.ctor :: (04:49:10) MalzPL's Prayer of Mending heals you for 543 points.
.ctor :: RegEx Match :: (04:49:10) MalzPL's Prayer of Mending heals you for 543 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 543
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 543
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2868
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:10) MalzPL's Prayer of Mending heals MalzPL for 610 points.
.ctor :: (04:49:10) MalzPL's Prayer of Mending heals MalzPL for 610 points.
.ctor :: RegEx Match :: (04:49:10) MalzPL's Prayer of Mending heals MalzPL for 610 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 610
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 610
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2870
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:10) MalzPL's Prayer of Mending heals MalzSent for 497 points.
.ctor :: (04:49:10) MalzPL's Prayer of Mending heals MalzSent for 497 points.
.ctor :: RegEx Match :: (04:49:10) MalzPL's Prayer of Mending heals MalzSent for 497 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 497
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 497
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2872
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:10) MalzPL's Prayer of Mending heals MalzDruid for 808 points.
.ctor :: (04:49:10) MalzPL's Prayer of Mending heals MalzDruid for 808 points.
.ctor :: RegEx Match :: (04:49:10) MalzPL's Prayer of Mending heals MalzDruid for 808 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 808
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 808
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2874
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:10) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:10) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:10) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2876
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:10) MalzDruid's Prayer of Mending heals you for 395 points.
.ctor :: (04:49:10) MalzDruid's Prayer of Mending heals you for 395 points.
.ctor :: RegEx Match :: (04:49:10) MalzDruid's Prayer of Mending heals you for 395 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 395
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 395
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2878
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:10) MalzDruid's Prayer of Mending heals MalzPL for 539 points.
.ctor :: (04:49:10) MalzDruid's Prayer of Mending heals MalzPL for 539 points.
.ctor :: RegEx Match :: (04:49:10) MalzDruid's Prayer of Mending heals MalzPL for 539 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 539
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 539
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2880
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:10) MalzDruid's Prayer of Mending heals MalzSent for 750 points.
.ctor :: (04:49:10) MalzDruid's Prayer of Mending heals MalzSent for 750 points.
.ctor :: RegEx Match :: (04:49:10) MalzDruid's Prayer of Mending heals MalzSent for 750 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 750
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 750
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2882
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:10) MalzDruid's Prayer of Mending heals MalzDruid for 373 points.
.ctor :: (04:49:10) MalzDruid's Prayer of Mending heals MalzDruid for 373 points.
.ctor :: RegEx Match :: (04:49:10) MalzDruid's Prayer of Mending heals MalzDruid for 373 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 373
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 373
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2884
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:10) MalzPL casts Prayer of Mending.
.ctor :: (04:49:10) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:10) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2886
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:10) MalzPL's Prayer of Mending heals you for 632 points.
.ctor :: (04:49:10) MalzPL's Prayer of Mending heals you for 632 points.
.ctor :: RegEx Match :: (04:49:10) MalzPL's Prayer of Mending heals you for 632 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 632
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 632
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2888
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:10) MalzPL's Prayer of Mending heals MalzPL for 614 points.
.ctor :: (04:49:10) MalzPL's Prayer of Mending heals MalzPL for 614 points.
.ctor :: RegEx Match :: (04:49:10) MalzPL's Prayer of Mending heals MalzPL for 614 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 614
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 614
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2890
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:10) MalzPL's Prayer of Mending heals MalzSent for 617 points.
.ctor :: (04:49:10) MalzPL's Prayer of Mending heals MalzSent for 617 points.
.ctor :: RegEx Match :: (04:49:10) MalzPL's Prayer of Mending heals MalzSent for 617 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 617
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 617
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2892
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:10) MalzPL's Prayer of Mending heals MalzDruid for 680 points.
.ctor :: (04:49:10) MalzPL's Prayer of Mending heals MalzDruid for 680 points.
.ctor :: RegEx Match :: (04:49:10) MalzPL's Prayer of Mending heals MalzDruid for 680 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 680
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 680
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2894
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:10) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:10) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:10) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2896
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:10) MalzDruid's Prayer of Mending heals you for 523 points.
.ctor :: (04:49:10) MalzDruid's Prayer of Mending heals you for 523 points.
.ctor :: RegEx Match :: (04:49:10) MalzDruid's Prayer of Mending heals you for 523 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 523
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 523
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2898
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:10) MalzDruid's Prayer of Mending heals MalzPL for 618 points.
.ctor :: (04:49:10) MalzDruid's Prayer of Mending heals MalzPL for 618 points.
.ctor :: RegEx Match :: (04:49:10) MalzDruid's Prayer of Mending heals MalzPL for 618 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 618
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 618
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2900
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:10) MalzDruid's Prayer of Mending heals MalzSent for 429 points.
.ctor :: (04:49:10) MalzDruid's Prayer of Mending heals MalzSent for 429 points.
.ctor :: RegEx Match :: (04:49:10) MalzDruid's Prayer of Mending heals MalzSent for 429 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 429
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 429
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2902
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:10) MalzDruid's Prayer of Mending heals MalzDruid for 778 points.
.ctor :: (04:49:10) MalzDruid's Prayer of Mending heals MalzDruid for 778 points.
.ctor :: RegEx Match :: (04:49:10) MalzDruid's Prayer of Mending heals MalzDruid for 778 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 778
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 778
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2904
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:10) MalzPL casts Earthquake.
.ctor :: (04:49:10) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:10) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2906
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:10) MalzPL's Earthquake hurts Moss Ogre for 644 points of damage.
.ctor :: (04:49:10) MalzPL's Earthquake hurts Moss Ogre for 644 points of damage.
.ctor :: RegEx Match :: (04:49:10) MalzPL's Earthquake hurts Moss Ogre for 644 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 644
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 644
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2908
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:10) MalzPL casts Earthquake.
.ctor :: (04:49:10) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:10) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2910
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:10) The Moss Ogre misses MalzDruid.
.ctor :: (04:49:10) The Moss Ogre misses MalzDruid.
.ctor :: RegEx Match :: (04:49:10) The Moss Ogre misses MalzDruid.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2912
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:10) MalzDruid hits the Moss Ogre for 41 points of damage.
.ctor :: (04:49:10) MalzDruid hits the Moss Ogre for 41 points of damage.
.ctor :: RegEx Match :: (04:49:10) MalzDruid hits the Moss Ogre for 41 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 41
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 41
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2914
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:10) MalzDruid hits the Moss Ogre for 18 points of damage.
.ctor :: (04:49:10) MalzDruid hits the Moss Ogre for 18 points of damage.
.ctor :: RegEx Match :: (04:49:10) MalzDruid hits the Moss Ogre for 18 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 18
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 18
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2916
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:10) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:10) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:10) MalzDruid casts Earthquake.
.ctor :: (04:49:10) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:10) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2920
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:10) MalzDruid's Earthquake hurts Moss Ogre for 1499 points of damage.
.ctor :: (04:49:10) MalzDruid's Earthquake hurts Moss Ogre for 1499 points of damage.
.ctor :: RegEx Match :: (04:49:10) MalzDruid's Earthquake hurts Moss Ogre for 1499 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1499
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1499
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2922
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:10) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:10) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:10) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2924
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:10) MalzDruid casts Earthquake.
.ctor :: (04:49:10) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:10) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2926
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:10) MalzDruid's Earthquake hurts Vorok Mud-Chief for 688 points of damage.
.ctor :: (04:49:10) MalzDruid's Earthquake hurts Vorok Mud-Chief for 688 points of damage.
.ctor :: RegEx Match :: (04:49:10) MalzDruid's Earthquake hurts Vorok Mud-Chief for 688 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 688
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 688
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2928
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:10) MalzPL casts Call Lightning.
.ctor :: (04:49:10) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:10) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2930
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:10) MalzPL casts Call Lightning.
.ctor :: (04:49:10) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:10) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2932
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:10) Vorok Mud-Chief is stunned!
.ctor :: (04:49:10) Vorok Mud-Chief is stunned!
ParseLine :: (04:49:10) MalzPL casts Call Lightning.
.ctor :: (04:49:10) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:10) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2936
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:10) MalzPL casts Call Lightning.
.ctor :: (04:49:10) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:10) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2938
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:10) MalzPL's Call Lightning shocks Vorok Mud-Chief for 672 points of damage!
.ctor :: (04:49:10) MalzPL's Call Lightning shocks Vorok Mud-Chief for 672 points of damage!
.ctor :: RegEx Match :: (04:49:10) MalzPL's Call Lightning shocks Vorok Mud-Chief for 672 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 672
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 672
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2940
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:10) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:10) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:10) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2942
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:10) MalzSent's Righteous Word of Binding smites Vorok Mud-Chief for 545 points of damage!
.ctor :: (04:49:10) MalzSent's Righteous Word of Binding smites Vorok Mud-Chief for 545 points of damage!
.ctor :: RegEx Match :: (04:49:10) MalzSent's Righteous Word of Binding smites Vorok Mud-Chief for 545 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 545
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 545
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2944
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:10) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:10) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:10) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2946
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:10) Vorok Mud-Chief is no longer stunned.
.ctor :: (04:49:10) Vorok Mud-Chief is no longer stunned.
ParseLine :: (04:49:10) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:10) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:10) Vorok Mud-Chief's stun immunity has worn off.
.ctor :: (04:49:10) Vorok Mud-Chief's stun immunity has worn off.
ParseLine :: (04:49:10) MalzDruid casts Call Lightning.
.ctor :: (04:49:10) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:10) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2954
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:10) MalzDruid casts Call Lightning.
.ctor :: (04:49:10) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:10) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2956
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:10) [Combat] Info: The Mud Ogre attacks HardC
.ctor :: (04:49:10) [Combat] Info: The Mud Ogre attacks HardC
.ctor :: RegEx Match :: (04:49:10) [Combat] Info: The Mud Ogre attacks HardC
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = HardC
.ctor :: RegEx Match :: Ability    = Challenge
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = attack
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 26
.ctor :: RegEx Match :: RegExDesc  = Taunt :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<target>.*) (?<type>[atck]*)s? (?<source>.*)
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = HardC
ParseLine :: AddCombatAction :: Ability    = Challenge
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2958
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = attack
ParseLine :: (04:49:10) MalzDruid's Call Lightning shocks Vorok Mud-Chief for 838 points of damage!
.ctor :: (04:49:10) MalzDruid's Call Lightning shocks Vorok Mud-Chief for 838 points of damage!
.ctor :: RegEx Match :: (04:49:10) MalzDruid's Call Lightning shocks Vorok Mud-Chief for 838 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 838
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 838
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2960
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:10) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: (04:49:10) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: RegEx Match :: (04:49:10) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = Vorok Mud-Chief
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2962
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:10) MalzPL casts Prayer of Mending.
.ctor :: (04:49:10) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:10) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2964
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:10) MalzPL's Prayer of Mending heals MalzPL for 820 points.
.ctor :: (04:49:10) MalzPL's Prayer of Mending heals MalzPL for 820 points.
.ctor :: RegEx Match :: (04:49:10) MalzPL's Prayer of Mending heals MalzPL for 820 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 820
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 820
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2966
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:10) MalzPL's Prayer of Mending heals you for 593 points.
.ctor :: (04:49:10) MalzPL's Prayer of Mending heals you for 593 points.
.ctor :: RegEx Match :: (04:49:10) MalzPL's Prayer of Mending heals you for 593 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 593
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 593
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2968
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:10) MalzPL's Prayer of Mending heals MalzSent for 578 points.
.ctor :: (04:49:10) MalzPL's Prayer of Mending heals MalzSent for 578 points.
.ctor :: RegEx Match :: (04:49:10) MalzPL's Prayer of Mending heals MalzSent for 578 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 578
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 578
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2970
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:10) MalzPL's Prayer of Mending heals MalzDruid for 361 points.
.ctor :: (04:49:10) MalzPL's Prayer of Mending heals MalzDruid for 361 points.
.ctor :: RegEx Match :: (04:49:10) MalzPL's Prayer of Mending heals MalzDruid for 361 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 361
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 361
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2972
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:10) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:10) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:10) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2974
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:10) MalzDruid's Prayer of Mending heals MalzPL for 600 points.
.ctor :: (04:49:10) MalzDruid's Prayer of Mending heals MalzPL for 600 points.
.ctor :: RegEx Match :: (04:49:10) MalzDruid's Prayer of Mending heals MalzPL for 600 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 600
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 600
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2976
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:10) MalzDruid's Prayer of Mending heals you for 644 points.
.ctor :: (04:49:10) MalzDruid's Prayer of Mending heals you for 644 points.
.ctor :: RegEx Match :: (04:49:10) MalzDruid's Prayer of Mending heals you for 644 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 644
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 644
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2978
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:10) MalzDruid's Prayer of Mending heals MalzSent for 494 points.
.ctor :: (04:49:10) MalzDruid's Prayer of Mending heals MalzSent for 494 points.
.ctor :: RegEx Match :: (04:49:10) MalzDruid's Prayer of Mending heals MalzSent for 494 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 494
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 494
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2980
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:10) MalzDruid's Prayer of Mending heals MalzDruid for 471 points.
.ctor :: (04:49:10) MalzDruid's Prayer of Mending heals MalzDruid for 471 points.
.ctor :: RegEx Match :: (04:49:10) MalzDruid's Prayer of Mending heals MalzDruid for 471 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:10
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 471
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 471
ParseLine :: AddCombatAction :: Time       = 04:49:10
ParseLine :: AddCombatAction :: Time_Sorter= 2982
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:11) MalzPL casts Earthquake.
.ctor :: (04:49:11) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:11) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 2984
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:11) MalzPL's Earthquake hurts Mud Ogre for 999 points of damage.
.ctor :: (04:49:11) MalzPL's Earthquake hurts Mud Ogre for 999 points of damage.
.ctor :: RegEx Match :: (04:49:11) MalzPL's Earthquake hurts Mud Ogre for 999 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 999
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 999
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 2986
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:11) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:11) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:11) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 2988
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:11) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:11) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:11) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 2990
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:11) The Mud Ogre hits YOU for 118 points of damage!
.ctor :: (04:49:11) The Mud Ogre hits YOU for 118 points of damage!
.ctor :: RegEx Match :: (04:49:11) The Mud Ogre hits YOU for 118 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = YOU
.ctor :: RegEx Match :: Value      = 118
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 118
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 2992
ParseLine :: AddCombatAction :: Target     = YOU
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:11) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:11) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:11) Mud Ogre no longer feels as vulnerable to holy magic.
.ctor :: (04:49:11) Mud Ogre no longer feels as vulnerable to holy magic.
ParseLine :: (04:49:11) MalzDruid casts Earthquake.
.ctor :: (04:49:11) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:11) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 2998
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:11) MalzDruid's Earthquake hurts Mud Ogre for 1276 points of damage.
.ctor :: (04:49:11) MalzDruid's Earthquake hurts Mud Ogre for 1276 points of damage.
.ctor :: RegEx Match :: (04:49:11) MalzDruid's Earthquake hurts Mud Ogre for 1276 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1276
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1276
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3000
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:11) [Combat] Info: The Mud Ogre has died!
.ctor :: (04:49:11) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: (04:49:11) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3002
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:11) MalzPL casts Prayer of Mending.
.ctor :: (04:49:11) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:11) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3004
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:11) MalzPL's Prayer of Mending heals MalzPL for 576 points.
.ctor :: (04:49:11) MalzPL's Prayer of Mending heals MalzPL for 576 points.
.ctor :: RegEx Match :: (04:49:11) MalzPL's Prayer of Mending heals MalzPL for 576 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 576
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 576
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3006
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:11) MalzPL's Prayer of Mending heals you for 652 points.
.ctor :: (04:49:11) MalzPL's Prayer of Mending heals you for 652 points.
.ctor :: RegEx Match :: (04:49:11) MalzPL's Prayer of Mending heals you for 652 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 652
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 652
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3008
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:11) MalzPL's Prayer of Mending heals MalzSent for 580 points.
.ctor :: (04:49:11) MalzPL's Prayer of Mending heals MalzSent for 580 points.
.ctor :: RegEx Match :: (04:49:11) MalzPL's Prayer of Mending heals MalzSent for 580 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 580
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 580
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3010
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:11) MalzPL's Prayer of Mending heals MalzDruid for 593 points.
.ctor :: (04:49:11) MalzPL's Prayer of Mending heals MalzDruid for 593 points.
.ctor :: RegEx Match :: (04:49:11) MalzPL's Prayer of Mending heals MalzDruid for 593 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 593
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 593
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3012
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:11) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:11) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:11) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3014
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:11) MalzDruid's Prayer of Mending heals MalzPL for 601 points.
.ctor :: (04:49:11) MalzDruid's Prayer of Mending heals MalzPL for 601 points.
.ctor :: RegEx Match :: (04:49:11) MalzDruid's Prayer of Mending heals MalzPL for 601 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 601
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 601
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3016
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:11) MalzDruid's Prayer of Mending heals you for 467 points.
.ctor :: (04:49:11) MalzDruid's Prayer of Mending heals you for 467 points.
.ctor :: RegEx Match :: (04:49:11) MalzDruid's Prayer of Mending heals you for 467 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 467
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 467
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3018
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:11) MalzDruid's Prayer of Mending heals MalzSent for 723 points.
.ctor :: (04:49:11) MalzDruid's Prayer of Mending heals MalzSent for 723 points.
.ctor :: RegEx Match :: (04:49:11) MalzDruid's Prayer of Mending heals MalzSent for 723 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 723
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 723
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3020
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:11) MalzDruid's Prayer of Mending heals MalzDruid for 632 points.
.ctor :: (04:49:11) MalzDruid's Prayer of Mending heals MalzDruid for 632 points.
.ctor :: RegEx Match :: (04:49:11) MalzDruid's Prayer of Mending heals MalzDruid for 632 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 632
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 632
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3022
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:11) [Combat] Info: The Tavok Chief-brother attacks HardC
.ctor :: (04:49:11) [Combat] Info: The Tavok Chief-brother attacks HardC
.ctor :: RegEx Match :: (04:49:11) [Combat] Info: The Tavok Chief-brother attacks HardC
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = HardC
.ctor :: RegEx Match :: Ability    = Challenge
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = attack
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 26
.ctor :: RegEx Match :: RegExDesc  = Taunt :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<target>.*) (?<type>[atck]*)s? (?<source>.*)
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = HardC
ParseLine :: AddCombatAction :: Ability    = Challenge
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3024
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = attack
ParseLine :: (04:49:11) MalzDruid casts Call Lightning.
.ctor :: (04:49:11) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:11) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3026
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:11) MalzDruid casts Call Lightning.
.ctor :: (04:49:11) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:11) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3028
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:11) Tavok Chief-brother is stunned!
.ctor :: (04:49:11) Tavok Chief-brother is stunned!
ParseLine :: (04:49:11) MalzDruid casts Call Lightning.
.ctor :: (04:49:11) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:11) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3032
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:11) MalzDruid's Call Lightning shocks Tavok Chief-brother for 733 points of damage!
.ctor :: (04:49:11) MalzDruid's Call Lightning shocks Tavok Chief-brother for 733 points of damage!
.ctor :: RegEx Match :: (04:49:11) MalzDruid's Call Lightning shocks Tavok Chief-brother for 733 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 733
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 733
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3034
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:11) Tavok Chief-brother is no longer stunned.
.ctor :: (04:49:11) Tavok Chief-brother is no longer stunned.
ParseLine :: (04:49:11) MalzPL casts Prayer of Mending.
.ctor :: (04:49:11) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:11) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3038
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:11) MalzPL's Prayer of Mending heals MalzPL for 623 points.
.ctor :: (04:49:11) MalzPL's Prayer of Mending heals MalzPL for 623 points.
.ctor :: RegEx Match :: (04:49:11) MalzPL's Prayer of Mending heals MalzPL for 623 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 623
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 623
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3040
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:11) MalzPL's Prayer of Mending heals you for 745 points.
.ctor :: (04:49:11) MalzPL's Prayer of Mending heals you for 745 points.
.ctor :: RegEx Match :: (04:49:11) MalzPL's Prayer of Mending heals you for 745 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 745
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 745
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3042
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:11) MalzPL's Prayer of Mending heals MalzSent for 705 points.
.ctor :: (04:49:11) MalzPL's Prayer of Mending heals MalzSent for 705 points.
.ctor :: RegEx Match :: (04:49:11) MalzPL's Prayer of Mending heals MalzSent for 705 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 705
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 705
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3044
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:11) MalzPL's Prayer of Mending heals MalzDruid for 656 points.
.ctor :: (04:49:11) MalzPL's Prayer of Mending heals MalzDruid for 656 points.
.ctor :: RegEx Match :: (04:49:11) MalzPL's Prayer of Mending heals MalzDruid for 656 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 656
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 656
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3046
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:11) You block the Tavok Chief-brother's attack!
.ctor :: (04:49:11) You block the Tavok Chief-brother's attack!
.ctor :: RegEx Match :: (04:49:11) You block the Tavok Chief-brother's attack!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = Tavok Chief-brother
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = You
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = block
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 16
.ctor :: RegEx Match :: RegExDesc  = You Block :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>block) (?<source>.*)'s .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3048
ParseLine :: AddCombatAction :: Target     = You
ParseLine :: AddCombatAction :: Value_Type = block
ParseLine :: (04:49:11) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:11) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:11) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3050
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:11) MalzDruid's Prayer of Mending heals MalzPL for 462 points.
.ctor :: (04:49:11) MalzDruid's Prayer of Mending heals MalzPL for 462 points.
.ctor :: RegEx Match :: (04:49:11) MalzDruid's Prayer of Mending heals MalzPL for 462 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 462
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 462
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3052
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:11) MalzDruid's Prayer of Mending heals you for 609 points.
.ctor :: (04:49:11) MalzDruid's Prayer of Mending heals you for 609 points.
.ctor :: RegEx Match :: (04:49:11) MalzDruid's Prayer of Mending heals you for 609 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 609
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 609
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3054
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:11) MalzDruid's Prayer of Mending heals MalzSent for 692 points.
.ctor :: (04:49:11) MalzDruid's Prayer of Mending heals MalzSent for 692 points.
.ctor :: RegEx Match :: (04:49:11) MalzDruid's Prayer of Mending heals MalzSent for 692 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 692
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 692
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3056
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:11) MalzDruid's Prayer of Mending heals MalzDruid for 769 points.
.ctor :: (04:49:11) MalzDruid's Prayer of Mending heals MalzDruid for 769 points.
.ctor :: RegEx Match :: (04:49:11) MalzDruid's Prayer of Mending heals MalzDruid for 769 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 769
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 769
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3058
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:11) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:11) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:11) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3060
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:11) Tavok Chief-brother's stun immunity has worn off.
.ctor :: (04:49:11) Tavok Chief-brother's stun immunity has worn off.
ParseLine :: (04:49:11) You block the Tavok Chief-brother's attack!
.ctor :: (04:49:11) You block the Tavok Chief-brother's attack!
.ctor :: RegEx Match :: (04:49:11) You block the Tavok Chief-brother's attack!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = Tavok Chief-brother
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = You
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = block
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 16
.ctor :: RegEx Match :: RegExDesc  = You Block :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>block) (?<source>.*)'s .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3064
ParseLine :: AddCombatAction :: Target     = You
ParseLine :: AddCombatAction :: Value_Type = block
ParseLine :: (04:49:11) MalzPL casts Earthquake.
.ctor :: (04:49:11) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:11) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3066
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:11) MalzPL's Earthquake hurts Tavok Chief-brother for 591 points of damage.
.ctor :: (04:49:11) MalzPL's Earthquake hurts Tavok Chief-brother for 591 points of damage.
.ctor :: RegEx Match :: (04:49:11) MalzPL's Earthquake hurts Tavok Chief-brother for 591 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 591
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 591
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3068
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:11) MalzPL casts Earthquake.
.ctor :: (04:49:11) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:11) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3070
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:11) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:11) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:11) Tavok Chief-brother no longer feels as vulnerable to holy magic.
.ctor :: (04:49:11) Tavok Chief-brother no longer feels as vulnerable to holy magic.
ParseLine :: (04:49:11) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:11) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:11) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3076
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:11) MalzSent's Righteous Word of Binding smites Tavok Chief-brother for 1118 points of damage!
.ctor :: (04:49:11) MalzSent's Righteous Word of Binding smites Tavok Chief-brother for 1118 points of damage!
.ctor :: RegEx Match :: (04:49:11) MalzSent's Righteous Word of Binding smites Tavok Chief-brother for 1118 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 1118
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 1118
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3078
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:11) [Combat] Info: The Tavok Chief-brother has died!
.ctor :: (04:49:11) [Combat] Info: The Tavok Chief-brother has died!
.ctor :: RegEx Match :: (04:49:11) [Combat] Info: The Tavok Chief-brother has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = Tavok Chief-brother
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3080
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:11) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:11) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:11) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3082
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:11) MalzDruid assumes Offensive Stance.
.ctor :: (04:49:11) MalzDruid assumes Offensive Stance.
.ctor :: RegEx Match :: (04:49:11) MalzDruid assumes Offensive Stance.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Offensive Stance
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = assume
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 23
.ctor :: RegEx Match :: RegExDesc  = Use power -- assume :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>assume)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Offensive Stance
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3084
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = assume
ParseLine :: (04:49:11) MalzPL casts Prayer of Mending.
.ctor :: (04:49:11) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:11) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3086
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:11) MalzPL's Prayer of Mending heals MalzPL for 636 points.
.ctor :: (04:49:11) MalzPL's Prayer of Mending heals MalzPL for 636 points.
.ctor :: RegEx Match :: (04:49:11) MalzPL's Prayer of Mending heals MalzPL for 636 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 636
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 636
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3088
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:11) MalzPL's Prayer of Mending heals you for 720 points.
.ctor :: (04:49:11) MalzPL's Prayer of Mending heals you for 720 points.
.ctor :: RegEx Match :: (04:49:11) MalzPL's Prayer of Mending heals you for 720 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 720
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 720
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3090
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:11) MalzPL's Prayer of Mending heals MalzSent for 565 points.
.ctor :: (04:49:11) MalzPL's Prayer of Mending heals MalzSent for 565 points.
.ctor :: RegEx Match :: (04:49:11) MalzPL's Prayer of Mending heals MalzSent for 565 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 565
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 565
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3092
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:11) MalzPL's Prayer of Mending heals MalzDruid for 590 points.
.ctor :: (04:49:11) MalzPL's Prayer of Mending heals MalzDruid for 590 points.
.ctor :: RegEx Match :: (04:49:11) MalzPL's Prayer of Mending heals MalzDruid for 590 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 590
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 590
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3094
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:11) MalzDruid casts Blessing of the Grove.
.ctor :: (04:49:11) MalzDruid casts Blessing of the Grove.
.ctor :: RegEx Match :: (04:49:11) MalzDruid casts Blessing of the Grove.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Blessing of the Grove
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Blessing of the Grove
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3096
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:11) MalzDruid looks stronger and healthier!
.ctor :: (04:49:11) MalzDruid looks stronger and healthier!
ParseLine :: (04:49:11) MalzDruid looks stronger and healthier!
.ctor :: (04:49:11) MalzDruid looks stronger and healthier!
ParseLine :: (04:49:11) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: (04:49:11) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: RegEx Match :: (04:49:11) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = HardC
.ctor :: RegEx Match :: Ability    = Challenge
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = attack
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 26
.ctor :: RegEx Match :: RegExDesc  = Taunt :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<target>.*) (?<type>[atck]*)s? (?<source>.*)
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = HardC
ParseLine :: AddCombatAction :: Ability    = Challenge
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3102
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = attack
ParseLine :: (04:49:11) MalzPL assumes Offensive Stance.
.ctor :: (04:49:11) MalzPL assumes Offensive Stance.
.ctor :: RegEx Match :: (04:49:11) MalzPL assumes Offensive Stance.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Offensive Stance
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = assume
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 23
.ctor :: RegEx Match :: RegExDesc  = Use power -- assume :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>assume)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Offensive Stance
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3104
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = assume
ParseLine :: (04:49:11) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:11) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:11) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3106
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:11) MalzDruid's Prayer of Mending heals MalzPL for 542 points.
.ctor :: (04:49:11) MalzDruid's Prayer of Mending heals MalzPL for 542 points.
.ctor :: RegEx Match :: (04:49:11) MalzDruid's Prayer of Mending heals MalzPL for 542 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 542
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 542
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3108
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:11) MalzDruid's Prayer of Mending heals you for 332 points.
.ctor :: (04:49:11) MalzDruid's Prayer of Mending heals you for 332 points.
.ctor :: RegEx Match :: (04:49:11) MalzDruid's Prayer of Mending heals you for 332 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:11
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 332
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 332
ParseLine :: AddCombatAction :: Time       = 04:49:11
ParseLine :: AddCombatAction :: Time_Sorter= 3110
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:12) MalzDruid's Prayer of Mending heals MalzSent for 464 points.
.ctor :: (04:49:12) MalzDruid's Prayer of Mending heals MalzSent for 464 points.
.ctor :: RegEx Match :: (04:49:12) MalzDruid's Prayer of Mending heals MalzSent for 464 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 464
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 464
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3112
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:12) MalzDruid's Prayer of Mending heals MalzDruid for 611 points.
.ctor :: (04:49:12) MalzDruid's Prayer of Mending heals MalzDruid for 611 points.
.ctor :: RegEx Match :: (04:49:12) MalzDruid's Prayer of Mending heals MalzDruid for 611 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 611
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 611
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3114
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:12) Moss Ogre casts Mantle of Stone.
.ctor :: (04:49:12) Moss Ogre casts Mantle of Stone.
.ctor :: RegEx Match :: (04:49:12) Moss Ogre casts Mantle of Stone.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = Mantle of Stone
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = Mantle of Stone
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3116
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:12) Moss Ogre feels warded from harm.
.ctor :: (04:49:12) Moss Ogre feels warded from harm.
ParseLine :: (04:49:12) MalzPL casts Blessing of the Grove.
.ctor :: (04:49:12) MalzPL casts Blessing of the Grove.
.ctor :: RegEx Match :: (04:49:12) MalzPL casts Blessing of the Grove.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Blessing of the Grove
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Blessing of the Grove
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3120
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:12) MalzPL looks stronger and healthier!
.ctor :: (04:49:12) MalzPL looks stronger and healthier!
ParseLine :: (04:49:12) MalzPL looks stronger and healthier!
.ctor :: (04:49:12) MalzPL looks stronger and healthier!
ParseLine :: (04:49:12) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:12) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:12) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3126
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:12) You block the Moss Ogre's attack!
.ctor :: (04:49:12) You block the Moss Ogre's attack!
.ctor :: RegEx Match :: (04:49:12) You block the Moss Ogre's attack!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = You
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = block
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 16
.ctor :: RegEx Match :: RegExDesc  = You Block :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>block) (?<source>.*)'s .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3128
ParseLine :: AddCombatAction :: Target     = You
ParseLine :: AddCombatAction :: Value_Type = block
ParseLine :: (04:49:12) MalzDruid casts Earthquake.
.ctor :: (04:49:12) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:12) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3130
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:12) MalzDruid's Earthquake hurts Moss Ogre for 954 points of damage.
.ctor :: (04:49:12) MalzDruid's Earthquake hurts Moss Ogre for 954 points of damage.
.ctor :: RegEx Match :: (04:49:12) MalzDruid's Earthquake hurts Moss Ogre for 954 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 954
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 954
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3132
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:12) MalzDruid casts Earthquake.
.ctor :: (04:49:12) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:12) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3134
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:12) MalzDruid's Earthquake hurts Mud Ogre for 712 points of damage.
.ctor :: (04:49:12) MalzDruid's Earthquake hurts Mud Ogre for 712 points of damage.
.ctor :: RegEx Match :: (04:49:12) MalzDruid's Earthquake hurts Mud Ogre for 712 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 712
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 712
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3136
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:12) Moss Ogre casts Flesh of Granite.
.ctor :: (04:49:12) Moss Ogre casts Flesh of Granite.
.ctor :: RegEx Match :: (04:49:12) Moss Ogre casts Flesh of Granite.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = Flesh of Granite
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = Flesh of Granite
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3138
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:12) Moss Ogre's flesh becomes as hard as granite!
.ctor :: (04:49:12) Moss Ogre's flesh becomes as hard as granite!
ParseLine :: (04:49:12) MalzPL casts Call Lightning.
.ctor :: (04:49:12) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:12) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3142
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:12) MalzPL casts Call Lightning.
.ctor :: (04:49:12) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:12) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3144
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:12) Moss Ogre is stunned!
.ctor :: (04:49:12) Moss Ogre is stunned!
ParseLine :: (04:49:12) MalzPL casts Call Lightning.
.ctor :: (04:49:12) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:12) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3148
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:12) MalzPL casts Call Lightning.
.ctor :: (04:49:12) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:12) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3150
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:12) Mud Ogre is stunned!
.ctor :: (04:49:12) Mud Ogre is stunned!
ParseLine :: (04:49:12) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:12) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:12) Moss Ogre's skin returns to normal.
.ctor :: (04:49:12) Moss Ogre's skin returns to normal.
ParseLine :: (04:49:12) Moss Ogre no longer feels as vulnerable to holy magic.
.ctor :: (04:49:12) Moss Ogre no longer feels as vulnerable to holy magic.
ParseLine :: (04:49:12) Moss Ogre's stun immunity has worn off.
.ctor :: (04:49:12) Moss Ogre's stun immunity has worn off.
ParseLine :: (04:49:12) Moss Ogre is no longer stunned.
.ctor :: (04:49:12) Moss Ogre is no longer stunned.
ParseLine :: (04:49:12) Moss Ogre is no longer warded from harm.
.ctor :: (04:49:12) Moss Ogre is no longer warded from harm.
ParseLine :: (04:49:12) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:12) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:12) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3166
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:12) MalzSent's Righteous Word of Binding smites Moss Ogre for 1054 points of damage!
.ctor :: (04:49:12) MalzSent's Righteous Word of Binding smites Moss Ogre for 1054 points of damage!
.ctor :: RegEx Match :: (04:49:12) MalzSent's Righteous Word of Binding smites Moss Ogre for 1054 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1054
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 1054
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3168
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:12) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:12) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:12) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3170
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:12) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:12) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:12) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3172
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:12) MalzPL's Call Lightning shocks Mud Ogre for 723 points of damage!
.ctor :: (04:49:12) MalzPL's Call Lightning shocks Mud Ogre for 723 points of damage!
.ctor :: RegEx Match :: (04:49:12) MalzPL's Call Lightning shocks Mud Ogre for 723 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 723
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 723
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3174
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:12) MalzSent hits the Mud Ogre for 177 points of damage.
.ctor :: (04:49:12) MalzSent hits the Mud Ogre for 177 points of damage.
.ctor :: RegEx Match :: (04:49:12) MalzSent hits the Mud Ogre for 177 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 177
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 177
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3176
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:12) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:12) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:12) Mud Ogre's stun immunity has worn off.
.ctor :: (04:49:12) Mud Ogre's stun immunity has worn off.
ParseLine :: (04:49:12) Mud Ogre is no longer stunned.
.ctor :: (04:49:12) Mud Ogre is no longer stunned.
ParseLine :: (04:49:12) MalzPL's Call Lightning shocks Moss Ogre for 869 points of damage!
.ctor :: (04:49:12) MalzPL's Call Lightning shocks Moss Ogre for 869 points of damage!
.ctor :: RegEx Match :: (04:49:12) MalzPL's Call Lightning shocks Moss Ogre for 869 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 869
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 869
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3184
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:12) MalzSent's holy weapon strikes Mud Ogre for 1043 points of damage!
.ctor :: (04:49:12) MalzSent's holy weapon strikes Mud Ogre for 1043 points of damage!
.ctor :: RegEx Match :: (04:49:12) MalzSent's holy weapon strikes Mud Ogre for 1043 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = holy weapon
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1043
.ctor :: RegEx Match :: Value_Type = strike
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = holy weapon
ParseLine :: AddCombatAction :: Value      = 1043
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3186
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = strike
ParseLine :: (04:49:12) [Combat] Info: The Mud Ogre has died!
.ctor :: (04:49:12) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: (04:49:12) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3188
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:12) MalzPL casts Prayer of Mending.
.ctor :: (04:49:12) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:12) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3190
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:12) MalzPL's Prayer of Mending heals MalzPL for 620 points.
.ctor :: (04:49:12) MalzPL's Prayer of Mending heals MalzPL for 620 points.
.ctor :: RegEx Match :: (04:49:12) MalzPL's Prayer of Mending heals MalzPL for 620 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 620
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 620
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3192
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:12) MalzPL's Prayer of Mending heals you for 499 points.
.ctor :: (04:49:12) MalzPL's Prayer of Mending heals you for 499 points.
.ctor :: RegEx Match :: (04:49:12) MalzPL's Prayer of Mending heals you for 499 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 499
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 499
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3194
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:12) MalzPL's Prayer of Mending heals MalzSent for 513 points.
.ctor :: (04:49:12) MalzPL's Prayer of Mending heals MalzSent for 513 points.
.ctor :: RegEx Match :: (04:49:12) MalzPL's Prayer of Mending heals MalzSent for 513 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 513
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 513
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3196
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:12) MalzPL's Prayer of Mending heals MalzDruid for 438 points.
.ctor :: (04:49:12) MalzPL's Prayer of Mending heals MalzDruid for 438 points.
.ctor :: RegEx Match :: (04:49:12) MalzPL's Prayer of Mending heals MalzDruid for 438 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 438
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 438
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3198
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:12) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:12) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:12) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3200
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:12) MalzDruid's Prayer of Mending heals MalzPL for 683 points.
.ctor :: (04:49:12) MalzDruid's Prayer of Mending heals MalzPL for 683 points.
.ctor :: RegEx Match :: (04:49:12) MalzDruid's Prayer of Mending heals MalzPL for 683 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 683
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 683
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3202
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:12) MalzDruid's Prayer of Mending heals you for 548 points.
.ctor :: (04:49:12) MalzDruid's Prayer of Mending heals you for 548 points.
.ctor :: RegEx Match :: (04:49:12) MalzDruid's Prayer of Mending heals you for 548 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 548
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 548
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3204
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:12) MalzDruid's Prayer of Mending heals MalzSent for 468 points.
.ctor :: (04:49:12) MalzDruid's Prayer of Mending heals MalzSent for 468 points.
.ctor :: RegEx Match :: (04:49:12) MalzDruid's Prayer of Mending heals MalzSent for 468 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 468
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 468
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3206
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:12) MalzDruid's Prayer of Mending heals MalzDruid for 454 points.
.ctor :: (04:49:12) MalzDruid's Prayer of Mending heals MalzDruid for 454 points.
.ctor :: RegEx Match :: (04:49:12) MalzDruid's Prayer of Mending heals MalzDruid for 454 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 454
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 454
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3208
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:12) MalzDruid hits the Moss Ogre for 43 points of damage.
.ctor :: (04:49:12) MalzDruid hits the Moss Ogre for 43 points of damage.
.ctor :: RegEx Match :: (04:49:12) MalzDruid hits the Moss Ogre for 43 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 43
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 43
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3210
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:12) MalzDruid blocks the Moss Ogre's attack.
.ctor :: (04:49:12) MalzDruid blocks the Moss Ogre's attack.
ParseLine :: (04:49:12) The Moss Ogre misses MalzDruid.
.ctor :: (04:49:12) The Moss Ogre misses MalzDruid.
.ctor :: RegEx Match :: (04:49:12) The Moss Ogre misses MalzDruid.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3214
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:12) Moss Ogre casts Flesh of Lead.
.ctor :: (04:49:12) Moss Ogre casts Flesh of Lead.
.ctor :: RegEx Match :: (04:49:12) Moss Ogre casts Flesh of Lead.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = Flesh of Lead
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = Flesh of Lead
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3216
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:12) Moss Ogre feels warded against magic.
.ctor :: (04:49:12) Moss Ogre feels warded against magic.
ParseLine :: (04:49:12) MalzPL casts Earthquake.
.ctor :: (04:49:12) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:12) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3220
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:12) MalzPL's Earthquake hurts Moss Ogre for 758 points of damage.
.ctor :: (04:49:12) MalzPL's Earthquake hurts Moss Ogre for 758 points of damage.
.ctor :: RegEx Match :: (04:49:12) MalzPL's Earthquake hurts Moss Ogre for 758 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 758
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 758
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3222
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:12) MalzPL casts Earthquake.
.ctor :: (04:49:12) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:12) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3224
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:12) MalzPL's Earthquake hurts Mud Ogre for 1532 points of damage.
.ctor :: (04:49:12) MalzPL's Earthquake hurts Mud Ogre for 1532 points of damage.
.ctor :: RegEx Match :: (04:49:12) MalzPL's Earthquake hurts Mud Ogre for 1532 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1532
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1532
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3226
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:12) MalzPL's Earthquake hurts Moss Ogre for 1007 points of damage.
.ctor :: (04:49:12) MalzPL's Earthquake hurts Moss Ogre for 1007 points of damage.
.ctor :: RegEx Match :: (04:49:12) MalzPL's Earthquake hurts Moss Ogre for 1007 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1007
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1007
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3228
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:12) MalzDruid hits the Moss Ogre for 35 points of damage.
.ctor :: (04:49:12) MalzDruid hits the Moss Ogre for 35 points of damage.
.ctor :: RegEx Match :: (04:49:12) MalzDruid hits the Moss Ogre for 35 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 35
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 35
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3230
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:12) The Moss Ogre misses MalzPL.
.ctor :: (04:49:12) The Moss Ogre misses MalzPL.
.ctor :: RegEx Match :: (04:49:12) The Moss Ogre misses MalzPL.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3232
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:12) MalzPL hits the Moss Ogre for 33 points of damage.
.ctor :: (04:49:12) MalzPL hits the Moss Ogre for 33 points of damage.
.ctor :: RegEx Match :: (04:49:12) MalzPL hits the Moss Ogre for 33 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 33
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 33
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3234
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:12) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:12) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:12) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3236
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:12) MalzSent's Righteous Word of Binding smites Moss Ogre for 647 points of damage!
.ctor :: (04:49:12) MalzSent's Righteous Word of Binding smites Moss Ogre for 647 points of damage!
.ctor :: RegEx Match :: (04:49:12) MalzSent's Righteous Word of Binding smites Moss Ogre for 647 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:12
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 647
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 647
ParseLine :: AddCombatAction :: Time       = 04:49:12
ParseLine :: AddCombatAction :: Time_Sorter= 3238
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:13) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:13) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:13) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3240
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:13) MalzSent's Righteous Word of Binding smites Mud Ogre for 448 points of damage!
.ctor :: (04:49:13) MalzSent's Righteous Word of Binding smites Mud Ogre for 448 points of damage!
.ctor :: RegEx Match :: (04:49:13) MalzSent's Righteous Word of Binding smites Mud Ogre for 448 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 448
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 448
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3242
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:13) MalzSent's Righteous Word of Binding smites Moss Ogre for 371 points of damage!
.ctor :: (04:49:13) MalzSent's Righteous Word of Binding smites Moss Ogre for 371 points of damage!
.ctor :: RegEx Match :: (04:49:13) MalzSent's Righteous Word of Binding smites Moss Ogre for 371 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 371
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 371
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3244
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:13) MalzDruid hits the Moss Ogre for 37 points of damage.
.ctor :: (04:49:13) MalzDruid hits the Moss Ogre for 37 points of damage.
.ctor :: RegEx Match :: (04:49:13) MalzDruid hits the Moss Ogre for 37 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 37
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 37
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3246
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:13) MalzPL hits the Moss Ogre for 28 points of damage.
.ctor :: (04:49:13) MalzPL hits the Moss Ogre for 28 points of damage.
.ctor :: RegEx Match :: (04:49:13) MalzPL hits the Moss Ogre for 28 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 28
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 28
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3248
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:13) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:13) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:13) MalzDruid casts Earthquake.
.ctor :: (04:49:13) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:13) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3252
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:13) MalzDruid's Earthquake hurts Moss Ogre for 1220 points of damage.
.ctor :: (04:49:13) MalzDruid's Earthquake hurts Moss Ogre for 1220 points of damage.
.ctor :: RegEx Match :: (04:49:13) MalzDruid's Earthquake hurts Moss Ogre for 1220 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1220
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1220
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3254
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:13) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:13) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:13) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3256
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:13) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:13) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:13) MalzDruid's Earthquake hurts Mud Ogre for 816 points of damage.
.ctor :: (04:49:13) MalzDruid's Earthquake hurts Mud Ogre for 816 points of damage.
.ctor :: RegEx Match :: (04:49:13) MalzDruid's Earthquake hurts Mud Ogre for 816 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 816
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 816
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3260
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:13) [Combat] Info: The Mud Ogre has died!
.ctor :: (04:49:13) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: (04:49:13) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3262
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:13) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:13) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:13) Moss Ogre's warding fades.
.ctor :: (04:49:13) Moss Ogre's warding fades.
ParseLine :: (04:49:13) MalzDruid's Earthquake hurts Moss Ogre for 1209 points of damage.
.ctor :: (04:49:13) MalzDruid's Earthquake hurts Moss Ogre for 1209 points of damage.
.ctor :: RegEx Match :: (04:49:13) MalzDruid's Earthquake hurts Moss Ogre for 1209 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1209
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1209
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3268
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:13) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:13) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:13) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3270
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:13) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: (04:49:13) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: RegEx Match :: (04:49:13) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = HardC
.ctor :: RegEx Match :: Ability    = Challenge
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = attack
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 26
.ctor :: RegEx Match :: RegExDesc  = Taunt :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<target>.*) (?<type>[atck]*)s? (?<source>.*)
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = HardC
ParseLine :: AddCombatAction :: Ability    = Challenge
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3272
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = attack
ParseLine :: (04:49:13) MalzPL casts Prayer of Mending.
.ctor :: (04:49:13) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:13) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3274
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:13) MalzPL's Prayer of Mending heals MalzPL for 700 points.
.ctor :: (04:49:13) MalzPL's Prayer of Mending heals MalzPL for 700 points.
.ctor :: RegEx Match :: (04:49:13) MalzPL's Prayer of Mending heals MalzPL for 700 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 700
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 700
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3276
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:13) MalzPL's Prayer of Mending heals you for 689 points.
.ctor :: (04:49:13) MalzPL's Prayer of Mending heals you for 689 points.
.ctor :: RegEx Match :: (04:49:13) MalzPL's Prayer of Mending heals you for 689 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 689
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 689
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3278
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:13) MalzPL's Prayer of Mending heals MalzSent for 692 points.
.ctor :: (04:49:13) MalzPL's Prayer of Mending heals MalzSent for 692 points.
.ctor :: RegEx Match :: (04:49:13) MalzPL's Prayer of Mending heals MalzSent for 692 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 692
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 692
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3280
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:13) MalzPL's Prayer of Mending heals MalzDruid for 432 points.
.ctor :: (04:49:13) MalzPL's Prayer of Mending heals MalzDruid for 432 points.
.ctor :: RegEx Match :: (04:49:13) MalzPL's Prayer of Mending heals MalzDruid for 432 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 432
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 432
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3282
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:13) Moss Ogre's Earthquake hurts you for 382 points of damage.
.ctor :: (04:49:13) Moss Ogre's Earthquake hurts you for 382 points of damage.
.ctor :: RegEx Match :: (04:49:13) Moss Ogre's Earthquake hurts you for 382 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 382
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 382
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3284
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:13) Moss Ogre's Earthquake hurts MalzPL for 727 points of damage.
.ctor :: (04:49:13) Moss Ogre's Earthquake hurts MalzPL for 727 points of damage.
.ctor :: RegEx Match :: (04:49:13) Moss Ogre's Earthquake hurts MalzPL for 727 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 727
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 727
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3286
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:13) Moss Ogre's Earthquake hurts MalzDruid for 728 points of damage.
.ctor :: (04:49:13) Moss Ogre's Earthquake hurts MalzDruid for 728 points of damage.
.ctor :: RegEx Match :: (04:49:13) Moss Ogre's Earthquake hurts MalzDruid for 728 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 728
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 728
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3288
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:13) MalzPL hits the Moss Ogre for 38 points of damage.
.ctor :: (04:49:13) MalzPL hits the Moss Ogre for 38 points of damage.
.ctor :: RegEx Match :: (04:49:13) MalzPL hits the Moss Ogre for 38 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 38
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 38
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3290
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:13) MalzDruid hits the Moss Ogre for 30 points of damage.
.ctor :: (04:49:13) MalzDruid hits the Moss Ogre for 30 points of damage.
.ctor :: RegEx Match :: (04:49:13) MalzDruid hits the Moss Ogre for 30 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 30
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 30
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3292
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:13) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:13) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:13) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3294
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:13) MalzPL hits the Moss Ogre for 38 points of damage.
.ctor :: (04:49:13) MalzPL hits the Moss Ogre for 38 points of damage.
.ctor :: RegEx Match :: (04:49:13) MalzPL hits the Moss Ogre for 38 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 38
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 38
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3296
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:13) MalzDruid hits the Moss Ogre for 34 points of damage.
.ctor :: (04:49:13) MalzDruid hits the Moss Ogre for 34 points of damage.
.ctor :: RegEx Match :: (04:49:13) MalzDruid hits the Moss Ogre for 34 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 34
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 34
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3298
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:13) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:13) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:13) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3300
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:13) MalzDruid's Prayer of Mending heals MalzPL for 568 points.
.ctor :: (04:49:13) MalzDruid's Prayer of Mending heals MalzPL for 568 points.
.ctor :: RegEx Match :: (04:49:13) MalzDruid's Prayer of Mending heals MalzPL for 568 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 568
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 568
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3302
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:13) MalzDruid's Prayer of Mending heals you for 514 points.
.ctor :: (04:49:13) MalzDruid's Prayer of Mending heals you for 514 points.
.ctor :: RegEx Match :: (04:49:13) MalzDruid's Prayer of Mending heals you for 514 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 514
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 514
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3304
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:13) MalzDruid's Prayer of Mending heals MalzSent for 638 points.
.ctor :: (04:49:13) MalzDruid's Prayer of Mending heals MalzSent for 638 points.
.ctor :: RegEx Match :: (04:49:13) MalzDruid's Prayer of Mending heals MalzSent for 638 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 638
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 638
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3306
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:13) MalzDruid's Prayer of Mending heals MalzDruid for 404 points.
.ctor :: (04:49:13) MalzDruid's Prayer of Mending heals MalzDruid for 404 points.
.ctor :: RegEx Match :: (04:49:13) MalzDruid's Prayer of Mending heals MalzDruid for 404 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 404
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 404
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3308
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:13) You parry the Moss Ogre's attack!
.ctor :: (04:49:13) You parry the Moss Ogre's attack!
.ctor :: RegEx Match :: (04:49:13) You parry the Moss Ogre's attack!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = You
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = parry
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 17
.ctor :: RegEx Match :: RegExDesc  = Parry :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>parr)[yies]+ (?<source>.*)'s .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3310
ParseLine :: AddCombatAction :: Target     = You
ParseLine :: AddCombatAction :: Value_Type = parry
ParseLine :: (04:49:13) MalzPL hits the Moss Ogre for 43 points of damage.
.ctor :: (04:49:13) MalzPL hits the Moss Ogre for 43 points of damage.
.ctor :: RegEx Match :: (04:49:13) MalzPL hits the Moss Ogre for 43 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 43
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 43
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3312
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:13) MalzDruid hits the Moss Ogre for 22 points of damage.
.ctor :: (04:49:13) MalzDruid hits the Moss Ogre for 22 points of damage.
.ctor :: RegEx Match :: (04:49:13) MalzDruid hits the Moss Ogre for 22 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 22
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 22
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3314
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:13) The Moss Ogre hits YOU for 101 points of damage!
.ctor :: (04:49:13) The Moss Ogre hits YOU for 101 points of damage!
.ctor :: RegEx Match :: (04:49:13) The Moss Ogre hits YOU for 101 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = YOU
.ctor :: RegEx Match :: Value      = 101
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 101
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3316
ParseLine :: AddCombatAction :: Target     = YOU
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:13) MalzPL casts Earthquake.
.ctor :: (04:49:13) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:13) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3318
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:13) MalzPL's Earthquake hurts Moss Ogre for 1415 points of damage.
.ctor :: (04:49:13) MalzPL's Earthquake hurts Moss Ogre for 1415 points of damage.
.ctor :: RegEx Match :: (04:49:13) MalzPL's Earthquake hurts Moss Ogre for 1415 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1415
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1415
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3320
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:13) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:13) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:13) Moss Ogre no longer feels as vulnerable to holy magic.
.ctor :: (04:49:13) Moss Ogre no longer feels as vulnerable to holy magic.
ParseLine :: (04:49:13) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:13) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:13) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3326
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:13) MalzSent's Righteous Word of Binding smites Moss Ogre for 852 points of damage!
.ctor :: (04:49:13) MalzSent's Righteous Word of Binding smites Moss Ogre for 852 points of damage!
.ctor :: RegEx Match :: (04:49:13) MalzSent's Righteous Word of Binding smites Moss Ogre for 852 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 852
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 852
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3328
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:13) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:13) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:13) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3330
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:13) MalzPL casts Prayer of Mending.
.ctor :: (04:49:13) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:13) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3332
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:13) MalzPL's Prayer of Mending heals MalzPL for 770 points.
.ctor :: (04:49:13) MalzPL's Prayer of Mending heals MalzPL for 770 points.
.ctor :: RegEx Match :: (04:49:13) MalzPL's Prayer of Mending heals MalzPL for 770 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 770
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 770
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3334
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:13) MalzPL's Prayer of Mending heals you for 772 points.
.ctor :: (04:49:13) MalzPL's Prayer of Mending heals you for 772 points.
.ctor :: RegEx Match :: (04:49:13) MalzPL's Prayer of Mending heals you for 772 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 772
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 772
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3336
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:13) MalzPL's Prayer of Mending heals MalzSent for 556 points.
.ctor :: (04:49:13) MalzPL's Prayer of Mending heals MalzSent for 556 points.
.ctor :: RegEx Match :: (04:49:13) MalzPL's Prayer of Mending heals MalzSent for 556 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 556
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 556
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3338
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:13) MalzPL's Prayer of Mending heals MalzDruid for 348 points.
.ctor :: (04:49:13) MalzPL's Prayer of Mending heals MalzDruid for 348 points.
.ctor :: RegEx Match :: (04:49:13) MalzPL's Prayer of Mending heals MalzDruid for 348 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 348
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 348
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3340
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:13) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:13) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:13) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3342
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:13) MalzDruid's Prayer of Mending heals MalzPL for 437 points.
.ctor :: (04:49:13) MalzDruid's Prayer of Mending heals MalzPL for 437 points.
.ctor :: RegEx Match :: (04:49:13) MalzDruid's Prayer of Mending heals MalzPL for 437 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 437
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 437
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3344
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:13) MalzDruid's Prayer of Mending heals you for 370 points.
.ctor :: (04:49:13) MalzDruid's Prayer of Mending heals you for 370 points.
.ctor :: RegEx Match :: (04:49:13) MalzDruid's Prayer of Mending heals you for 370 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 370
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 370
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3346
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:13) MalzDruid's Prayer of Mending heals MalzSent for 573 points.
.ctor :: (04:49:13) MalzDruid's Prayer of Mending heals MalzSent for 573 points.
.ctor :: RegEx Match :: (04:49:13) MalzDruid's Prayer of Mending heals MalzSent for 573 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 573
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 573
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3348
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:13) MalzDruid's Prayer of Mending heals MalzDruid for 689 points.
.ctor :: (04:49:13) MalzDruid's Prayer of Mending heals MalzDruid for 689 points.
.ctor :: RegEx Match :: (04:49:13) MalzDruid's Prayer of Mending heals MalzDruid for 689 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 689
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 689
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3350
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:13) MalzPL casts Prayer of Mending.
.ctor :: (04:49:13) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:13) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3352
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:13) MalzPL's Prayer of Mending heals MalzPL for 467 points.
.ctor :: (04:49:13) MalzPL's Prayer of Mending heals MalzPL for 467 points.
.ctor :: RegEx Match :: (04:49:13) MalzPL's Prayer of Mending heals MalzPL for 467 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 467
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 467
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3354
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:13) MalzPL's Prayer of Mending heals you for 588 points.
.ctor :: (04:49:13) MalzPL's Prayer of Mending heals you for 588 points.
.ctor :: RegEx Match :: (04:49:13) MalzPL's Prayer of Mending heals you for 588 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 588
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 588
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3356
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:13) MalzPL's Prayer of Mending heals MalzSent for 597 points.
.ctor :: (04:49:13) MalzPL's Prayer of Mending heals MalzSent for 597 points.
.ctor :: RegEx Match :: (04:49:13) MalzPL's Prayer of Mending heals MalzSent for 597 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 597
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 597
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3358
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:13) MalzPL's Prayer of Mending heals MalzDruid for 656 points.
.ctor :: (04:49:13) MalzPL's Prayer of Mending heals MalzDruid for 656 points.
.ctor :: RegEx Match :: (04:49:13) MalzPL's Prayer of Mending heals MalzDruid for 656 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 656
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 656
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3360
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:13) Moss Ogre's Earthquake hurts MalzPL for 676 points of damage.
.ctor :: (04:49:13) Moss Ogre's Earthquake hurts MalzPL for 676 points of damage.
.ctor :: RegEx Match :: (04:49:13) Moss Ogre's Earthquake hurts MalzPL for 676 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 676
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 676
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3362
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:13) Moss Ogre's Earthquake hurts you for 312 points of damage.
.ctor :: (04:49:13) Moss Ogre's Earthquake hurts you for 312 points of damage.
.ctor :: RegEx Match :: (04:49:13) Moss Ogre's Earthquake hurts you for 312 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 312
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 312
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3364
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:13) Moss Ogre's Earthquake hurts MalzSent for 463 points of damage.
.ctor :: (04:49:13) Moss Ogre's Earthquake hurts MalzSent for 463 points of damage.
.ctor :: RegEx Match :: (04:49:13) Moss Ogre's Earthquake hurts MalzSent for 463 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:13
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 463
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 463
ParseLine :: AddCombatAction :: Time       = 04:49:13
ParseLine :: AddCombatAction :: Time_Sorter= 3366
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:14) Moss Ogre's Earthquake hurts MalzDruid for 568 points of damage.
.ctor :: (04:49:14) Moss Ogre's Earthquake hurts MalzDruid for 568 points of damage.
.ctor :: RegEx Match :: (04:49:14) Moss Ogre's Earthquake hurts MalzDruid for 568 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 568
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 568
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3368
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:14) MalzPL hits the Moss Ogre for 41 points of damage.
.ctor :: (04:49:14) MalzPL hits the Moss Ogre for 41 points of damage.
.ctor :: RegEx Match :: (04:49:14) MalzPL hits the Moss Ogre for 41 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 41
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 41
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3370
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:14) MalzSent hits the Moss Ogre for 166 points of damage.
.ctor :: (04:49:14) MalzSent hits the Moss Ogre for 166 points of damage.
.ctor :: RegEx Match :: (04:49:14) MalzSent hits the Moss Ogre for 166 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 166
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 166
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3372
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:14) MalzDruid hits the Moss Ogre for 19 points of damage.
.ctor :: (04:49:14) MalzDruid hits the Moss Ogre for 19 points of damage.
.ctor :: RegEx Match :: (04:49:14) MalzDruid hits the Moss Ogre for 19 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 19
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 19
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3374
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:14) MalzSent casts Dangiriel's Might.
.ctor :: (04:49:14) MalzSent casts Dangiriel's Might.
.ctor :: RegEx Match :: (04:49:14) MalzSent casts Dangiriel's Might.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Dangiriel's Might
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Dangiriel's Might
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3376
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:14) MalzSent feels more deadly!
.ctor :: (04:49:14) MalzSent feels more deadly!
ParseLine :: (04:49:14) MalzSent feels more deadly!
.ctor :: (04:49:14) MalzSent feels more deadly!
ParseLine :: (04:49:14) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:14) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:14) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3382
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:14) MalzDruid's Prayer of Mending heals MalzPL for 561 points.
.ctor :: (04:49:14) MalzDruid's Prayer of Mending heals MalzPL for 561 points.
.ctor :: RegEx Match :: (04:49:14) MalzDruid's Prayer of Mending heals MalzPL for 561 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 561
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 561
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3384
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:14) MalzDruid's Prayer of Mending heals you for 442 points.
.ctor :: (04:49:14) MalzDruid's Prayer of Mending heals you for 442 points.
.ctor :: RegEx Match :: (04:49:14) MalzDruid's Prayer of Mending heals you for 442 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 442
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 442
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3386
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:14) MalzDruid's Prayer of Mending heals MalzSent for 537 points.
.ctor :: (04:49:14) MalzDruid's Prayer of Mending heals MalzSent for 537 points.
.ctor :: RegEx Match :: (04:49:14) MalzDruid's Prayer of Mending heals MalzSent for 537 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 537
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 537
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3388
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:14) MalzDruid's Prayer of Mending heals MalzDruid for 461 points.
.ctor :: (04:49:14) MalzDruid's Prayer of Mending heals MalzDruid for 461 points.
.ctor :: RegEx Match :: (04:49:14) MalzDruid's Prayer of Mending heals MalzDruid for 461 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 461
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 461
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3390
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:14) Moss Ogre casts Flesh of Lead.
.ctor :: (04:49:14) Moss Ogre casts Flesh of Lead.
.ctor :: RegEx Match :: (04:49:14) Moss Ogre casts Flesh of Lead.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = Flesh of Lead
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = Flesh of Lead
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3392
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:14) Moss Ogre feels warded against magic.
.ctor :: (04:49:14) Moss Ogre feels warded against magic.
ParseLine :: (04:49:14) MalzSent hits the Moss Ogre for 168 points of damage.
.ctor :: (04:49:14) MalzSent hits the Moss Ogre for 168 points of damage.
.ctor :: RegEx Match :: (04:49:14) MalzSent hits the Moss Ogre for 168 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 168
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 168
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3396
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:14) MalzPL hits the Moss Ogre for 27 points of damage.
.ctor :: (04:49:14) MalzPL hits the Moss Ogre for 27 points of damage.
.ctor :: RegEx Match :: (04:49:14) MalzPL hits the Moss Ogre for 27 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 27
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 27
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3398
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:14) MalzDruid hits the Moss Ogre for 16 points of damage.
.ctor :: (04:49:14) MalzDruid hits the Moss Ogre for 16 points of damage.
.ctor :: RegEx Match :: (04:49:14) MalzDruid hits the Moss Ogre for 16 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 16
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 16
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3400
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:14) MalzSent hits the Moss Ogre for 127 points of damage.
.ctor :: (04:49:14) MalzSent hits the Moss Ogre for 127 points of damage.
.ctor :: RegEx Match :: (04:49:14) MalzSent hits the Moss Ogre for 127 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 127
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 127
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3402
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:14) MalzPL casts Earthquake.
.ctor :: (04:49:14) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:14) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3404
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:14) MalzPL's Earthquake hurts Moss Ogre for 1535 points of damage.
.ctor :: (04:49:14) MalzPL's Earthquake hurts Moss Ogre for 1535 points of damage.
.ctor :: RegEx Match :: (04:49:14) MalzPL's Earthquake hurts Moss Ogre for 1535 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1535
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1535
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3406
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:14) MalzPL casts Earthquake.
.ctor :: (04:49:14) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:14) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3408
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:14) MalzPL's Earthquake hurts Vorok Mud-Chief for 1491 points of damage.
.ctor :: (04:49:14) MalzPL's Earthquake hurts Vorok Mud-Chief for 1491 points of damage.
.ctor :: RegEx Match :: (04:49:14) MalzPL's Earthquake hurts Vorok Mud-Chief for 1491 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 1491
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1491
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3410
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:14) MalzPL hits the Moss Ogre for 25 points of damage.
.ctor :: (04:49:14) MalzPL hits the Moss Ogre for 25 points of damage.
.ctor :: RegEx Match :: (04:49:14) MalzPL hits the Moss Ogre for 25 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 25
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 25
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3412
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:14) MalzDruid hits the Moss Ogre for 42 points of damage.
.ctor :: (04:49:14) MalzDruid hits the Moss Ogre for 42 points of damage.
.ctor :: RegEx Match :: (04:49:14) MalzDruid hits the Moss Ogre for 42 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 42
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 42
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3414
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:14) The Moss Ogre misses MalzDruid.
.ctor :: (04:49:14) The Moss Ogre misses MalzDruid.
.ctor :: RegEx Match :: (04:49:14) The Moss Ogre misses MalzDruid.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3416
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:14) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:14) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:14) Moss Ogre's warding fades.
.ctor :: (04:49:14) Moss Ogre's warding fades.
ParseLine :: (04:49:14) MalzSent hits the Moss Ogre for 162 points of damage.
.ctor :: (04:49:14) MalzSent hits the Moss Ogre for 162 points of damage.
.ctor :: RegEx Match :: (04:49:14) MalzSent hits the Moss Ogre for 162 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 162
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 162
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3422
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:14) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:14) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:14) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3424
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:14) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:14) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:14) MalzDruid casts Earthquake.
.ctor :: (04:49:14) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:14) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3428
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:14) MalzDruid's Earthquake hurts Vorok Mud-Chief for 967 points of damage.
.ctor :: (04:49:14) MalzDruid's Earthquake hurts Vorok Mud-Chief for 967 points of damage.
.ctor :: RegEx Match :: (04:49:14) MalzDruid's Earthquake hurts Vorok Mud-Chief for 967 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 967
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 967
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3430
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:14) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: (04:49:14) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: RegEx Match :: (04:49:14) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = Vorok Mud-Chief
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3432
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:14) MalzDruid casts Earthquake.
.ctor :: (04:49:14) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:14) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3434
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:14) MalzPL casts Prayer of Mending.
.ctor :: (04:49:14) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:14) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3436
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:14) MalzPL's Prayer of Mending heals MalzPL for 482 points.
.ctor :: (04:49:14) MalzPL's Prayer of Mending heals MalzPL for 482 points.
.ctor :: RegEx Match :: (04:49:14) MalzPL's Prayer of Mending heals MalzPL for 482 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 482
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 482
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3438
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:14) MalzPL's Prayer of Mending heals you for 765 points.
.ctor :: (04:49:14) MalzPL's Prayer of Mending heals you for 765 points.
.ctor :: RegEx Match :: (04:49:14) MalzPL's Prayer of Mending heals you for 765 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 765
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 765
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3440
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:14) MalzPL's Prayer of Mending heals MalzSent for 546 points.
.ctor :: (04:49:14) MalzPL's Prayer of Mending heals MalzSent for 546 points.
.ctor :: RegEx Match :: (04:49:14) MalzPL's Prayer of Mending heals MalzSent for 546 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 546
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 546
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3442
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:14) MalzPL's Prayer of Mending heals MalzDruid for 802 points.
.ctor :: (04:49:14) MalzPL's Prayer of Mending heals MalzDruid for 802 points.
.ctor :: RegEx Match :: (04:49:14) MalzPL's Prayer of Mending heals MalzDruid for 802 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 802
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 802
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3444
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:14) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:14) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:14) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3446
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:14) MalzDruid's Prayer of Mending heals MalzPL for 682 points.
.ctor :: (04:49:14) MalzDruid's Prayer of Mending heals MalzPL for 682 points.
.ctor :: RegEx Match :: (04:49:14) MalzDruid's Prayer of Mending heals MalzPL for 682 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 682
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 682
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3448
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:14) MalzDruid's Prayer of Mending heals you for 545 points.
.ctor :: (04:49:14) MalzDruid's Prayer of Mending heals you for 545 points.
.ctor :: RegEx Match :: (04:49:14) MalzDruid's Prayer of Mending heals you for 545 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 545
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 545
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3450
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:14) MalzDruid's Prayer of Mending heals MalzSent for 359 points.
.ctor :: (04:49:14) MalzDruid's Prayer of Mending heals MalzSent for 359 points.
.ctor :: RegEx Match :: (04:49:14) MalzDruid's Prayer of Mending heals MalzSent for 359 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 359
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 359
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3452
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:14) MalzDruid's Prayer of Mending heals MalzDruid for 456 points.
.ctor :: (04:49:14) MalzDruid's Prayer of Mending heals MalzDruid for 456 points.
.ctor :: RegEx Match :: (04:49:14) MalzDruid's Prayer of Mending heals MalzDruid for 456 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 456
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 456
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3454
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:14) [Combat] Info: The Mud Ogre attacks HardC
.ctor :: (04:49:14) [Combat] Info: The Mud Ogre attacks HardC
.ctor :: RegEx Match :: (04:49:14) [Combat] Info: The Mud Ogre attacks HardC
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = HardC
.ctor :: RegEx Match :: Ability    = Challenge
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = attack
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 26
.ctor :: RegEx Match :: RegExDesc  = Taunt :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<target>.*) (?<type>[atck]*)s? (?<source>.*)
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = HardC
ParseLine :: AddCombatAction :: Ability    = Challenge
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3456
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = attack
ParseLine :: (04:49:14) MalzPL casts Prayer of Mending.
.ctor :: (04:49:14) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:14) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3458
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:14) MalzPL's Prayer of Mending heals MalzPL for 614 points.
.ctor :: (04:49:14) MalzPL's Prayer of Mending heals MalzPL for 614 points.
.ctor :: RegEx Match :: (04:49:14) MalzPL's Prayer of Mending heals MalzPL for 614 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 614
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 614
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3460
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:14) MalzPL's Prayer of Mending heals you for 698 points.
.ctor :: (04:49:14) MalzPL's Prayer of Mending heals you for 698 points.
.ctor :: RegEx Match :: (04:49:14) MalzPL's Prayer of Mending heals you for 698 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 698
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 698
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3462
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:14) MalzPL's Prayer of Mending heals MalzSent for 405 points.
.ctor :: (04:49:14) MalzPL's Prayer of Mending heals MalzSent for 405 points.
.ctor :: RegEx Match :: (04:49:14) MalzPL's Prayer of Mending heals MalzSent for 405 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 405
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 405
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3464
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:14) MalzPL's Prayer of Mending heals MalzDruid for 631 points.
.ctor :: (04:49:14) MalzPL's Prayer of Mending heals MalzDruid for 631 points.
.ctor :: RegEx Match :: (04:49:14) MalzPL's Prayer of Mending heals MalzDruid for 631 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 631
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 631
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3466
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:14) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:14) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:14) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3468
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:14) MalzSent drains 107 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: (04:49:14) MalzSent drains 107 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:14) MalzSent drains 107 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 107
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 107
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3470
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:14) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:14) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:14) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3472
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:14) MalzSent drains 153 points of mana from Mud Ogre with Exalted Word of Binding.
.ctor :: (04:49:14) MalzSent drains 153 points of mana from Mud Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:14) MalzSent drains 153 points of mana from Mud Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 153
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 153
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3474
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:14) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:14) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:14) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3476
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:14) Mud Ogre begins to stumble.
.ctor :: (04:49:14) Mud Ogre begins to stumble.
ParseLine :: (04:49:14) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:14) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:14) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3480
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:14) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:14) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:14) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3482
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:14) MalzDruid's Prayer of Mending heals MalzPL for 790 points.
.ctor :: (04:49:14) MalzDruid's Prayer of Mending heals MalzPL for 790 points.
.ctor :: RegEx Match :: (04:49:14) MalzDruid's Prayer of Mending heals MalzPL for 790 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 790
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 790
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3484
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:14) MalzDruid's Prayer of Mending heals you for 538 points.
.ctor :: (04:49:14) MalzDruid's Prayer of Mending heals you for 538 points.
.ctor :: RegEx Match :: (04:49:14) MalzDruid's Prayer of Mending heals you for 538 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 538
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 538
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3486
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:14) MalzDruid's Prayer of Mending heals MalzSent for 682 points.
.ctor :: (04:49:14) MalzDruid's Prayer of Mending heals MalzSent for 682 points.
.ctor :: RegEx Match :: (04:49:14) MalzDruid's Prayer of Mending heals MalzSent for 682 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 682
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 682
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3488
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:14) MalzDruid's Prayer of Mending heals MalzDruid for 487 points.
.ctor :: (04:49:14) MalzDruid's Prayer of Mending heals MalzDruid for 487 points.
.ctor :: RegEx Match :: (04:49:14) MalzDruid's Prayer of Mending heals MalzDruid for 487 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 487
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 487
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3490
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:14) You parry the Mud Ogre's attack!
.ctor :: (04:49:14) You parry the Mud Ogre's attack!
.ctor :: RegEx Match :: (04:49:14) You parry the Mud Ogre's attack!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = You
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = parry
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 17
.ctor :: RegEx Match :: RegExDesc  = Parry :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>parr)[yies]+ (?<source>.*)'s .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3492
ParseLine :: AddCombatAction :: Target     = You
ParseLine :: AddCombatAction :: Value_Type = parry
ParseLine :: (04:49:14) MalzPL casts Earthquake.
.ctor :: (04:49:14) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:14) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:14
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:14
ParseLine :: AddCombatAction :: Time_Sorter= 3494
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:15) MalzPL's Earthquake hurts Mud Ogre for 1261 points of damage.
.ctor :: (04:49:15) MalzPL's Earthquake hurts Mud Ogre for 1261 points of damage.
.ctor :: RegEx Match :: (04:49:15) MalzPL's Earthquake hurts Mud Ogre for 1261 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1261
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1261
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3496
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:15) MalzPL casts Earthquake.
.ctor :: (04:49:15) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:15) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3498
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:15) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:15) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:15) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3500
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:15) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:15) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:15) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3502
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:15) The Mud Ogre hits YOU for 124 points of damage!
.ctor :: (04:49:15) The Mud Ogre hits YOU for 124 points of damage!
.ctor :: RegEx Match :: (04:49:15) The Mud Ogre hits YOU for 124 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = YOU
.ctor :: RegEx Match :: Value      = 124
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 124
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3504
ParseLine :: AddCombatAction :: Target     = YOU
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:15) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:15) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:15) Mud Ogre no longer feels as vulnerable to holy magic.
.ctor :: (04:49:15) Mud Ogre no longer feels as vulnerable to holy magic.
ParseLine :: (04:49:15) Mud Ogre stops stumbling.
.ctor :: (04:49:15) Mud Ogre stops stumbling.
ParseLine :: (04:49:15) MalzDruid casts Earthquake.
.ctor :: (04:49:15) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:15) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3512
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:15) MalzDruid's Earthquake hurts Mud Ogre for 1132 points of damage.
.ctor :: (04:49:15) MalzDruid's Earthquake hurts Mud Ogre for 1132 points of damage.
.ctor :: RegEx Match :: (04:49:15) MalzDruid's Earthquake hurts Mud Ogre for 1132 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1132
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1132
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3514
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:15) [Combat] Info: The Mud Ogre has died!
.ctor :: (04:49:15) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: (04:49:15) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3516
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:15) MalzDruid casts Earthquake.
.ctor :: (04:49:15) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:15) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3518
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:15) MalzPL casts Prayer of Mending.
.ctor :: (04:49:15) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:15) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3520
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:15) MalzPL's Prayer of Mending heals MalzPL for 580 points.
.ctor :: (04:49:15) MalzPL's Prayer of Mending heals MalzPL for 580 points.
.ctor :: RegEx Match :: (04:49:15) MalzPL's Prayer of Mending heals MalzPL for 580 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 580
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 580
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3522
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:15) MalzPL's Prayer of Mending heals you for 493 points.
.ctor :: (04:49:15) MalzPL's Prayer of Mending heals you for 493 points.
.ctor :: RegEx Match :: (04:49:15) MalzPL's Prayer of Mending heals you for 493 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 493
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 493
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3524
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:15) MalzPL's Prayer of Mending heals MalzSent for 708 points.
.ctor :: (04:49:15) MalzPL's Prayer of Mending heals MalzSent for 708 points.
.ctor :: RegEx Match :: (04:49:15) MalzPL's Prayer of Mending heals MalzSent for 708 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 708
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 708
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3526
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:15) MalzPL's Prayer of Mending heals MalzDruid for 515 points.
.ctor :: (04:49:15) MalzPL's Prayer of Mending heals MalzDruid for 515 points.
.ctor :: RegEx Match :: (04:49:15) MalzPL's Prayer of Mending heals MalzDruid for 515 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 515
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 515
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3528
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:15) [Combat] Info: The Tavok Chief-brother attacks HardC
.ctor :: (04:49:15) [Combat] Info: The Tavok Chief-brother attacks HardC
.ctor :: RegEx Match :: (04:49:15) [Combat] Info: The Tavok Chief-brother attacks HardC
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = HardC
.ctor :: RegEx Match :: Ability    = Challenge
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = attack
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 26
.ctor :: RegEx Match :: RegExDesc  = Taunt :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<target>.*) (?<type>[atck]*)s? (?<source>.*)
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = HardC
ParseLine :: AddCombatAction :: Ability    = Challenge
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3530
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = attack
ParseLine :: (04:49:15) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:15) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:15) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3532
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:15) MalzDruid's Prayer of Mending heals MalzPL for 657 points.
.ctor :: (04:49:15) MalzDruid's Prayer of Mending heals MalzPL for 657 points.
.ctor :: RegEx Match :: (04:49:15) MalzDruid's Prayer of Mending heals MalzPL for 657 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 657
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 657
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3534
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:15) MalzDruid's Prayer of Mending heals you for 639 points.
.ctor :: (04:49:15) MalzDruid's Prayer of Mending heals you for 639 points.
.ctor :: RegEx Match :: (04:49:15) MalzDruid's Prayer of Mending heals you for 639 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 639
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 639
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3536
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:15) MalzDruid's Prayer of Mending heals MalzSent for 714 points.
.ctor :: (04:49:15) MalzDruid's Prayer of Mending heals MalzSent for 714 points.
.ctor :: RegEx Match :: (04:49:15) MalzDruid's Prayer of Mending heals MalzSent for 714 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 714
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 714
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3538
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:15) MalzDruid's Prayer of Mending heals MalzDruid for 461 points.
.ctor :: (04:49:15) MalzDruid's Prayer of Mending heals MalzDruid for 461 points.
.ctor :: RegEx Match :: (04:49:15) MalzDruid's Prayer of Mending heals MalzDruid for 461 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 461
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 461
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3540
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:15) MalzPL casts Earthquake.
.ctor :: (04:49:15) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:15) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3542
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:15) MalzPL's Earthquake hurts Tavok Chief-brother for 1544 points of damage.
.ctor :: (04:49:15) MalzPL's Earthquake hurts Tavok Chief-brother for 1544 points of damage.
.ctor :: RegEx Match :: (04:49:15) MalzPL's Earthquake hurts Tavok Chief-brother for 1544 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 1544
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1544
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3544
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:15) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:15) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:15) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:15) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:15) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3548
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:15) MalzSent's Righteous Word of Binding smites Tavok Chief-brother for 659 points of damage!
.ctor :: (04:49:15) MalzSent's Righteous Word of Binding smites Tavok Chief-brother for 659 points of damage!
.ctor :: RegEx Match :: (04:49:15) MalzSent's Righteous Word of Binding smites Tavok Chief-brother for 659 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 659
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 659
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3550
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:15) [Combat] Info: The Tavok Chief-brother has died!
.ctor :: (04:49:15) [Combat] Info: The Tavok Chief-brother has died!
.ctor :: RegEx Match :: (04:49:15) [Combat] Info: The Tavok Chief-brother has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = Tavok Chief-brother
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3552
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:15) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:15) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:15) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3554
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:15) You parry the Tavok Chief-brother's attack!
.ctor :: (04:49:15) You parry the Tavok Chief-brother's attack!
.ctor :: RegEx Match :: (04:49:15) You parry the Tavok Chief-brother's attack!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = Tavok Chief-brother
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = You
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = parry
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 17
.ctor :: RegEx Match :: RegExDesc  = Parry :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>parr)[yies]+ (?<source>.*)'s .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3556
ParseLine :: AddCombatAction :: Target     = You
ParseLine :: AddCombatAction :: Value_Type = parry
ParseLine :: (04:49:15) MalzPL casts Prayer of Mending.
.ctor :: (04:49:15) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:15) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3558
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:15) MalzPL's Prayer of Mending heals MalzPL for 782 points.
.ctor :: (04:49:15) MalzPL's Prayer of Mending heals MalzPL for 782 points.
.ctor :: RegEx Match :: (04:49:15) MalzPL's Prayer of Mending heals MalzPL for 782 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 782
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 782
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3560
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:15) MalzPL's Prayer of Mending heals you for 778 points.
.ctor :: (04:49:15) MalzPL's Prayer of Mending heals you for 778 points.
.ctor :: RegEx Match :: (04:49:15) MalzPL's Prayer of Mending heals you for 778 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 778
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 778
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3562
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:15) MalzPL's Prayer of Mending heals MalzSent for 730 points.
.ctor :: (04:49:15) MalzPL's Prayer of Mending heals MalzSent for 730 points.
.ctor :: RegEx Match :: (04:49:15) MalzPL's Prayer of Mending heals MalzSent for 730 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 730
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 730
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3564
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:15) MalzPL's Prayer of Mending heals MalzDruid for 409 points.
.ctor :: (04:49:15) MalzPL's Prayer of Mending heals MalzDruid for 409 points.
.ctor :: RegEx Match :: (04:49:15) MalzPL's Prayer of Mending heals MalzDruid for 409 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 409
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 409
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3566
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:15) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:15) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:15) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3568
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:15) MalzDruid's Prayer of Mending heals MalzPL for 753 points.
.ctor :: (04:49:15) MalzDruid's Prayer of Mending heals MalzPL for 753 points.
.ctor :: RegEx Match :: (04:49:15) MalzDruid's Prayer of Mending heals MalzPL for 753 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 753
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 753
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3570
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:15) MalzDruid's Prayer of Mending heals you for 620 points.
.ctor :: (04:49:15) MalzDruid's Prayer of Mending heals you for 620 points.
.ctor :: RegEx Match :: (04:49:15) MalzDruid's Prayer of Mending heals you for 620 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 620
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 620
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3572
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:15) MalzDruid's Prayer of Mending heals MalzSent for 532 points.
.ctor :: (04:49:15) MalzDruid's Prayer of Mending heals MalzSent for 532 points.
.ctor :: RegEx Match :: (04:49:15) MalzDruid's Prayer of Mending heals MalzSent for 532 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 532
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 532
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3574
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:15) MalzDruid's Prayer of Mending heals MalzDruid for 752 points.
.ctor :: (04:49:15) MalzDruid's Prayer of Mending heals MalzDruid for 752 points.
.ctor :: RegEx Match :: (04:49:15) MalzDruid's Prayer of Mending heals MalzDruid for 752 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 752
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 752
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3576
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:15) MalzDruid casts Earthquake.
.ctor :: (04:49:15) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:15) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3578
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:15) MalzDruid casts Earthquake.
.ctor :: (04:49:15) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:15) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3580
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:15) [Powers] Error: You are in the wrong mode.
.ctor :: (04:49:15) [Powers] Error: You are in the wrong mode.
ParseLine :: (04:49:15) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: (04:49:15) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: RegEx Match :: (04:49:15) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = HardC
.ctor :: RegEx Match :: Ability    = Challenge
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = attack
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 26
.ctor :: RegEx Match :: RegExDesc  = Taunt :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<target>.*) (?<type>[atck]*)s? (?<source>.*)
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = HardC
ParseLine :: AddCombatAction :: Ability    = Challenge
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3584
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = attack
ParseLine :: (04:49:15) The Mud Ogre misses MalzDruid.
.ctor :: (04:49:15) The Mud Ogre misses MalzDruid.
.ctor :: RegEx Match :: (04:49:15) The Mud Ogre misses MalzDruid.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3586
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:15) MalzDruid hits the Mud Ogre for 36 points of damage.
.ctor :: (04:49:15) MalzDruid hits the Mud Ogre for 36 points of damage.
.ctor :: RegEx Match :: (04:49:15) MalzDruid hits the Mud Ogre for 36 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 36
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 36
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3588
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:15) MalzDruid casts Call Lightning.
.ctor :: (04:49:15) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:15) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3590
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:15) MalzDruid casts Call Lightning.
.ctor :: (04:49:15) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:15) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3592
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:15) Mud Ogre is stunned!
.ctor :: (04:49:15) Mud Ogre is stunned!
ParseLine :: (04:49:15) MalzDruid casts Call Lightning.
.ctor :: (04:49:15) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:15) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3596
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:15) MalzDruid casts Call Lightning.
.ctor :: (04:49:15) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:15) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3598
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:15) MalzDruid hits the Mud Ogre for 26 points of damage.
.ctor :: (04:49:15) MalzDruid hits the Mud Ogre for 26 points of damage.
.ctor :: RegEx Match :: (04:49:15) MalzDruid hits the Mud Ogre for 26 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 26
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 26
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3600
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:15) Mud Ogre is no longer stunned.
.ctor :: (04:49:15) Mud Ogre is no longer stunned.
ParseLine :: (04:49:15) MalzPL casts Prayer of Mending.
.ctor :: (04:49:15) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:15) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3604
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:15) MalzPL's Prayer of Mending heals MalzPL for 669 points.
.ctor :: (04:49:15) MalzPL's Prayer of Mending heals MalzPL for 669 points.
.ctor :: RegEx Match :: (04:49:15) MalzPL's Prayer of Mending heals MalzPL for 669 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 669
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 669
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3606
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:15) MalzPL's Prayer of Mending heals you for 643 points.
.ctor :: (04:49:15) MalzPL's Prayer of Mending heals you for 643 points.
.ctor :: RegEx Match :: (04:49:15) MalzPL's Prayer of Mending heals you for 643 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 643
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 643
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3608
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:15) MalzPL's Prayer of Mending heals MalzSent for 452 points.
.ctor :: (04:49:15) MalzPL's Prayer of Mending heals MalzSent for 452 points.
.ctor :: RegEx Match :: (04:49:15) MalzPL's Prayer of Mending heals MalzSent for 452 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 452
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 452
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3610
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:15) MalzPL's Prayer of Mending heals MalzDruid for 614 points.
.ctor :: (04:49:15) MalzPL's Prayer of Mending heals MalzDruid for 614 points.
.ctor :: RegEx Match :: (04:49:15) MalzPL's Prayer of Mending heals MalzDruid for 614 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 614
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 614
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3612
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:15) MalzDruid's Call Lightning shocks Mud Ogre for 877 points of damage!
.ctor :: (04:49:15) MalzDruid's Call Lightning shocks Mud Ogre for 877 points of damage!
.ctor :: RegEx Match :: (04:49:15) MalzDruid's Call Lightning shocks Mud Ogre for 877 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 877
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 877
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3614
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:15) MalzDruid hits the Mud Ogre for 17 points of damage.
.ctor :: (04:49:15) MalzDruid hits the Mud Ogre for 17 points of damage.
.ctor :: RegEx Match :: (04:49:15) MalzDruid hits the Mud Ogre for 17 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 17
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 17
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3616
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:15) The Mud Ogre misses MalzPL.
.ctor :: (04:49:15) The Mud Ogre misses MalzPL.
.ctor :: RegEx Match :: (04:49:15) The Mud Ogre misses MalzPL.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3618
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:15) MalzPL hits the Mud Ogre for 22 points of damage.
.ctor :: (04:49:15) MalzPL hits the Mud Ogre for 22 points of damage.
.ctor :: RegEx Match :: (04:49:15) MalzPL hits the Mud Ogre for 22 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 22
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 22
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3620
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:15) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:15) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:15) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3622
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:15) MalzDruid's Prayer of Mending heals MalzPL for 694 points.
.ctor :: (04:49:15) MalzDruid's Prayer of Mending heals MalzPL for 694 points.
.ctor :: RegEx Match :: (04:49:15) MalzDruid's Prayer of Mending heals MalzPL for 694 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:15
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 694
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 694
ParseLine :: AddCombatAction :: Time       = 04:49:15
ParseLine :: AddCombatAction :: Time_Sorter= 3624
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:16) MalzDruid's Prayer of Mending heals you for 589 points.
.ctor :: (04:49:16) MalzDruid's Prayer of Mending heals you for 589 points.
.ctor :: RegEx Match :: (04:49:16) MalzDruid's Prayer of Mending heals you for 589 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 589
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 589
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3626
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:16) MalzDruid's Prayer of Mending heals MalzSent for 506 points.
.ctor :: (04:49:16) MalzDruid's Prayer of Mending heals MalzSent for 506 points.
.ctor :: RegEx Match :: (04:49:16) MalzDruid's Prayer of Mending heals MalzSent for 506 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 506
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 506
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3628
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:16) MalzDruid's Prayer of Mending heals MalzDruid for 797 points.
.ctor :: (04:49:16) MalzDruid's Prayer of Mending heals MalzDruid for 797 points.
.ctor :: RegEx Match :: (04:49:16) MalzDruid's Prayer of Mending heals MalzDruid for 797 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 797
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 797
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3630
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:16) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:16) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:16) Mud Ogre's stun immunity has worn off.
.ctor :: (04:49:16) Mud Ogre's stun immunity has worn off.
ParseLine :: (04:49:16) MalzDruid hits the Mud Ogre for 37 points of damage.
.ctor :: (04:49:16) MalzDruid hits the Mud Ogre for 37 points of damage.
.ctor :: RegEx Match :: (04:49:16) MalzDruid hits the Mud Ogre for 37 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 37
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 37
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3636
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:16) [Combat] Info: The Mud Ogre has died!
.ctor :: (04:49:16) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: (04:49:16) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3638
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:16) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:16) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:16) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3640
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:16) MalzSent's Righteous Word of Binding smites Moss Ogre for 757 points of damage!
.ctor :: (04:49:16) MalzSent's Righteous Word of Binding smites Moss Ogre for 757 points of damage!
.ctor :: RegEx Match :: (04:49:16) MalzSent's Righteous Word of Binding smites Moss Ogre for 757 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 757
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 757
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3642
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:16) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:16) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:16) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3644
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:16) MalzPL casts Earthquake.
.ctor :: (04:49:16) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:16) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3646
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:16) MalzPL's Earthquake hurts Moss Ogre for 993 points of damage.
.ctor :: (04:49:16) MalzPL's Earthquake hurts Moss Ogre for 993 points of damage.
.ctor :: RegEx Match :: (04:49:16) MalzPL's Earthquake hurts Moss Ogre for 993 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 993
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 993
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3648
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:16) MalzPL casts Earthquake.
.ctor :: (04:49:16) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:16) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3650
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:16) MalzPL's Earthquake hurts Moss Ogre for 1198 points of damage.
.ctor :: (04:49:16) MalzPL's Earthquake hurts Moss Ogre for 1198 points of damage.
.ctor :: RegEx Match :: (04:49:16) MalzPL's Earthquake hurts Moss Ogre for 1198 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1198
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1198
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3652
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:16) You parry the Moss Ogre's attack!
.ctor :: (04:49:16) You parry the Moss Ogre's attack!
.ctor :: RegEx Match :: (04:49:16) You parry the Moss Ogre's attack!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = You
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = parry
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 17
.ctor :: RegEx Match :: RegExDesc  = Parry :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>parr)[yies]+ (?<source>.*)'s .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3654
ParseLine :: AddCombatAction :: Target     = You
ParseLine :: AddCombatAction :: Value_Type = parry
ParseLine :: (04:49:16) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:16) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:16) MalzDruid casts Earthquake.
.ctor :: (04:49:16) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:16) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3658
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:16) MalzDruid's Earthquake hurts Moss Ogre for 1336 points of damage.
.ctor :: (04:49:16) MalzDruid's Earthquake hurts Moss Ogre for 1336 points of damage.
.ctor :: RegEx Match :: (04:49:16) MalzDruid's Earthquake hurts Moss Ogre for 1336 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1336
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1336
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3660
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:16) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:16) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:16) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3662
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:16) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:16) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:16) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3664
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:16) MalzSent drains 105 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: (04:49:16) MalzSent drains 105 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:16) MalzSent drains 105 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 105
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 105
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3666
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:16) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:16) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:16) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3668
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:16) MalzSent drains 150 points of mana from Mud Ogre with Exalted Word of Binding.
.ctor :: (04:49:16) MalzSent drains 150 points of mana from Mud Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:16) MalzSent drains 150 points of mana from Mud Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 150
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 150
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3670
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:16) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:16) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:16) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3672
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:16) Mud Ogre begins to stumble.
.ctor :: (04:49:16) Mud Ogre begins to stumble.
ParseLine :: (04:49:16) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:16) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:16) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3676
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:16) MalzSent drains 106 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: (04:49:16) MalzSent drains 106 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:16) MalzSent drains 106 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 106
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 106
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3678
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:16) MalzSent drains 152 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: (04:49:16) MalzSent drains 152 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:16) MalzSent drains 152 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 152
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 152
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3680
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:16) Moss Ogre begins to stumble.
.ctor :: (04:49:16) Moss Ogre begins to stumble.
ParseLine :: (04:49:16) MalzPL casts Call Lightning.
.ctor :: (04:49:16) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:16) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3684
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:16) MalzPL casts Call Lightning.
.ctor :: (04:49:16) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:16) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3686
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:16) Mud Ogre is stunned!
.ctor :: (04:49:16) Mud Ogre is stunned!
ParseLine :: (04:49:16) MalzPL casts Call Lightning.
.ctor :: (04:49:16) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:16) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3690
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:16) MalzPL casts Call Lightning.
.ctor :: (04:49:16) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:16) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3692
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:16) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:16) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:16) Moss Ogre stops stumbling.
.ctor :: (04:49:16) Moss Ogre stops stumbling.
ParseLine :: (04:49:16) MalzPL casts Call Lightning.
.ctor :: (04:49:16) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:16) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3698
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:16) MalzPL hits the Mud Ogre for 24 points of damage.
.ctor :: (04:49:16) MalzPL hits the Mud Ogre for 24 points of damage.
.ctor :: RegEx Match :: (04:49:16) MalzPL hits the Mud Ogre for 24 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 24
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 24
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3700
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:16) MalzPL's Call Lightning shocks Mud Ogre for 979 points of damage!
.ctor :: (04:49:16) MalzPL's Call Lightning shocks Mud Ogre for 979 points of damage!
.ctor :: RegEx Match :: (04:49:16) MalzPL's Call Lightning shocks Mud Ogre for 979 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 979
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 979
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3702
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:16) MalzPL's Call Lightning shocks Moss Ogre for 925 points of damage!
.ctor :: (04:49:16) MalzPL's Call Lightning shocks Moss Ogre for 925 points of damage!
.ctor :: RegEx Match :: (04:49:16) MalzPL's Call Lightning shocks Moss Ogre for 925 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 925
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 925
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3704
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:16) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:16) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:16) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3706
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:16) Mud Ogre is no longer stunned.
.ctor :: (04:49:16) Mud Ogre is no longer stunned.
ParseLine :: (04:49:16) MalzPL hits the Mud Ogre for 40 points of damage.
.ctor :: (04:49:16) MalzPL hits the Mud Ogre for 40 points of damage.
.ctor :: RegEx Match :: (04:49:16) MalzPL hits the Mud Ogre for 40 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 40
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 40
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3710
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:16) MalzDruid casts Call Lightning.
.ctor :: (04:49:16) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:16) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3712
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:16) MalzDruid casts Call Lightning.
.ctor :: (04:49:16) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:16) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3714
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:16) MalzDruid casts Call Lightning.
.ctor :: (04:49:16) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:16) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3716
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:16) MalzDruid casts Call Lightning.
.ctor :: (04:49:16) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:16) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3718
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:16) MalzDruid casts Call Lightning.
.ctor :: (04:49:16) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:16) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3720
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:16) MalzDruid casts Call Lightning.
.ctor :: (04:49:16) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:16) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3722
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:16) Moss Ogre is stunned!
.ctor :: (04:49:16) Moss Ogre is stunned!
ParseLine :: (04:49:16) The Mud Ogre misses MalzDruid.
.ctor :: (04:49:16) The Mud Ogre misses MalzDruid.
.ctor :: RegEx Match :: (04:49:16) The Mud Ogre misses MalzDruid.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3726
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:16) MalzDruid's Call Lightning shocks Mud Ogre for 627 points of damage!
.ctor :: (04:49:16) MalzDruid's Call Lightning shocks Mud Ogre for 627 points of damage!
.ctor :: RegEx Match :: (04:49:16) MalzDruid's Call Lightning shocks Mud Ogre for 627 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 627
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 627
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3728
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:16) MalzDruid hits the Mud Ogre for 31 points of damage.
.ctor :: (04:49:16) MalzDruid hits the Mud Ogre for 31 points of damage.
.ctor :: RegEx Match :: (04:49:16) MalzDruid hits the Mud Ogre for 31 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 31
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 31
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3730
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:16) MalzPL hits the Mud Ogre for 33 points of damage.
.ctor :: (04:49:16) MalzPL hits the Mud Ogre for 33 points of damage.
.ctor :: RegEx Match :: (04:49:16) MalzPL hits the Mud Ogre for 33 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 33
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 33
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3732
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:16) Moss Ogre is no longer stunned.
.ctor :: (04:49:16) Moss Ogre is no longer stunned.
ParseLine :: (04:49:16) MalzPL casts Prayer of Mending.
.ctor :: (04:49:16) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:16) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3736
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:16) MalzPL's Prayer of Mending heals MalzPL for 697 points.
.ctor :: (04:49:16) MalzPL's Prayer of Mending heals MalzPL for 697 points.
.ctor :: RegEx Match :: (04:49:16) MalzPL's Prayer of Mending heals MalzPL for 697 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 697
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 697
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3738
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:16) MalzPL's Prayer of Mending heals you for 608 points.
.ctor :: (04:49:16) MalzPL's Prayer of Mending heals you for 608 points.
.ctor :: RegEx Match :: (04:49:16) MalzPL's Prayer of Mending heals you for 608 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 608
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 608
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3740
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:16) MalzPL's Prayer of Mending heals MalzSent for 600 points.
.ctor :: (04:49:16) MalzPL's Prayer of Mending heals MalzSent for 600 points.
.ctor :: RegEx Match :: (04:49:16) MalzPL's Prayer of Mending heals MalzSent for 600 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 600
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 600
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3742
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:16) MalzPL's Prayer of Mending heals MalzDruid for 566 points.
.ctor :: (04:49:16) MalzPL's Prayer of Mending heals MalzDruid for 566 points.
.ctor :: RegEx Match :: (04:49:16) MalzPL's Prayer of Mending heals MalzDruid for 566 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 566
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 566
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3744
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:16) The Moss Ogre misses MalzPL.
.ctor :: (04:49:16) The Moss Ogre misses MalzPL.
.ctor :: RegEx Match :: (04:49:16) The Moss Ogre misses MalzPL.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3746
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:16) MalzDruid misses the Mud Ogre.
.ctor :: (04:49:16) MalzDruid misses the Mud Ogre.
.ctor :: RegEx Match :: (04:49:16) MalzDruid misses the Mud Ogre.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3748
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:16) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:16) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:16) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3750
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:16) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:16) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:16) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3752
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:16) MalzPL hits the Mud Ogre for 30 points of damage.
.ctor :: (04:49:16) MalzPL hits the Mud Ogre for 30 points of damage.
.ctor :: RegEx Match :: (04:49:16) MalzPL hits the Mud Ogre for 30 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:16
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 30
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 30
ParseLine :: AddCombatAction :: Time       = 04:49:16
ParseLine :: AddCombatAction :: Time_Sorter= 3754
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:17) MalzDruid hits the Mud Ogre for 47 points of damage.
.ctor :: (04:49:17) MalzDruid hits the Mud Ogre for 47 points of damage.
.ctor :: RegEx Match :: (04:49:17) MalzDruid hits the Mud Ogre for 47 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 47
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 47
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3756
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:17) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:17) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:17) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3758
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:17) MalzDruid's Prayer of Mending heals MalzPL for 718 points.
.ctor :: (04:49:17) MalzDruid's Prayer of Mending heals MalzPL for 718 points.
.ctor :: RegEx Match :: (04:49:17) MalzDruid's Prayer of Mending heals MalzPL for 718 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 718
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 718
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3760
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:17) MalzDruid's Prayer of Mending heals you for 671 points.
.ctor :: (04:49:17) MalzDruid's Prayer of Mending heals you for 671 points.
.ctor :: RegEx Match :: (04:49:17) MalzDruid's Prayer of Mending heals you for 671 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 671
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 671
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3762
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:17) MalzDruid's Prayer of Mending heals MalzSent for 633 points.
.ctor :: (04:49:17) MalzDruid's Prayer of Mending heals MalzSent for 633 points.
.ctor :: RegEx Match :: (04:49:17) MalzDruid's Prayer of Mending heals MalzSent for 633 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 633
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 633
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3764
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:17) MalzDruid's Prayer of Mending heals MalzDruid for 701 points.
.ctor :: (04:49:17) MalzDruid's Prayer of Mending heals MalzDruid for 701 points.
.ctor :: RegEx Match :: (04:49:17) MalzDruid's Prayer of Mending heals MalzDruid for 701 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 701
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 701
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3766
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:17) MalzPL hits the Mud Ogre for 30 points of damage.
.ctor :: (04:49:17) MalzPL hits the Mud Ogre for 30 points of damage.
.ctor :: RegEx Match :: (04:49:17) MalzPL hits the Mud Ogre for 30 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 30
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 30
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3768
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:17) Mud Ogre stops stumbling.
.ctor :: (04:49:17) Mud Ogre stops stumbling.
ParseLine :: (04:49:17) The Moss Ogre misses MalzSent.
.ctor :: (04:49:17) The Moss Ogre misses MalzSent.
.ctor :: RegEx Match :: (04:49:17) The Moss Ogre misses MalzSent.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3772
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:17) MalzSent misses the Moss Ogre.
.ctor :: (04:49:17) MalzSent misses the Moss Ogre.
.ctor :: RegEx Match :: (04:49:17) MalzSent misses the Moss Ogre.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3774
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:17) Mud Ogre's stun immunity has worn off.
.ctor :: (04:49:17) Mud Ogre's stun immunity has worn off.
ParseLine :: (04:49:17) Moss Ogre's stun immunity has worn off.
.ctor :: (04:49:17) Moss Ogre's stun immunity has worn off.
ParseLine :: (04:49:17) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:17) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:17) Mud Ogre no longer feels as vulnerable to holy magic.
.ctor :: (04:49:17) Mud Ogre no longer feels as vulnerable to holy magic.
ParseLine :: (04:49:17) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:17) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:17) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3784
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:17) MalzSent's Righteous Word of Binding smites Mud Ogre for 1071 points of damage!
.ctor :: (04:49:17) MalzSent's Righteous Word of Binding smites Mud Ogre for 1071 points of damage!
.ctor :: RegEx Match :: (04:49:17) MalzSent's Righteous Word of Binding smites Mud Ogre for 1071 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1071
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 1071
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3786
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:17) [Combat] Info: The Mud Ogre has died!
.ctor :: (04:49:17) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: (04:49:17) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3788
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:17) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:17) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:17) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3790
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:17) MalzSent's Righteous Word of Binding smites Moss Ogre for 598 points of damage!
.ctor :: (04:49:17) MalzSent's Righteous Word of Binding smites Moss Ogre for 598 points of damage!
.ctor :: RegEx Match :: (04:49:17) MalzSent's Righteous Word of Binding smites Moss Ogre for 598 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 598
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 598
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3792
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:17) MalzPL casts Earthquake.
.ctor :: (04:49:17) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:17) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3794
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:17) MalzSent hits the Moss Ogre for 213 points of damage.
.ctor :: (04:49:17) MalzSent hits the Moss Ogre for 213 points of damage.
.ctor :: RegEx Match :: (04:49:17) MalzSent hits the Moss Ogre for 213 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 213
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 213
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3796
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:17) The Moss Ogre misses MalzSent.
.ctor :: (04:49:17) The Moss Ogre misses MalzSent.
.ctor :: RegEx Match :: (04:49:17) The Moss Ogre misses MalzSent.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3798
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:17) MalzSent hits the Moss Ogre for 182 points of damage.
.ctor :: (04:49:17) MalzSent hits the Moss Ogre for 182 points of damage.
.ctor :: RegEx Match :: (04:49:17) MalzSent hits the Moss Ogre for 182 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 182
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 182
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3800
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:17) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:17) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:17) Moss Ogre no longer feels as vulnerable to holy magic.
.ctor :: (04:49:17) Moss Ogre no longer feels as vulnerable to holy magic.
ParseLine :: (04:49:17) MalzDruid casts Earthquake.
.ctor :: (04:49:17) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:17) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3806
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:17) MalzDruid's Earthquake hurts Moss Ogre for 1323 points of damage.
.ctor :: (04:49:17) MalzDruid's Earthquake hurts Moss Ogre for 1323 points of damage.
.ctor :: RegEx Match :: (04:49:17) MalzDruid's Earthquake hurts Moss Ogre for 1323 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1323
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1323
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3808
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:17) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:17) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:17) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3810
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:17) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: (04:49:17) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: RegEx Match :: (04:49:17) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = HardC
.ctor :: RegEx Match :: Ability    = Challenge
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = attack
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 26
.ctor :: RegEx Match :: RegExDesc  = Taunt :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<target>.*) (?<type>[atck]*)s? (?<source>.*)
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = HardC
ParseLine :: AddCombatAction :: Ability    = Challenge
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3812
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = attack
ParseLine :: (04:49:17) MalzPL casts Prayer of Mending.
.ctor :: (04:49:17) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:17) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3814
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:17) MalzPL's Prayer of Mending heals MalzPL for 820 points.
.ctor :: (04:49:17) MalzPL's Prayer of Mending heals MalzPL for 820 points.
.ctor :: RegEx Match :: (04:49:17) MalzPL's Prayer of Mending heals MalzPL for 820 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 820
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 820
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3816
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:17) MalzPL's Prayer of Mending heals you for 508 points.
.ctor :: (04:49:17) MalzPL's Prayer of Mending heals you for 508 points.
.ctor :: RegEx Match :: (04:49:17) MalzPL's Prayer of Mending heals you for 508 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 508
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 508
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3818
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:17) MalzPL's Prayer of Mending heals MalzSent for 674 points.
.ctor :: (04:49:17) MalzPL's Prayer of Mending heals MalzSent for 674 points.
.ctor :: RegEx Match :: (04:49:17) MalzPL's Prayer of Mending heals MalzSent for 674 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 674
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 674
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3820
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:17) MalzPL's Prayer of Mending heals MalzDruid for 461 points.
.ctor :: (04:49:17) MalzPL's Prayer of Mending heals MalzDruid for 461 points.
.ctor :: RegEx Match :: (04:49:17) MalzPL's Prayer of Mending heals MalzDruid for 461 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 461
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 461
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3822
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:17) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:17) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:17) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3824
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:17) MalzDruid's Prayer of Mending heals MalzPL for 531 points.
.ctor :: (04:49:17) MalzDruid's Prayer of Mending heals MalzPL for 531 points.
.ctor :: RegEx Match :: (04:49:17) MalzDruid's Prayer of Mending heals MalzPL for 531 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 531
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 531
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3826
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:17) MalzDruid's Prayer of Mending heals you for 733 points.
.ctor :: (04:49:17) MalzDruid's Prayer of Mending heals you for 733 points.
.ctor :: RegEx Match :: (04:49:17) MalzDruid's Prayer of Mending heals you for 733 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 733
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 733
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3828
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:17) MalzDruid's Prayer of Mending heals MalzSent for 637 points.
.ctor :: (04:49:17) MalzDruid's Prayer of Mending heals MalzSent for 637 points.
.ctor :: RegEx Match :: (04:49:17) MalzDruid's Prayer of Mending heals MalzSent for 637 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 637
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 637
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3830
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:17) MalzDruid's Prayer of Mending heals MalzDruid for 539 points.
.ctor :: (04:49:17) MalzDruid's Prayer of Mending heals MalzDruid for 539 points.
.ctor :: RegEx Match :: (04:49:17) MalzDruid's Prayer of Mending heals MalzDruid for 539 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 539
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 539
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3832
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:17) MalzPL casts Earthquake.
.ctor :: (04:49:17) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:17) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3834
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:17) MalzPL's Earthquake hurts Moss Ogre for 1134 points of damage.
.ctor :: (04:49:17) MalzPL's Earthquake hurts Moss Ogre for 1134 points of damage.
.ctor :: RegEx Match :: (04:49:17) MalzPL's Earthquake hurts Moss Ogre for 1134 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1134
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1134
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3836
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:17) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:17) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:17) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3838
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:17) MalzSent drains 106 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: (04:49:17) MalzSent drains 106 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:17) MalzSent drains 106 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 106
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 106
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3840
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:17) MalzSent drains 151 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: (04:49:17) MalzSent drains 151 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:17) MalzSent drains 151 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 151
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 151
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3842
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:17) Moss Ogre begins to stumble.
.ctor :: (04:49:17) Moss Ogre begins to stumble.
ParseLine :: (04:49:17) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:17) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:17) Moss Ogre stops stumbling.
.ctor :: (04:49:17) Moss Ogre stops stumbling.
ParseLine :: (04:49:17) MalzDruid casts Earthquake.
.ctor :: (04:49:17) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:17) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3850
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:17) MalzDruid's Earthquake hurts Moss Ogre for 1150 points of damage.
.ctor :: (04:49:17) MalzDruid's Earthquake hurts Moss Ogre for 1150 points of damage.
.ctor :: RegEx Match :: (04:49:17) MalzDruid's Earthquake hurts Moss Ogre for 1150 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1150
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1150
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3852
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:17) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:17) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:17) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3854
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:17) MalzPL casts Prayer of Mending.
.ctor :: (04:49:17) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:17) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3856
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:17) MalzPL's Prayer of Mending heals MalzPL for 694 points.
.ctor :: (04:49:17) MalzPL's Prayer of Mending heals MalzPL for 694 points.
.ctor :: RegEx Match :: (04:49:17) MalzPL's Prayer of Mending heals MalzPL for 694 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 694
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 694
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3858
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:17) MalzPL's Prayer of Mending heals you for 603 points.
.ctor :: (04:49:17) MalzPL's Prayer of Mending heals you for 603 points.
.ctor :: RegEx Match :: (04:49:17) MalzPL's Prayer of Mending heals you for 603 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 603
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 603
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3860
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:17) MalzPL's Prayer of Mending heals MalzSent for 596 points.
.ctor :: (04:49:17) MalzPL's Prayer of Mending heals MalzSent for 596 points.
.ctor :: RegEx Match :: (04:49:17) MalzPL's Prayer of Mending heals MalzSent for 596 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 596
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 596
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3862
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:17) MalzPL's Prayer of Mending heals MalzDruid for 687 points.
.ctor :: (04:49:17) MalzPL's Prayer of Mending heals MalzDruid for 687 points.
.ctor :: RegEx Match :: (04:49:17) MalzPL's Prayer of Mending heals MalzDruid for 687 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 687
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 687
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3864
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:17) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:17) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:17) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3866
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:17) MalzDruid's Prayer of Mending heals MalzPL for 475 points.
.ctor :: (04:49:17) MalzDruid's Prayer of Mending heals MalzPL for 475 points.
.ctor :: RegEx Match :: (04:49:17) MalzDruid's Prayer of Mending heals MalzPL for 475 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 475
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 475
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3868
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:17) MalzDruid's Prayer of Mending heals you for 403 points.
.ctor :: (04:49:17) MalzDruid's Prayer of Mending heals you for 403 points.
.ctor :: RegEx Match :: (04:49:17) MalzDruid's Prayer of Mending heals you for 403 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 403
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 403
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3870
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:17) MalzDruid's Prayer of Mending heals MalzSent for 557 points.
.ctor :: (04:49:17) MalzDruid's Prayer of Mending heals MalzSent for 557 points.
.ctor :: RegEx Match :: (04:49:17) MalzDruid's Prayer of Mending heals MalzSent for 557 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 557
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 557
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3872
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:17) MalzDruid's Prayer of Mending heals MalzDruid for 640 points.
.ctor :: (04:49:17) MalzDruid's Prayer of Mending heals MalzDruid for 640 points.
.ctor :: RegEx Match :: (04:49:17) MalzDruid's Prayer of Mending heals MalzDruid for 640 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 640
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 640
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3874
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:17) Moss Ogre casts Flesh of Granite.
.ctor :: (04:49:17) Moss Ogre casts Flesh of Granite.
.ctor :: RegEx Match :: (04:49:17) Moss Ogre casts Flesh of Granite.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = Flesh of Granite
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = Flesh of Granite
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3876
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:17) Moss Ogre's flesh becomes as hard as granite!
.ctor :: (04:49:17) Moss Ogre's flesh becomes as hard as granite!
ParseLine :: (04:49:17) MalzPL casts Earthquake.
.ctor :: (04:49:17) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:17) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3880
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:17) MalzPL's Earthquake hurts Moss Ogre for 288 points of damage.
.ctor :: (04:49:17) MalzPL's Earthquake hurts Moss Ogre for 288 points of damage.
.ctor :: RegEx Match :: (04:49:17) MalzPL's Earthquake hurts Moss Ogre for 288 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:17
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 288
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 288
ParseLine :: AddCombatAction :: Time       = 04:49:17
ParseLine :: AddCombatAction :: Time_Sorter= 3882
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:18) MalzDruid casts Earthquake.
.ctor :: (04:49:18) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:18) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3884
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:18) MalzDruid's Earthquake hurts Moss Ogre for 387 points of damage.
.ctor :: (04:49:18) MalzDruid's Earthquake hurts Moss Ogre for 387 points of damage.
.ctor :: RegEx Match :: (04:49:18) MalzDruid's Earthquake hurts Moss Ogre for 387 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 387
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 387
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3886
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:18) MalzPL casts Call Lightning.
.ctor :: (04:49:18) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:18) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3888
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:18) MalzPL casts Call Lightning.
.ctor :: (04:49:18) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:18) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3890
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:18) Moss Ogre is stunned!
.ctor :: (04:49:18) Moss Ogre is stunned!
ParseLine :: (04:49:18) MalzPL casts Call Lightning.
.ctor :: (04:49:18) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:18) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3894
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:18) MalzPL casts Call Lightning.
.ctor :: (04:49:18) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:18) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3896
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:18) MalzPL hits the Moss Ogre for 3 points of damage.
.ctor :: (04:49:18) MalzPL hits the Moss Ogre for 3 points of damage.
.ctor :: RegEx Match :: (04:49:18) MalzPL hits the Moss Ogre for 3 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 3
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 3
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3898
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:18) MalzPL's Call Lightning shocks Moss Ogre for 812 points of damage!
.ctor :: (04:49:18) MalzPL's Call Lightning shocks Moss Ogre for 812 points of damage!
.ctor :: RegEx Match :: (04:49:18) MalzPL's Call Lightning shocks Moss Ogre for 812 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 812
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 812
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3900
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:18) Moss Ogre is no longer stunned.
.ctor :: (04:49:18) Moss Ogre is no longer stunned.
ParseLine :: (04:49:18) MalzPL hits the Moss Ogre for 7 points of damage.
.ctor :: (04:49:18) MalzPL hits the Moss Ogre for 7 points of damage.
.ctor :: RegEx Match :: (04:49:18) MalzPL hits the Moss Ogre for 7 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 7
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 7
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3904
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:18) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:18) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:18) Moss Ogre's skin returns to normal.
.ctor :: (04:49:18) Moss Ogre's skin returns to normal.
ParseLine :: (04:49:18) Moss Ogre's stun immunity has worn off.
.ctor :: (04:49:18) Moss Ogre's stun immunity has worn off.
ParseLine :: (04:49:18) MalzDruid casts Call Lightning.
.ctor :: (04:49:18) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:18) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3912
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:18) MalzDruid casts Call Lightning.
.ctor :: (04:49:18) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:18) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3914
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:18) MalzDruid's Call Lightning shocks Moss Ogre for 824 points of damage!
.ctor :: (04:49:18) MalzDruid's Call Lightning shocks Moss Ogre for 824 points of damage!
.ctor :: RegEx Match :: (04:49:18) MalzDruid's Call Lightning shocks Moss Ogre for 824 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 824
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 824
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3916
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:18) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:18) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:18) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3918
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:18) MalzPL casts Prayer of Mending.
.ctor :: (04:49:18) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:18) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3920
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:18) MalzPL's Prayer of Mending heals MalzPL for 436 points.
.ctor :: (04:49:18) MalzPL's Prayer of Mending heals MalzPL for 436 points.
.ctor :: RegEx Match :: (04:49:18) MalzPL's Prayer of Mending heals MalzPL for 436 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 436
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 436
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3922
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:18) MalzPL's Prayer of Mending heals you for 499 points.
.ctor :: (04:49:18) MalzPL's Prayer of Mending heals you for 499 points.
.ctor :: RegEx Match :: (04:49:18) MalzPL's Prayer of Mending heals you for 499 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 499
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 499
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3924
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:18) MalzPL's Prayer of Mending heals MalzSent for 594 points.
.ctor :: (04:49:18) MalzPL's Prayer of Mending heals MalzSent for 594 points.
.ctor :: RegEx Match :: (04:49:18) MalzPL's Prayer of Mending heals MalzSent for 594 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 594
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 594
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3926
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:18) MalzPL's Prayer of Mending heals MalzDruid for 450 points.
.ctor :: (04:49:18) MalzPL's Prayer of Mending heals MalzDruid for 450 points.
.ctor :: RegEx Match :: (04:49:18) MalzPL's Prayer of Mending heals MalzDruid for 450 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 450
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 450
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3928
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:18) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:18) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:18) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3930
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:18) MalzDruid's Prayer of Mending heals MalzPL for 436 points.
.ctor :: (04:49:18) MalzDruid's Prayer of Mending heals MalzPL for 436 points.
.ctor :: RegEx Match :: (04:49:18) MalzDruid's Prayer of Mending heals MalzPL for 436 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 436
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 436
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3932
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:18) MalzDruid's Prayer of Mending heals you for 764 points.
.ctor :: (04:49:18) MalzDruid's Prayer of Mending heals you for 764 points.
.ctor :: RegEx Match :: (04:49:18) MalzDruid's Prayer of Mending heals you for 764 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 764
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 764
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3934
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:18) MalzDruid's Prayer of Mending heals MalzSent for 495 points.
.ctor :: (04:49:18) MalzDruid's Prayer of Mending heals MalzSent for 495 points.
.ctor :: RegEx Match :: (04:49:18) MalzDruid's Prayer of Mending heals MalzSent for 495 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 495
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 495
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3936
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:18) MalzDruid's Prayer of Mending heals MalzDruid for 746 points.
.ctor :: (04:49:18) MalzDruid's Prayer of Mending heals MalzDruid for 746 points.
.ctor :: RegEx Match :: (04:49:18) MalzDruid's Prayer of Mending heals MalzDruid for 746 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 746
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 746
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3938
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:18) [Combat] Info: The Vorok Mud-Chief attacks HardC
.ctor :: (04:49:18) [Combat] Info: The Vorok Mud-Chief attacks HardC
.ctor :: RegEx Match :: (04:49:18) [Combat] Info: The Vorok Mud-Chief attacks HardC
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = HardC
.ctor :: RegEx Match :: Ability    = Challenge
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = attack
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 26
.ctor :: RegEx Match :: RegExDesc  = Taunt :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<target>.*) (?<type>[atck]*)s? (?<source>.*)
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = HardC
ParseLine :: AddCombatAction :: Ability    = Challenge
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3940
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = attack
ParseLine :: (04:49:18) The Vorok Mud-Chief misses YOU!
.ctor :: (04:49:18) The Vorok Mud-Chief misses YOU!
.ctor :: RegEx Match :: (04:49:18) The Vorok Mud-Chief misses YOU!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = Vorok Mud-Chief
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = YOU
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3942
ParseLine :: AddCombatAction :: Target     = YOU
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:18) MalzPL casts Prayer of Mending.
.ctor :: (04:49:18) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:18) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3944
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:18) MalzPL's Prayer of Mending heals MalzPL for 551 points.
.ctor :: (04:49:18) MalzPL's Prayer of Mending heals MalzPL for 551 points.
.ctor :: RegEx Match :: (04:49:18) MalzPL's Prayer of Mending heals MalzPL for 551 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 551
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 551
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3946
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:18) MalzPL's Prayer of Mending heals MalzSent for 520 points.
.ctor :: (04:49:18) MalzPL's Prayer of Mending heals MalzSent for 520 points.
.ctor :: RegEx Match :: (04:49:18) MalzPL's Prayer of Mending heals MalzSent for 520 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 520
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 520
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3948
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:18) MalzPL's Prayer of Mending heals MalzDruid for 696 points.
.ctor :: (04:49:18) MalzPL's Prayer of Mending heals MalzDruid for 696 points.
.ctor :: RegEx Match :: (04:49:18) MalzPL's Prayer of Mending heals MalzDruid for 696 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 696
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 696
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3950
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:18) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:18) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:18) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3952
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:18) MalzDruid's Prayer of Mending heals MalzPL for 514 points.
.ctor :: (04:49:18) MalzDruid's Prayer of Mending heals MalzPL for 514 points.
.ctor :: RegEx Match :: (04:49:18) MalzDruid's Prayer of Mending heals MalzPL for 514 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 514
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 514
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3954
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:18) MalzDruid's Prayer of Mending heals MalzSent for 761 points.
.ctor :: (04:49:18) MalzDruid's Prayer of Mending heals MalzSent for 761 points.
.ctor :: RegEx Match :: (04:49:18) MalzDruid's Prayer of Mending heals MalzSent for 761 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 761
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 761
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3956
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:18) MalzDruid's Prayer of Mending heals MalzDruid for 583 points.
.ctor :: (04:49:18) MalzDruid's Prayer of Mending heals MalzDruid for 583 points.
.ctor :: RegEx Match :: (04:49:18) MalzDruid's Prayer of Mending heals MalzDruid for 583 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 583
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 583
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3958
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:18) You parry the Vorok Mud-Chief's attack!
.ctor :: (04:49:18) You parry the Vorok Mud-Chief's attack!
.ctor :: RegEx Match :: (04:49:18) You parry the Vorok Mud-Chief's attack!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = Vorok Mud-Chief
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = You
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = parry
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 17
.ctor :: RegEx Match :: RegExDesc  = Parry :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>parr)[yies]+ (?<source>.*)'s .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3960
ParseLine :: AddCombatAction :: Target     = You
ParseLine :: AddCombatAction :: Value_Type = parry
ParseLine :: (04:49:18) You parry the Vorok Mud-Chief's attack!
.ctor :: (04:49:18) You parry the Vorok Mud-Chief's attack!
.ctor :: RegEx Match :: (04:49:18) You parry the Vorok Mud-Chief's attack!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = Vorok Mud-Chief
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = You
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = parry
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 17
.ctor :: RegEx Match :: RegExDesc  = Parry :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>parr)[yies]+ (?<source>.*)'s .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3962
ParseLine :: AddCombatAction :: Target     = You
ParseLine :: AddCombatAction :: Value_Type = parry
ParseLine :: (04:49:18) The Vorok Mud-Chief misses YOU!
.ctor :: (04:49:18) The Vorok Mud-Chief misses YOU!
.ctor :: RegEx Match :: (04:49:18) The Vorok Mud-Chief misses YOU!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = Vorok Mud-Chief
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = YOU
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3964
ParseLine :: AddCombatAction :: Target     = YOU
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:18) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:18) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:18) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3966
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:18) MalzSent drains 101 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: (04:49:18) MalzSent drains 101 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:18) MalzSent drains 101 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 101
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 101
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3968
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:18) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:18) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:18) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3970
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:18) MalzSent drains 145 points of mana from Vorok Mud-Chief with Exalted Word of Binding.
.ctor :: (04:49:18) MalzSent drains 145 points of mana from Vorok Mud-Chief with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:18) MalzSent drains 145 points of mana from Vorok Mud-Chief with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 145
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 145
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3972
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:18) Vorok Mud-Chief begins to stumble.
.ctor :: (04:49:18) Vorok Mud-Chief begins to stumble.
ParseLine :: (04:49:18) MalzPL casts Prayer of Mending.
.ctor :: (04:49:18) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:18) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3976
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:18) MalzPL's Prayer of Mending heals you for 528 points.
.ctor :: (04:49:18) MalzPL's Prayer of Mending heals you for 528 points.
.ctor :: RegEx Match :: (04:49:18) MalzPL's Prayer of Mending heals you for 528 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 528
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 528
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3978
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:18) MalzPL's Prayer of Mending heals MalzPL for 505 points.
.ctor :: (04:49:18) MalzPL's Prayer of Mending heals MalzPL for 505 points.
.ctor :: RegEx Match :: (04:49:18) MalzPL's Prayer of Mending heals MalzPL for 505 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 505
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 505
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3980
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:18) MalzPL's Prayer of Mending heals MalzSent for 463 points.
.ctor :: (04:49:18) MalzPL's Prayer of Mending heals MalzSent for 463 points.
.ctor :: RegEx Match :: (04:49:18) MalzPL's Prayer of Mending heals MalzSent for 463 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 463
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 463
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3982
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:18) MalzPL's Prayer of Mending heals MalzDruid for 459 points.
.ctor :: (04:49:18) MalzPL's Prayer of Mending heals MalzDruid for 459 points.
.ctor :: RegEx Match :: (04:49:18) MalzPL's Prayer of Mending heals MalzDruid for 459 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 459
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 459
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3984
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:18) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:18) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:18) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3986
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:18) MalzDruid's Prayer of Mending heals you for 425 points.
.ctor :: (04:49:18) MalzDruid's Prayer of Mending heals you for 425 points.
.ctor :: RegEx Match :: (04:49:18) MalzDruid's Prayer of Mending heals you for 425 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 425
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 425
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3988
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:18) MalzDruid's Prayer of Mending heals MalzPL for 581 points.
.ctor :: (04:49:18) MalzDruid's Prayer of Mending heals MalzPL for 581 points.
.ctor :: RegEx Match :: (04:49:18) MalzDruid's Prayer of Mending heals MalzPL for 581 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 581
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 581
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3990
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:18) MalzDruid's Prayer of Mending heals MalzSent for 506 points.
.ctor :: (04:49:18) MalzDruid's Prayer of Mending heals MalzSent for 506 points.
.ctor :: RegEx Match :: (04:49:18) MalzDruid's Prayer of Mending heals MalzSent for 506 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 506
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 506
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3992
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:18) MalzDruid's Prayer of Mending heals MalzDruid for 626 points.
.ctor :: (04:49:18) MalzDruid's Prayer of Mending heals MalzDruid for 626 points.
.ctor :: RegEx Match :: (04:49:18) MalzDruid's Prayer of Mending heals MalzDruid for 626 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 626
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 626
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3994
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:18) [Combat] Info: The Mud Ogre attacks HardC
.ctor :: (04:49:18) [Combat] Info: The Mud Ogre attacks HardC
.ctor :: RegEx Match :: (04:49:18) [Combat] Info: The Mud Ogre attacks HardC
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = HardC
.ctor :: RegEx Match :: Ability    = Challenge
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = attack
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 26
.ctor :: RegEx Match :: RegExDesc  = Taunt :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<target>.*) (?<type>[atck]*)s? (?<source>.*)
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = HardC
ParseLine :: AddCombatAction :: Ability    = Challenge
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3996
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = attack
ParseLine :: (04:49:18) Vorok Mud-Chief casts Flesh of Lead.
.ctor :: (04:49:18) Vorok Mud-Chief casts Flesh of Lead.
.ctor :: RegEx Match :: (04:49:18) Vorok Mud-Chief casts Flesh of Lead.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = Vorok Mud-Chief
.ctor :: RegEx Match :: Ability    = Flesh of Lead
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Ability    = Flesh of Lead
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 3998
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:18) Vorok Mud-Chief feels warded against magic.
.ctor :: (04:49:18) Vorok Mud-Chief feels warded against magic.
ParseLine :: (04:49:18) MalzPL casts Earthquake.
.ctor :: (04:49:18) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:18) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 4002
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:18) MalzPL's Earthquake hurts Vorok Mud-Chief for 1124 points of damage.
.ctor :: (04:49:18) MalzPL's Earthquake hurts Vorok Mud-Chief for 1124 points of damage.
.ctor :: RegEx Match :: (04:49:18) MalzPL's Earthquake hurts Vorok Mud-Chief for 1124 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 1124
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1124
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 4004
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:18) MalzPL casts Earthquake.
.ctor :: (04:49:18) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:18) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 4006
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:18) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:18) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:18) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 4008
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:18) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:18) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:18) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 4010
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:18) The Mud Ogre misses YOU!
.ctor :: (04:49:18) The Mud Ogre misses YOU!
.ctor :: RegEx Match :: (04:49:18) The Mud Ogre misses YOU!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:18
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = YOU
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:18
ParseLine :: AddCombatAction :: Time_Sorter= 4012
ParseLine :: AddCombatAction :: Target     = YOU
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:19) MalzDruid casts Earthquake.
.ctor :: (04:49:19) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:19) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4014
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:19) MalzDruid's Earthquake hurts Mud Ogre for 1259 points of damage.
.ctor :: (04:49:19) MalzDruid's Earthquake hurts Mud Ogre for 1259 points of damage.
.ctor :: RegEx Match :: (04:49:19) MalzDruid's Earthquake hurts Mud Ogre for 1259 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1259
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1259
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4016
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:19) MalzDruid casts Earthquake.
.ctor :: (04:49:19) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:19) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4018
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:19) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:19) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:19) Vorok Mud-Chief's warding fades.
.ctor :: (04:49:19) Vorok Mud-Chief's warding fades.
ParseLine :: (04:49:19) Vorok Mud-Chief no longer feels as vulnerable to holy magic.
.ctor :: (04:49:19) Vorok Mud-Chief no longer feels as vulnerable to holy magic.
ParseLine :: (04:49:19) Vorok Mud-Chief stops stumbling.
.ctor :: (04:49:19) Vorok Mud-Chief stops stumbling.
ParseLine :: (04:49:19) MalzDruid's Earthquake hurts Vorok Mud-Chief for 1093 points of damage.
.ctor :: (04:49:19) MalzDruid's Earthquake hurts Vorok Mud-Chief for 1093 points of damage.
.ctor :: RegEx Match :: (04:49:19) MalzDruid's Earthquake hurts Vorok Mud-Chief for 1093 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 1093
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1093
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4028
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:19) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: (04:49:19) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: RegEx Match :: (04:49:19) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = Vorok Mud-Chief
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4030
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:19) You block the Vorok Mud-Chief's attack!
.ctor :: (04:49:19) You block the Vorok Mud-Chief's attack!
.ctor :: RegEx Match :: (04:49:19) You block the Vorok Mud-Chief's attack!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = Vorok Mud-Chief
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = You
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = block
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 16
.ctor :: RegEx Match :: RegExDesc  = You Block :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>block) (?<source>.*)'s .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4032
ParseLine :: AddCombatAction :: Target     = You
ParseLine :: AddCombatAction :: Value_Type = block
ParseLine :: (04:49:19) MalzPL casts Call Lightning.
.ctor :: (04:49:19) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:19) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4034
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:19) MalzPL casts Call Lightning.
.ctor :: (04:49:19) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:19) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4036
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:19) Mud Ogre is stunned!
.ctor :: (04:49:19) Mud Ogre is stunned!
ParseLine :: (04:49:19) MalzPL casts Call Lightning.
.ctor :: (04:49:19) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:19) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4040
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:19) MalzPL casts Call Lightning.
.ctor :: (04:49:19) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:19) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4042
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:19) MalzPL's Call Lightning shocks Mud Ogre for 752 points of damage!
.ctor :: (04:49:19) MalzPL's Call Lightning shocks Mud Ogre for 752 points of damage!
.ctor :: RegEx Match :: (04:49:19) MalzPL's Call Lightning shocks Mud Ogre for 752 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 752
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 752
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4044
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:19) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:19) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:19) Mud Ogre's stun immunity has worn off.
.ctor :: (04:49:19) Mud Ogre's stun immunity has worn off.
ParseLine :: (04:49:19) Mud Ogre is no longer stunned.
.ctor :: (04:49:19) Mud Ogre is no longer stunned.
ParseLine :: (04:49:19) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:19) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:19) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4052
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:19) MalzSent's Righteous Word of Binding smites Mud Ogre for 436 points of damage!
.ctor :: (04:49:19) MalzSent's Righteous Word of Binding smites Mud Ogre for 436 points of damage!
.ctor :: RegEx Match :: (04:49:19) MalzSent's Righteous Word of Binding smites Mud Ogre for 436 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 436
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 436
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4054
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:19) [Combat] Info: The Mud Ogre has died!
.ctor :: (04:49:19) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: (04:49:19) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4056
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:19) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:19) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:19) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4058
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:19) MalzPL casts Prayer of Mending.
.ctor :: (04:49:19) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:19) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4060
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:19) MalzPL's Prayer of Mending heals you for 535 points.
.ctor :: (04:49:19) MalzPL's Prayer of Mending heals you for 535 points.
.ctor :: RegEx Match :: (04:49:19) MalzPL's Prayer of Mending heals you for 535 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 535
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 535
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4062
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:19) MalzPL's Prayer of Mending heals MalzPL for 462 points.
.ctor :: (04:49:19) MalzPL's Prayer of Mending heals MalzPL for 462 points.
.ctor :: RegEx Match :: (04:49:19) MalzPL's Prayer of Mending heals MalzPL for 462 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 462
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 462
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4064
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:19) MalzPL's Prayer of Mending heals MalzSent for 534 points.
.ctor :: (04:49:19) MalzPL's Prayer of Mending heals MalzSent for 534 points.
.ctor :: RegEx Match :: (04:49:19) MalzPL's Prayer of Mending heals MalzSent for 534 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 534
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 534
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4066
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:19) MalzPL's Prayer of Mending heals MalzDruid for 376 points.
.ctor :: (04:49:19) MalzPL's Prayer of Mending heals MalzDruid for 376 points.
.ctor :: RegEx Match :: (04:49:19) MalzPL's Prayer of Mending heals MalzDruid for 376 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 376
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 376
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4068
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:19) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:19) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:19) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4070
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:19) MalzDruid's Prayer of Mending heals you for 552 points.
.ctor :: (04:49:19) MalzDruid's Prayer of Mending heals you for 552 points.
.ctor :: RegEx Match :: (04:49:19) MalzDruid's Prayer of Mending heals you for 552 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 552
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 552
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4072
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:19) MalzDruid's Prayer of Mending heals MalzPL for 658 points.
.ctor :: (04:49:19) MalzDruid's Prayer of Mending heals MalzPL for 658 points.
.ctor :: RegEx Match :: (04:49:19) MalzDruid's Prayer of Mending heals MalzPL for 658 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 658
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 658
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4074
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:19) MalzDruid's Prayer of Mending heals MalzSent for 395 points.
.ctor :: (04:49:19) MalzDruid's Prayer of Mending heals MalzSent for 395 points.
.ctor :: RegEx Match :: (04:49:19) MalzDruid's Prayer of Mending heals MalzSent for 395 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 395
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 395
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4076
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:19) MalzDruid's Prayer of Mending heals MalzDruid for 658 points.
.ctor :: (04:49:19) MalzDruid's Prayer of Mending heals MalzDruid for 658 points.
.ctor :: RegEx Match :: (04:49:19) MalzDruid's Prayer of Mending heals MalzDruid for 658 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 658
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 658
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4078
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:19) [Combat] Info: The Tavok Chief-brother attacks HardC
.ctor :: (04:49:19) [Combat] Info: The Tavok Chief-brother attacks HardC
.ctor :: RegEx Match :: (04:49:19) [Combat] Info: The Tavok Chief-brother attacks HardC
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = HardC
.ctor :: RegEx Match :: Ability    = Challenge
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = attack
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 26
.ctor :: RegEx Match :: RegExDesc  = Taunt :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<target>.*) (?<type>[atck]*)s? (?<source>.*)
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = HardC
ParseLine :: AddCombatAction :: Ability    = Challenge
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4080
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = attack
ParseLine :: (04:49:19) MalzPL casts Prayer of Mending.
.ctor :: (04:49:19) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:19) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4082
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:19) MalzPL's Prayer of Mending heals you for 333 points.
.ctor :: (04:49:19) MalzPL's Prayer of Mending heals you for 333 points.
.ctor :: RegEx Match :: (04:49:19) MalzPL's Prayer of Mending heals you for 333 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 333
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 333
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4084
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:19) MalzPL's Prayer of Mending heals MalzPL for 623 points.
.ctor :: (04:49:19) MalzPL's Prayer of Mending heals MalzPL for 623 points.
.ctor :: RegEx Match :: (04:49:19) MalzPL's Prayer of Mending heals MalzPL for 623 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 623
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 623
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4086
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:19) MalzPL's Prayer of Mending heals MalzSent for 703 points.
.ctor :: (04:49:19) MalzPL's Prayer of Mending heals MalzSent for 703 points.
.ctor :: RegEx Match :: (04:49:19) MalzPL's Prayer of Mending heals MalzSent for 703 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 703
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 703
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4088
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:19) MalzPL's Prayer of Mending heals MalzDruid for 487 points.
.ctor :: (04:49:19) MalzPL's Prayer of Mending heals MalzDruid for 487 points.
.ctor :: RegEx Match :: (04:49:19) MalzPL's Prayer of Mending heals MalzDruid for 487 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 487
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 487
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4090
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:19) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:19) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:19) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4092
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:19) MalzDruid's Prayer of Mending heals you for 379 points.
.ctor :: (04:49:19) MalzDruid's Prayer of Mending heals you for 379 points.
.ctor :: RegEx Match :: (04:49:19) MalzDruid's Prayer of Mending heals you for 379 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 379
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 379
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4094
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:19) MalzDruid's Prayer of Mending heals MalzPL for 463 points.
.ctor :: (04:49:19) MalzDruid's Prayer of Mending heals MalzPL for 463 points.
.ctor :: RegEx Match :: (04:49:19) MalzDruid's Prayer of Mending heals MalzPL for 463 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 463
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 463
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4096
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:19) MalzDruid's Prayer of Mending heals MalzSent for 601 points.
.ctor :: (04:49:19) MalzDruid's Prayer of Mending heals MalzSent for 601 points.
.ctor :: RegEx Match :: (04:49:19) MalzDruid's Prayer of Mending heals MalzSent for 601 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 601
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 601
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4098
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:19) MalzDruid's Prayer of Mending heals MalzDruid for 556 points.
.ctor :: (04:49:19) MalzDruid's Prayer of Mending heals MalzDruid for 556 points.
.ctor :: RegEx Match :: (04:49:19) MalzDruid's Prayer of Mending heals MalzDruid for 556 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 556
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 556
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4100
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:19) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:19) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:19) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4102
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:19) You parry the Tavok Chief-brother's attack!
.ctor :: (04:49:19) You parry the Tavok Chief-brother's attack!
.ctor :: RegEx Match :: (04:49:19) You parry the Tavok Chief-brother's attack!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = Tavok Chief-brother
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = You
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = parry
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 17
.ctor :: RegEx Match :: RegExDesc  = Parry :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>parr)[yies]+ (?<source>.*)'s .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4104
ParseLine :: AddCombatAction :: Target     = You
ParseLine :: AddCombatAction :: Value_Type = parry
ParseLine :: (04:49:19) MalzPL casts Earthquake.
.ctor :: (04:49:19) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:19) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4106
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:19) MalzPL's Earthquake hurts Tavok Chief-brother for 1424 points of damage.
.ctor :: (04:49:19) MalzPL's Earthquake hurts Tavok Chief-brother for 1424 points of damage.
.ctor :: RegEx Match :: (04:49:19) MalzPL's Earthquake hurts Tavok Chief-brother for 1424 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 1424
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1424
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4108
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:19) MalzPL casts Earthquake.
.ctor :: (04:49:19) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:19) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4110
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:19) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:19) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:19) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4112
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:19) MalzSent's Righteous Word of Binding smites Tavok Chief-brother for 649 points of damage!
.ctor :: (04:49:19) MalzSent's Righteous Word of Binding smites Tavok Chief-brother for 649 points of damage!
.ctor :: RegEx Match :: (04:49:19) MalzSent's Righteous Word of Binding smites Tavok Chief-brother for 649 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 649
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 649
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4114
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:19) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:19) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:19) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4116
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:19) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:19) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:19) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4118
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:19) MalzSent's Righteous Word of Binding smites Moss Ogre for 607 points of damage!
.ctor :: (04:49:19) MalzSent's Righteous Word of Binding smites Moss Ogre for 607 points of damage!
.ctor :: RegEx Match :: (04:49:19) MalzSent's Righteous Word of Binding smites Moss Ogre for 607 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 607
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 607
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4120
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:19) The Moss Ogre misses MalzSent.
.ctor :: (04:49:19) The Moss Ogre misses MalzSent.
.ctor :: RegEx Match :: (04:49:19) The Moss Ogre misses MalzSent.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4122
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:19) MalzSent hits the Moss Ogre for 77 points of damage.
.ctor :: (04:49:19) MalzSent hits the Moss Ogre for 77 points of damage.
.ctor :: RegEx Match :: (04:49:19) MalzSent hits the Moss Ogre for 77 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 77
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 77
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4124
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:19) MalzDruid casts Earthquake.
.ctor :: (04:49:19) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:19) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4126
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:19) MalzDruid's Earthquake hurts Moss Ogre for 1060 points of damage.
.ctor :: (04:49:19) MalzDruid's Earthquake hurts Moss Ogre for 1060 points of damage.
.ctor :: RegEx Match :: (04:49:19) MalzDruid's Earthquake hurts Moss Ogre for 1060 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1060
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1060
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4128
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:19) MalzDruid casts Earthquake.
.ctor :: (04:49:19) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:19) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4130
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:19) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:19) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:19) Tavok Chief-brother no longer feels as vulnerable to holy magic.
.ctor :: (04:49:19) Tavok Chief-brother no longer feels as vulnerable to holy magic.
ParseLine :: (04:49:19) MalzPL casts Call Lightning.
.ctor :: (04:49:19) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:19) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4136
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:19) MalzPL casts Call Lightning.
.ctor :: (04:49:19) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:19) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:19
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:19
ParseLine :: AddCombatAction :: Time_Sorter= 4138
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:20) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:20) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:20) MalzPL's Call Lightning shocks Tavok Chief-brother for 732 points of damage!
.ctor :: (04:49:20) MalzPL's Call Lightning shocks Tavok Chief-brother for 732 points of damage!
.ctor :: RegEx Match :: (04:49:20) MalzPL's Call Lightning shocks Tavok Chief-brother for 732 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 732
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 732
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4142
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:20) [Combat] Info: The Tavok Chief-brother has died!
.ctor :: (04:49:20) [Combat] Info: The Tavok Chief-brother has died!
.ctor :: RegEx Match :: (04:49:20) [Combat] Info: The Tavok Chief-brother has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = Tavok Chief-brother
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4144
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:20) MalzPL's Call Lightning shocks Moss Ogre for 1103 points of damage!
.ctor :: (04:49:20) MalzPL's Call Lightning shocks Moss Ogre for 1103 points of damage!
.ctor :: RegEx Match :: (04:49:20) MalzPL's Call Lightning shocks Moss Ogre for 1103 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1103
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 1103
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4146
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:20) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:20) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:20) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4148
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:20) MalzPL casts Prayer of Mending.
.ctor :: (04:49:20) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:20) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4150
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:20) MalzPL's Prayer of Mending heals you for 664 points.
.ctor :: (04:49:20) MalzPL's Prayer of Mending heals you for 664 points.
.ctor :: RegEx Match :: (04:49:20) MalzPL's Prayer of Mending heals you for 664 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 664
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 664
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4152
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:20) MalzPL's Prayer of Mending heals MalzPL for 584 points.
.ctor :: (04:49:20) MalzPL's Prayer of Mending heals MalzPL for 584 points.
.ctor :: RegEx Match :: (04:49:20) MalzPL's Prayer of Mending heals MalzPL for 584 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 584
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 584
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4154
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:20) MalzPL's Prayer of Mending heals MalzSent for 668 points.
.ctor :: (04:49:20) MalzPL's Prayer of Mending heals MalzSent for 668 points.
.ctor :: RegEx Match :: (04:49:20) MalzPL's Prayer of Mending heals MalzSent for 668 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 668
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 668
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4156
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:20) MalzPL's Prayer of Mending heals MalzDruid for 458 points.
.ctor :: (04:49:20) MalzPL's Prayer of Mending heals MalzDruid for 458 points.
.ctor :: RegEx Match :: (04:49:20) MalzPL's Prayer of Mending heals MalzDruid for 458 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 458
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 458
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4158
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:20) The Mud Ogre misses MalzPL.
.ctor :: (04:49:20) The Mud Ogre misses MalzPL.
.ctor :: RegEx Match :: (04:49:20) The Mud Ogre misses MalzPL.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4160
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:20) MalzPL hits the Mud Ogre for 26 points of damage.
.ctor :: (04:49:20) MalzPL hits the Mud Ogre for 26 points of damage.
.ctor :: RegEx Match :: (04:49:20) MalzPL hits the Mud Ogre for 26 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 26
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 26
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4162
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:20) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:20) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:20) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4164
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:20) MalzDruid's Prayer of Mending heals you for 708 points.
.ctor :: (04:49:20) MalzDruid's Prayer of Mending heals you for 708 points.
.ctor :: RegEx Match :: (04:49:20) MalzDruid's Prayer of Mending heals you for 708 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 708
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 708
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4166
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:20) MalzDruid's Prayer of Mending heals MalzPL for 442 points.
.ctor :: (04:49:20) MalzDruid's Prayer of Mending heals MalzPL for 442 points.
.ctor :: RegEx Match :: (04:49:20) MalzDruid's Prayer of Mending heals MalzPL for 442 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 442
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 442
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4168
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:20) MalzDruid's Prayer of Mending heals MalzSent for 535 points.
.ctor :: (04:49:20) MalzDruid's Prayer of Mending heals MalzSent for 535 points.
.ctor :: RegEx Match :: (04:49:20) MalzDruid's Prayer of Mending heals MalzSent for 535 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 535
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 535
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4170
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:20) MalzDruid's Prayer of Mending heals MalzDruid for 445 points.
.ctor :: (04:49:20) MalzDruid's Prayer of Mending heals MalzDruid for 445 points.
.ctor :: RegEx Match :: (04:49:20) MalzDruid's Prayer of Mending heals MalzDruid for 445 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 445
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 445
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4172
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:20) MalzPL hits the Mud Ogre for 43 points of damage.
.ctor :: (04:49:20) MalzPL hits the Mud Ogre for 43 points of damage.
.ctor :: RegEx Match :: (04:49:20) MalzPL hits the Mud Ogre for 43 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 43
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 43
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4174
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:20) The Mud Ogre misses MalzDruid.
.ctor :: (04:49:20) The Mud Ogre misses MalzDruid.
.ctor :: RegEx Match :: (04:49:20) The Mud Ogre misses MalzDruid.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4176
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:20) MalzDruid hits the Mud Ogre for 34 points of damage.
.ctor :: (04:49:20) MalzDruid hits the Mud Ogre for 34 points of damage.
.ctor :: RegEx Match :: (04:49:20) MalzDruid hits the Mud Ogre for 34 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 34
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 34
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4178
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:20) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:20) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:20) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4180
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:20) MalzSent's Righteous Word of Binding smites Mud Ogre for 500 points of damage!
.ctor :: (04:49:20) MalzSent's Righteous Word of Binding smites Mud Ogre for 500 points of damage!
.ctor :: RegEx Match :: (04:49:20) MalzSent's Righteous Word of Binding smites Mud Ogre for 500 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 500
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 500
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4182
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:20) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:20) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:20) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4184
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:20) MalzSent's Righteous Word of Binding smites Moss Ogre for 452 points of damage!
.ctor :: (04:49:20) MalzSent's Righteous Word of Binding smites Moss Ogre for 452 points of damage!
.ctor :: RegEx Match :: (04:49:20) MalzSent's Righteous Word of Binding smites Moss Ogre for 452 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 452
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 452
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4186
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:20) Moss Ogre casts Flesh of Granite.
.ctor :: (04:49:20) Moss Ogre casts Flesh of Granite.
.ctor :: RegEx Match :: (04:49:20) Moss Ogre casts Flesh of Granite.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = Flesh of Granite
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = Flesh of Granite
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4188
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:20) Moss Ogre's flesh becomes as hard as granite!
.ctor :: (04:49:20) Moss Ogre's flesh becomes as hard as granite!
ParseLine :: (04:49:20) MalzPL casts Earthquake.
.ctor :: (04:49:20) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:20) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4192
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:20) MalzPL's Earthquake hurts Mud Ogre for 1195 points of damage.
.ctor :: (04:49:20) MalzPL's Earthquake hurts Mud Ogre for 1195 points of damage.
.ctor :: RegEx Match :: (04:49:20) MalzPL's Earthquake hurts Mud Ogre for 1195 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1195
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1195
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4194
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:20) MalzPL hits the Mud Ogre for 28 points of damage.
.ctor :: (04:49:20) MalzPL hits the Mud Ogre for 28 points of damage.
.ctor :: RegEx Match :: (04:49:20) MalzPL hits the Mud Ogre for 28 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 28
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 28
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4196
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:20) MalzDruid hits the Mud Ogre for 35 points of damage.
.ctor :: (04:49:20) MalzDruid hits the Mud Ogre for 35 points of damage.
.ctor :: RegEx Match :: (04:49:20) MalzDruid hits the Mud Ogre for 35 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 35
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 35
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4198
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:20) The Moss Ogre misses MalzSent.
.ctor :: (04:49:20) The Moss Ogre misses MalzSent.
.ctor :: RegEx Match :: (04:49:20) The Moss Ogre misses MalzSent.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4200
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:20) MalzSent hits the Moss Ogre for 40 points of damage.
.ctor :: (04:49:20) MalzSent hits the Moss Ogre for 40 points of damage.
.ctor :: RegEx Match :: (04:49:20) MalzSent hits the Moss Ogre for 40 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 40
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 40
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4202
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:20) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: (04:49:20) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: RegEx Match :: (04:49:20) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = HardC
.ctor :: RegEx Match :: Ability    = Challenge
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = attack
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 26
.ctor :: RegEx Match :: RegExDesc  = Taunt :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<target>.*) (?<type>[atck]*)s? (?<source>.*)
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = HardC
ParseLine :: AddCombatAction :: Ability    = Challenge
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4204
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = attack
ParseLine :: (04:49:20) MalzPL hits the Mud Ogre for 33 points of damage.
.ctor :: (04:49:20) MalzPL hits the Mud Ogre for 33 points of damage.
.ctor :: RegEx Match :: (04:49:20) MalzPL hits the Mud Ogre for 33 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 33
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 33
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4206
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:20) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:20) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:20) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4208
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:20) MalzSent drains 105 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: (04:49:20) MalzSent drains 105 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:20) MalzSent drains 105 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 105
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 105
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4210
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:20) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:20) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:20) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4212
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:20) MalzSent drains 150 points of mana from Mud Ogre with Exalted Word of Binding.
.ctor :: (04:49:20) MalzSent drains 150 points of mana from Mud Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:20) MalzSent drains 150 points of mana from Mud Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 150
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 150
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4214
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:20) Mud Ogre begins to stumble.
.ctor :: (04:49:20) Mud Ogre begins to stumble.
ParseLine :: (04:49:20) MalzSent drains 97 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: (04:49:20) MalzSent drains 97 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:20) MalzSent drains 97 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 97
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 97
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4218
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:20) MalzSent drains 139 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: (04:49:20) MalzSent drains 139 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:20) MalzSent drains 139 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 139
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 139
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4220
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:20) Moss Ogre begins to stumble.
.ctor :: (04:49:20) Moss Ogre begins to stumble.
ParseLine :: (04:49:20) MalzDruid hits the Mud Ogre for 26 points of damage.
.ctor :: (04:49:20) MalzDruid hits the Mud Ogre for 26 points of damage.
.ctor :: RegEx Match :: (04:49:20) MalzDruid hits the Mud Ogre for 26 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 26
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 26
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4224
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:20) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:20) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:20) Mud Ogre stops stumbling.
.ctor :: (04:49:20) Mud Ogre stops stumbling.
ParseLine :: (04:49:20) MalzDruid casts Earthquake.
.ctor :: (04:49:20) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:20) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4230
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:20) MalzDruid's Earthquake hurts Mud Ogre for 1459 points of damage.
.ctor :: (04:49:20) MalzDruid's Earthquake hurts Mud Ogre for 1459 points of damage.
.ctor :: RegEx Match :: (04:49:20) MalzDruid's Earthquake hurts Mud Ogre for 1459 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1459
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1459
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4232
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:20) [Combat] Info: The Mud Ogre has died!
.ctor :: (04:49:20) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: (04:49:20) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4234
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:20) MalzDruid's Earthquake hurts Moss Ogre for 271 points of damage.
.ctor :: (04:49:20) MalzDruid's Earthquake hurts Moss Ogre for 271 points of damage.
.ctor :: RegEx Match :: (04:49:20) MalzDruid's Earthquake hurts Moss Ogre for 271 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 271
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 271
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4236
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:20) MalzSent hits the Moss Ogre for 53 points of damage.
.ctor :: (04:49:20) MalzSent hits the Moss Ogre for 53 points of damage.
.ctor :: RegEx Match :: (04:49:20) MalzSent hits the Moss Ogre for 53 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 53
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 53
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4238
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:20) MalzPL casts Call Lightning.
.ctor :: (04:49:20) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:20) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4240
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:20) Moss Ogre is stunned!
.ctor :: (04:49:20) Moss Ogre is stunned!
ParseLine :: (04:49:20) MalzPL hits the Moss Ogre for 9 points of damage.
.ctor :: (04:49:20) MalzPL hits the Moss Ogre for 9 points of damage.
.ctor :: RegEx Match :: (04:49:20) MalzPL hits the Moss Ogre for 9 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 9
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 9
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4244
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:20) MalzSent hits the Moss Ogre for 41 points of damage.
.ctor :: (04:49:20) MalzSent hits the Moss Ogre for 41 points of damage.
.ctor :: RegEx Match :: (04:49:20) MalzSent hits the Moss Ogre for 41 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 41
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 41
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4246
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:20) Moss Ogre is no longer stunned.
.ctor :: (04:49:20) Moss Ogre is no longer stunned.
ParseLine :: (04:49:20) MalzPL's Call Lightning shocks Moss Ogre for 819 points of damage!
.ctor :: (04:49:20) MalzPL's Call Lightning shocks Moss Ogre for 819 points of damage!
.ctor :: RegEx Match :: (04:49:20) MalzPL's Call Lightning shocks Moss Ogre for 819 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 819
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 819
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4250
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:20) MalzDruid casts Call Lightning.
.ctor :: (04:49:20) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:20) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4252
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:20) MalzDruid casts Call Lightning.
.ctor :: (04:49:20) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:20) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4254
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:20) Moss Ogre is stunned!
.ctor :: (04:49:20) Moss Ogre is stunned!
ParseLine :: (04:49:20) MalzDruid casts Call Lightning.
.ctor :: (04:49:20) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:20) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4258
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:20) MalzDruid casts Call Lightning.
.ctor :: (04:49:20) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:20) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:20
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:20
ParseLine :: AddCombatAction :: Time_Sorter= 4260
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:20) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:20) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:20) Moss Ogre's skin returns to normal.
.ctor :: (04:49:20) Moss Ogre's skin returns to normal.
ParseLine :: (04:49:20) Moss Ogre's stun immunity has worn off.
.ctor :: (04:49:20) Moss Ogre's stun immunity has worn off.
ParseLine :: (04:49:20) Moss Ogre stops stumbling.
.ctor :: (04:49:20) Moss Ogre stops stumbling.
ParseLine :: (04:49:21) MalzDruid casts Call Lightning.
.ctor :: (04:49:21) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:21) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4270
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:21) MalzDruid's Call Lightning shocks Moss Ogre for 1030 points of damage!
.ctor :: (04:49:21) MalzDruid's Call Lightning shocks Moss Ogre for 1030 points of damage!
.ctor :: RegEx Match :: (04:49:21) MalzDruid's Call Lightning shocks Moss Ogre for 1030 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1030
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 1030
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4272
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:21) MalzDruid's Call Lightning shocks Moss Ogre for 739 points of damage!
.ctor :: (04:49:21) MalzDruid's Call Lightning shocks Moss Ogre for 739 points of damage!
.ctor :: RegEx Match :: (04:49:21) MalzDruid's Call Lightning shocks Moss Ogre for 739 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 739
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 739
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4274
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:21) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:21) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:21) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4276
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:21) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:21) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:21) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4278
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:21) Moss Ogre is no longer stunned.
.ctor :: (04:49:21) Moss Ogre is no longer stunned.
ParseLine :: (04:49:21) MalzPL casts Prayer of Mending.
.ctor :: (04:49:21) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:21) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4282
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:21) MalzPL's Prayer of Mending heals you for 530 points.
.ctor :: (04:49:21) MalzPL's Prayer of Mending heals you for 530 points.
.ctor :: RegEx Match :: (04:49:21) MalzPL's Prayer of Mending heals you for 530 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 530
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 530
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4284
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:21) MalzPL's Prayer of Mending heals MalzPL for 442 points.
.ctor :: (04:49:21) MalzPL's Prayer of Mending heals MalzPL for 442 points.
.ctor :: RegEx Match :: (04:49:21) MalzPL's Prayer of Mending heals MalzPL for 442 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 442
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 442
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4286
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:21) MalzPL's Prayer of Mending heals MalzSent for 598 points.
.ctor :: (04:49:21) MalzPL's Prayer of Mending heals MalzSent for 598 points.
.ctor :: RegEx Match :: (04:49:21) MalzPL's Prayer of Mending heals MalzSent for 598 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 598
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 598
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4288
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:21) MalzPL's Prayer of Mending heals MalzDruid for 424 points.
.ctor :: (04:49:21) MalzPL's Prayer of Mending heals MalzDruid for 424 points.
.ctor :: RegEx Match :: (04:49:21) MalzPL's Prayer of Mending heals MalzDruid for 424 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 424
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 424
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4290
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:21) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:21) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:21) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4292
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:21) MalzDruid's Prayer of Mending heals MalzPL for 762 points.
.ctor :: (04:49:21) MalzDruid's Prayer of Mending heals MalzPL for 762 points.
.ctor :: RegEx Match :: (04:49:21) MalzDruid's Prayer of Mending heals MalzPL for 762 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 762
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 762
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4294
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:21) MalzDruid's Prayer of Mending heals you for 758 points.
.ctor :: (04:49:21) MalzDruid's Prayer of Mending heals you for 758 points.
.ctor :: RegEx Match :: (04:49:21) MalzDruid's Prayer of Mending heals you for 758 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 758
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 758
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4296
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:21) MalzDruid's Prayer of Mending heals MalzSent for 591 points.
.ctor :: (04:49:21) MalzDruid's Prayer of Mending heals MalzSent for 591 points.
.ctor :: RegEx Match :: (04:49:21) MalzDruid's Prayer of Mending heals MalzSent for 591 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 591
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 591
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4298
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:21) MalzDruid's Prayer of Mending heals MalzDruid for 379 points.
.ctor :: (04:49:21) MalzDruid's Prayer of Mending heals MalzDruid for 379 points.
.ctor :: RegEx Match :: (04:49:21) MalzDruid's Prayer of Mending heals MalzDruid for 379 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 379
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 379
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4300
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:21) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:21) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:21) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4302
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:21) MalzSent's Righteous Word of Binding smites Moss Ogre for 800 points of damage!
.ctor :: (04:49:21) MalzSent's Righteous Word of Binding smites Moss Ogre for 800 points of damage!
.ctor :: RegEx Match :: (04:49:21) MalzSent's Righteous Word of Binding smites Moss Ogre for 800 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 800
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 800
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4304
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:21) Moss Ogre's stun immunity has worn off.
.ctor :: (04:49:21) Moss Ogre's stun immunity has worn off.
ParseLine :: (04:49:21) You block the Moss Ogre's attack!
.ctor :: (04:49:21) You block the Moss Ogre's attack!
.ctor :: RegEx Match :: (04:49:21) You block the Moss Ogre's attack!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = You
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = block
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 16
.ctor :: RegEx Match :: RegExDesc  = You Block :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>block) (?<source>.*)'s .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4308
ParseLine :: AddCombatAction :: Target     = You
ParseLine :: AddCombatAction :: Value_Type = block
ParseLine :: (04:49:21) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:21) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:21) Moss Ogre no longer feels as vulnerable to holy magic.
.ctor :: (04:49:21) Moss Ogre no longer feels as vulnerable to holy magic.
ParseLine :: (04:49:21) MalzDruid casts Call Lightning.
.ctor :: (04:49:21) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:21) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4314
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:21) MalzDruid's Call Lightning shocks Moss Ogre for 702 points of damage!
.ctor :: (04:49:21) MalzDruid's Call Lightning shocks Moss Ogre for 702 points of damage!
.ctor :: RegEx Match :: (04:49:21) MalzDruid's Call Lightning shocks Moss Ogre for 702 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 702
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 702
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4316
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:21) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:21) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:21) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4318
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:21) MalzPL casts Prayer of Mending.
.ctor :: (04:49:21) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:21) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4320
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:21) MalzPL's Prayer of Mending heals MalzPL for 555 points.
.ctor :: (04:49:21) MalzPL's Prayer of Mending heals MalzPL for 555 points.
.ctor :: RegEx Match :: (04:49:21) MalzPL's Prayer of Mending heals MalzPL for 555 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 555
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 555
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4322
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:21) MalzPL's Prayer of Mending heals you for 387 points.
.ctor :: (04:49:21) MalzPL's Prayer of Mending heals you for 387 points.
.ctor :: RegEx Match :: (04:49:21) MalzPL's Prayer of Mending heals you for 387 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 387
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 387
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4324
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:21) MalzPL's Prayer of Mending heals MalzSent for 562 points.
.ctor :: (04:49:21) MalzPL's Prayer of Mending heals MalzSent for 562 points.
.ctor :: RegEx Match :: (04:49:21) MalzPL's Prayer of Mending heals MalzSent for 562 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 562
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 562
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4326
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:21) MalzPL's Prayer of Mending heals MalzDruid for 577 points.
.ctor :: (04:49:21) MalzPL's Prayer of Mending heals MalzDruid for 577 points.
.ctor :: RegEx Match :: (04:49:21) MalzPL's Prayer of Mending heals MalzDruid for 577 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 577
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 577
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4328
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:21) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:21) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:21) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4330
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:21) MalzDruid's Prayer of Mending heals MalzPL for 530 points.
.ctor :: (04:49:21) MalzDruid's Prayer of Mending heals MalzPL for 530 points.
.ctor :: RegEx Match :: (04:49:21) MalzDruid's Prayer of Mending heals MalzPL for 530 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 530
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 530
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4332
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:21) MalzDruid's Prayer of Mending heals you for 729 points.
.ctor :: (04:49:21) MalzDruid's Prayer of Mending heals you for 729 points.
.ctor :: RegEx Match :: (04:49:21) MalzDruid's Prayer of Mending heals you for 729 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 729
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 729
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4334
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:21) MalzDruid's Prayer of Mending heals MalzSent for 619 points.
.ctor :: (04:49:21) MalzDruid's Prayer of Mending heals MalzSent for 619 points.
.ctor :: RegEx Match :: (04:49:21) MalzDruid's Prayer of Mending heals MalzSent for 619 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 619
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 619
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4336
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:21) MalzDruid's Prayer of Mending heals MalzDruid for 692 points.
.ctor :: (04:49:21) MalzDruid's Prayer of Mending heals MalzDruid for 692 points.
.ctor :: RegEx Match :: (04:49:21) MalzDruid's Prayer of Mending heals MalzDruid for 692 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 692
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 692
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4338
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:21) MalzDruid casts Earthquake.
.ctor :: (04:49:21) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:21) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4340
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:21) MalzDruid's Earthquake hurts Moss Ogre for 1317 points of damage.
.ctor :: (04:49:21) MalzDruid's Earthquake hurts Moss Ogre for 1317 points of damage.
.ctor :: RegEx Match :: (04:49:21) MalzDruid's Earthquake hurts Moss Ogre for 1317 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1317
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1317
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4342
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:21) MalzDruid casts Earthquake.
.ctor :: (04:49:21) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:21) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4344
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:21) [Powers] Error: You are in the wrong mode.
.ctor :: (04:49:21) [Powers] Error: You are in the wrong mode.
ParseLine :: (04:49:21) MalzPL casts Call Lightning.
.ctor :: (04:49:21) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:21) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4348
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:21) MalzPL casts Call Lightning.
.ctor :: (04:49:21) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:21) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4350
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:21) Moss Ogre is stunned!
.ctor :: (04:49:21) Moss Ogre is stunned!
ParseLine :: (04:49:21) MalzPL hits the Moss Ogre for 27 points of damage.
.ctor :: (04:49:21) MalzPL hits the Moss Ogre for 27 points of damage.
.ctor :: RegEx Match :: (04:49:21) MalzPL hits the Moss Ogre for 27 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 27
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 27
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4354
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:21) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: (04:49:21) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: RegEx Match :: (04:49:21) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = HardC
.ctor :: RegEx Match :: Ability    = Challenge
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = attack
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 26
.ctor :: RegEx Match :: RegExDesc  = Taunt :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<target>.*) (?<type>[atck]*)s? (?<source>.*)
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = HardC
ParseLine :: AddCombatAction :: Ability    = Challenge
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4356
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = attack
ParseLine :: (04:49:21) MalzPL's Call Lightning shocks Moss Ogre for 703 points of damage!
.ctor :: (04:49:21) MalzPL's Call Lightning shocks Moss Ogre for 703 points of damage!
.ctor :: RegEx Match :: (04:49:21) MalzPL's Call Lightning shocks Moss Ogre for 703 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 703
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 703
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4358
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:21) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:21) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:21) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4360
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:21) Moss Ogre is no longer stunned.
.ctor :: (04:49:21) Moss Ogre is no longer stunned.
ParseLine :: (04:49:21) MalzPL hits the Moss Ogre for 36 points of damage.
.ctor :: (04:49:21) MalzPL hits the Moss Ogre for 36 points of damage.
.ctor :: RegEx Match :: (04:49:21) MalzPL hits the Moss Ogre for 36 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 36
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 36
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4364
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:21) MalzDruid assumes Offensive Stance.
.ctor :: (04:49:21) MalzDruid assumes Offensive Stance.
.ctor :: RegEx Match :: (04:49:21) MalzDruid assumes Offensive Stance.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Offensive Stance
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = assume
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 23
.ctor :: RegEx Match :: RegExDesc  = Use power -- assume :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>assume)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Offensive Stance
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4366
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = assume
ParseLine :: (04:49:21) The Moss Ogre misses MalzSent.
.ctor :: (04:49:21) The Moss Ogre misses MalzSent.
.ctor :: RegEx Match :: (04:49:21) The Moss Ogre misses MalzSent.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4368
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:21) MalzSent hits the Moss Ogre for 89 points of damage.
.ctor :: (04:49:21) MalzSent hits the Moss Ogre for 89 points of damage.
.ctor :: RegEx Match :: (04:49:21) MalzSent hits the Moss Ogre for 89 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 89
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 89
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4370
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:21) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:21) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:21) Moss Ogre no longer feels as vulnerable to holy magic.
.ctor :: (04:49:21) Moss Ogre no longer feels as vulnerable to holy magic.
ParseLine :: (04:49:21) Moss Ogre's stun immunity has worn off.
.ctor :: (04:49:21) Moss Ogre's stun immunity has worn off.
ParseLine :: (04:49:21) MalzPL hits the Moss Ogre for 31 points of damage.
.ctor :: (04:49:21) MalzPL hits the Moss Ogre for 31 points of damage.
.ctor :: RegEx Match :: (04:49:21) MalzPL hits the Moss Ogre for 31 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 31
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 31
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4378
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:21) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:21) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:21) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4380
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:21) MalzPL casts Prayer of Mending.
.ctor :: (04:49:21) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:21) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4382
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:21) MalzPL's Prayer of Mending heals MalzPL for 643 points.
.ctor :: (04:49:21) MalzPL's Prayer of Mending heals MalzPL for 643 points.
.ctor :: RegEx Match :: (04:49:21) MalzPL's Prayer of Mending heals MalzPL for 643 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 643
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 643
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4384
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:21) MalzPL's Prayer of Mending heals you for 474 points.
.ctor :: (04:49:21) MalzPL's Prayer of Mending heals you for 474 points.
.ctor :: RegEx Match :: (04:49:21) MalzPL's Prayer of Mending heals you for 474 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 474
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 474
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4386
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:21) MalzPL's Prayer of Mending heals MalzSent for 576 points.
.ctor :: (04:49:21) MalzPL's Prayer of Mending heals MalzSent for 576 points.
.ctor :: RegEx Match :: (04:49:21) MalzPL's Prayer of Mending heals MalzSent for 576 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 576
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 576
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4388
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:21) MalzPL's Prayer of Mending heals MalzDruid for 503 points.
.ctor :: (04:49:21) MalzPL's Prayer of Mending heals MalzDruid for 503 points.
.ctor :: RegEx Match :: (04:49:21) MalzPL's Prayer of Mending heals MalzDruid for 503 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 503
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 503
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4390
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:21) MalzDruid casts Blessing of the Grove.
.ctor :: (04:49:21) MalzDruid casts Blessing of the Grove.
.ctor :: RegEx Match :: (04:49:21) MalzDruid casts Blessing of the Grove.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:21
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Blessing of the Grove
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Blessing of the Grove
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:21
ParseLine :: AddCombatAction :: Time_Sorter= 4392
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:21) MalzDruid looks stronger and healthier!
.ctor :: (04:49:21) MalzDruid looks stronger and healthier!
ParseLine :: (04:49:21) MalzDruid looks stronger and healthier!
.ctor :: (04:49:21) MalzDruid looks stronger and healthier!
ParseLine :: (04:49:22) You parry the Moss Ogre's attack!
.ctor :: (04:49:22) You parry the Moss Ogre's attack!
.ctor :: RegEx Match :: (04:49:22) You parry the Moss Ogre's attack!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = You
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = parry
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 17
.ctor :: RegEx Match :: RegExDesc  = Parry :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>parr)[yies]+ (?<source>.*)'s .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4398
ParseLine :: AddCombatAction :: Target     = You
ParseLine :: AddCombatAction :: Value_Type = parry
ParseLine :: (04:49:22) MalzPL casts Earthquake.
.ctor :: (04:49:22) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:22) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4400
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:22) MalzPL's Earthquake hurts Moss Ogre for 1163 points of damage.
.ctor :: (04:49:22) MalzPL's Earthquake hurts Moss Ogre for 1163 points of damage.
.ctor :: RegEx Match :: (04:49:22) MalzPL's Earthquake hurts Moss Ogre for 1163 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1163
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1163
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4402
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:22) MalzPL casts Earthquake.
.ctor :: (04:49:22) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:22) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4404
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:22) MalzDruid casts Call Lightning.
.ctor :: (04:49:22) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:22) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4406
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:22) Moss Ogre is stunned!
.ctor :: (04:49:22) Moss Ogre is stunned!
ParseLine :: (04:49:22) MalzDruid's Call Lightning shocks Moss Ogre for 650 points of damage!
.ctor :: (04:49:22) MalzDruid's Call Lightning shocks Moss Ogre for 650 points of damage!
.ctor :: RegEx Match :: (04:49:22) MalzDruid's Call Lightning shocks Moss Ogre for 650 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 650
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 650
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4410
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:22) Moss Ogre is no longer stunned.
.ctor :: (04:49:22) Moss Ogre is no longer stunned.
ParseLine :: (04:49:22) MalzPL assumes Offensive Stance.
.ctor :: (04:49:22) MalzPL assumes Offensive Stance.
.ctor :: RegEx Match :: (04:49:22) MalzPL assumes Offensive Stance.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Offensive Stance
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = assume
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 23
.ctor :: RegEx Match :: RegExDesc  = Use power -- assume :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>assume)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Offensive Stance
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4414
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = assume
ParseLine :: (04:49:22) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:22) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:22) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4416
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:22) MalzDruid's Prayer of Mending heals MalzPL for 754 points.
.ctor :: (04:49:22) MalzDruid's Prayer of Mending heals MalzPL for 754 points.
.ctor :: RegEx Match :: (04:49:22) MalzDruid's Prayer of Mending heals MalzPL for 754 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 754
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 754
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4418
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:22) MalzDruid's Prayer of Mending heals you for 456 points.
.ctor :: (04:49:22) MalzDruid's Prayer of Mending heals you for 456 points.
.ctor :: RegEx Match :: (04:49:22) MalzDruid's Prayer of Mending heals you for 456 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 456
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 456
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4420
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:22) MalzDruid's Prayer of Mending heals MalzSent for 468 points.
.ctor :: (04:49:22) MalzDruid's Prayer of Mending heals MalzSent for 468 points.
.ctor :: RegEx Match :: (04:49:22) MalzDruid's Prayer of Mending heals MalzSent for 468 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 468
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 468
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4422
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:22) MalzDruid's Prayer of Mending heals MalzDruid for 564 points.
.ctor :: (04:49:22) MalzDruid's Prayer of Mending heals MalzDruid for 564 points.
.ctor :: RegEx Match :: (04:49:22) MalzDruid's Prayer of Mending heals MalzDruid for 564 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 564
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 564
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4424
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:22) You parry the Moss Ogre's attack!
.ctor :: (04:49:22) You parry the Moss Ogre's attack!
.ctor :: RegEx Match :: (04:49:22) You parry the Moss Ogre's attack!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = You
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = parry
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 17
.ctor :: RegEx Match :: RegExDesc  = Parry :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>parr)[yies]+ (?<source>.*)'s .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4426
ParseLine :: AddCombatAction :: Target     = You
ParseLine :: AddCombatAction :: Value_Type = parry
ParseLine :: (04:49:22) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:22) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:22) Moss Ogre's stun immunity has worn off.
.ctor :: (04:49:22) Moss Ogre's stun immunity has worn off.
ParseLine :: (04:49:22) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:22) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:22) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4432
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:22) MalzSent's Righteous Word of Binding smites Moss Ogre for 669 points of damage!
.ctor :: (04:49:22) MalzSent's Righteous Word of Binding smites Moss Ogre for 669 points of damage!
.ctor :: RegEx Match :: (04:49:22) MalzSent's Righteous Word of Binding smites Moss Ogre for 669 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 669
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 669
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4434
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:22) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:22) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:22) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4436
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:22) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:22) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:22) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4438
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:22) MalzSent's Righteous Word of Binding smites Mud Ogre for 567 points of damage!
.ctor :: (04:49:22) MalzSent's Righteous Word of Binding smites Mud Ogre for 567 points of damage!
.ctor :: RegEx Match :: (04:49:22) MalzSent's Righteous Word of Binding smites Mud Ogre for 567 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 567
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 567
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4440
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:22) MalzPL casts Blessing of the Grove.
.ctor :: (04:49:22) MalzPL casts Blessing of the Grove.
.ctor :: RegEx Match :: (04:49:22) MalzPL casts Blessing of the Grove.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Blessing of the Grove
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Blessing of the Grove
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4442
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:22) MalzPL looks stronger and healthier!
.ctor :: (04:49:22) MalzPL looks stronger and healthier!
ParseLine :: (04:49:22) MalzPL looks stronger and healthier!
.ctor :: (04:49:22) MalzPL looks stronger and healthier!
ParseLine :: (04:49:22) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:22) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:22) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4448
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:22) MalzSent drains 103 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: (04:49:22) MalzSent drains 103 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:22) MalzSent drains 103 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 103
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 103
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4450
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:22) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:22) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:22) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4452
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:22) MalzSent drains 147 points of mana from Mud Ogre with Exalted Word of Binding.
.ctor :: (04:49:22) MalzSent drains 147 points of mana from Mud Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:22) MalzSent drains 147 points of mana from Mud Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 147
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 147
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4454
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:22) Mud Ogre begins to stumble.
.ctor :: (04:49:22) Mud Ogre begins to stumble.
ParseLine :: (04:49:22) MalzDruid casts Earthquake.
.ctor :: (04:49:22) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:22) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4458
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:22) MalzDruid's Earthquake hurts Mud Ogre for 1035 points of damage.
.ctor :: (04:49:22) MalzDruid's Earthquake hurts Mud Ogre for 1035 points of damage.
.ctor :: RegEx Match :: (04:49:22) MalzDruid's Earthquake hurts Mud Ogre for 1035 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1035
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1035
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4460
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:22) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:22) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:22) Mud Ogre stops stumbling.
.ctor :: (04:49:22) Mud Ogre stops stumbling.
ParseLine :: (04:49:22) MalzPL casts Call Lightning.
.ctor :: (04:49:22) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:22) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4466
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:22) MalzPL's Call Lightning shocks Mud Ogre for 840 points of damage!
.ctor :: (04:49:22) MalzPL's Call Lightning shocks Mud Ogre for 840 points of damage!
.ctor :: RegEx Match :: (04:49:22) MalzPL's Call Lightning shocks Mud Ogre for 840 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 840
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 840
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4468
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:22) [Combat] Info: The Mud Ogre has died!
.ctor :: (04:49:22) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: (04:49:22) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4470
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:22) MalzPL casts Prayer of Mending.
.ctor :: (04:49:22) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:22) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4472
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:22) MalzPL's Prayer of Mending heals MalzPL for 671 points.
.ctor :: (04:49:22) MalzPL's Prayer of Mending heals MalzPL for 671 points.
.ctor :: RegEx Match :: (04:49:22) MalzPL's Prayer of Mending heals MalzPL for 671 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 671
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 671
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4474
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:22) MalzPL's Prayer of Mending heals you for 602 points.
.ctor :: (04:49:22) MalzPL's Prayer of Mending heals you for 602 points.
.ctor :: RegEx Match :: (04:49:22) MalzPL's Prayer of Mending heals you for 602 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 602
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 602
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4476
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:22) MalzPL's Prayer of Mending heals MalzSent for 707 points.
.ctor :: (04:49:22) MalzPL's Prayer of Mending heals MalzSent for 707 points.
.ctor :: RegEx Match :: (04:49:22) MalzPL's Prayer of Mending heals MalzSent for 707 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 707
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 707
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4478
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:22) MalzPL's Prayer of Mending heals MalzDruid for 570 points.
.ctor :: (04:49:22) MalzPL's Prayer of Mending heals MalzDruid for 570 points.
.ctor :: RegEx Match :: (04:49:22) MalzPL's Prayer of Mending heals MalzDruid for 570 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 570
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 570
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4480
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:22) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:22) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:22) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4482
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:22) MalzDruid's Prayer of Mending heals MalzPL for 722 points.
.ctor :: (04:49:22) MalzDruid's Prayer of Mending heals MalzPL for 722 points.
.ctor :: RegEx Match :: (04:49:22) MalzDruid's Prayer of Mending heals MalzPL for 722 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 722
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 722
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4484
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:22) MalzDruid's Prayer of Mending heals you for 525 points.
.ctor :: (04:49:22) MalzDruid's Prayer of Mending heals you for 525 points.
.ctor :: RegEx Match :: (04:49:22) MalzDruid's Prayer of Mending heals you for 525 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 525
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 525
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4486
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:22) MalzDruid's Prayer of Mending heals MalzSent for 453 points.
.ctor :: (04:49:22) MalzDruid's Prayer of Mending heals MalzSent for 453 points.
.ctor :: RegEx Match :: (04:49:22) MalzDruid's Prayer of Mending heals MalzSent for 453 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 453
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 453
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4488
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:22) MalzDruid's Prayer of Mending heals MalzDruid for 704 points.
.ctor :: (04:49:22) MalzDruid's Prayer of Mending heals MalzDruid for 704 points.
.ctor :: RegEx Match :: (04:49:22) MalzDruid's Prayer of Mending heals MalzDruid for 704 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 704
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 704
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4490
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:22) The Vorok Mud-Chief misses MalzSent.
.ctor :: (04:49:22) The Vorok Mud-Chief misses MalzSent.
.ctor :: RegEx Match :: (04:49:22) The Vorok Mud-Chief misses MalzSent.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = Vorok Mud-Chief
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4492
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:22) MalzSent hits the Vorok Mud-Chief for 203 points of damage.
.ctor :: (04:49:22) MalzSent hits the Vorok Mud-Chief for 203 points of damage.
.ctor :: RegEx Match :: (04:49:22) MalzSent hits the Vorok Mud-Chief for 203 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 203
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 203
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4494
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:22) MalzSent's holy weapon strikes Vorok Mud-Chief for 856 points of damage!
.ctor :: (04:49:22) MalzSent's holy weapon strikes Vorok Mud-Chief for 856 points of damage!
.ctor :: RegEx Match :: (04:49:22) MalzSent's holy weapon strikes Vorok Mud-Chief for 856 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = holy weapon
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 856
.ctor :: RegEx Match :: Value_Type = strike
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = holy weapon
ParseLine :: AddCombatAction :: Value      = 856
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4496
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = strike
ParseLine :: (04:49:22) MalzDruid casts Call Lightning.
.ctor :: (04:49:22) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:22) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4498
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:22) MalzDruid casts Call Lightning.
.ctor :: (04:49:22) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:22) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4500
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:22) Vorok Mud-Chief is stunned!
.ctor :: (04:49:22) Vorok Mud-Chief is stunned!
ParseLine :: (04:49:22) MalzDruid's Call Lightning shocks Vorok Mud-Chief for 737 points of damage!
.ctor :: (04:49:22) MalzDruid's Call Lightning shocks Vorok Mud-Chief for 737 points of damage!
.ctor :: RegEx Match :: (04:49:22) MalzDruid's Call Lightning shocks Vorok Mud-Chief for 737 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 737
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 737
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4504
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:22) MalzSent hits the Vorok Mud-Chief for 116 points of damage.
.ctor :: (04:49:22) MalzSent hits the Vorok Mud-Chief for 116 points of damage.
.ctor :: RegEx Match :: (04:49:22) MalzSent hits the Vorok Mud-Chief for 116 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 116
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 116
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4506
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:22) Vorok Mud-Chief is no longer stunned.
.ctor :: (04:49:22) Vorok Mud-Chief is no longer stunned.
ParseLine :: (04:49:22) MalzPL casts Prayer of Mending.
.ctor :: (04:49:22) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:22) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4510
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:22) MalzPL's Prayer of Mending heals MalzPL for 366 points.
.ctor :: (04:49:22) MalzPL's Prayer of Mending heals MalzPL for 366 points.
.ctor :: RegEx Match :: (04:49:22) MalzPL's Prayer of Mending heals MalzPL for 366 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 366
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 366
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4512
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:22) MalzPL's Prayer of Mending heals you for 785 points.
.ctor :: (04:49:22) MalzPL's Prayer of Mending heals you for 785 points.
.ctor :: RegEx Match :: (04:49:22) MalzPL's Prayer of Mending heals you for 785 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 785
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 785
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4514
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:22) MalzPL's Prayer of Mending heals MalzSent for 429 points.
.ctor :: (04:49:22) MalzPL's Prayer of Mending heals MalzSent for 429 points.
.ctor :: RegEx Match :: (04:49:22) MalzPL's Prayer of Mending heals MalzSent for 429 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 429
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 429
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4516
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:22) MalzPL's Prayer of Mending heals MalzDruid for 499 points.
.ctor :: (04:49:22) MalzPL's Prayer of Mending heals MalzDruid for 499 points.
.ctor :: RegEx Match :: (04:49:22) MalzPL's Prayer of Mending heals MalzDruid for 499 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 499
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 499
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4518
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:22) MalzSent hits the Vorok Mud-Chief for 154 points of damage.
.ctor :: (04:49:22) MalzSent hits the Vorok Mud-Chief for 154 points of damage.
.ctor :: RegEx Match :: (04:49:22) MalzSent hits the Vorok Mud-Chief for 154 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 154
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 154
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4520
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:22) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:22) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:22) Vorok Mud-Chief's stun immunity has worn off.
.ctor :: (04:49:22) Vorok Mud-Chief's stun immunity has worn off.
ParseLine :: (04:49:22) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:22) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:22) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:22
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:22
ParseLine :: AddCombatAction :: Time_Sorter= 4526
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:23) MalzSent's Righteous Word of Binding smites Vorok Mud-Chief for 546 points of damage!
.ctor :: (04:49:23) MalzSent's Righteous Word of Binding smites Vorok Mud-Chief for 546 points of damage!
.ctor :: RegEx Match :: (04:49:23) MalzSent's Righteous Word of Binding smites Vorok Mud-Chief for 546 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 546
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 546
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4528
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:23) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: (04:49:23) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: RegEx Match :: (04:49:23) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = Vorok Mud-Chief
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4530
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:23) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:23) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:23) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4532
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:23) [Combat] Info: The Mud Ogre attacks HardC
.ctor :: (04:49:23) [Combat] Info: The Mud Ogre attacks HardC
.ctor :: RegEx Match :: (04:49:23) [Combat] Info: The Mud Ogre attacks HardC
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = HardC
.ctor :: RegEx Match :: Ability    = Challenge
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = attack
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 26
.ctor :: RegEx Match :: RegExDesc  = Taunt :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<target>.*) (?<type>[atck]*)s? (?<source>.*)
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = HardC
ParseLine :: AddCombatAction :: Ability    = Challenge
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4534
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = attack
ParseLine :: (04:49:23) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:23) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:23) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4536
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:23) MalzDruid's Prayer of Mending heals MalzPL for 533 points.
.ctor :: (04:49:23) MalzDruid's Prayer of Mending heals MalzPL for 533 points.
.ctor :: RegEx Match :: (04:49:23) MalzDruid's Prayer of Mending heals MalzPL for 533 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 533
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 533
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4538
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:23) MalzDruid's Prayer of Mending heals you for 646 points.
.ctor :: (04:49:23) MalzDruid's Prayer of Mending heals you for 646 points.
.ctor :: RegEx Match :: (04:49:23) MalzDruid's Prayer of Mending heals you for 646 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 646
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 646
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4540
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:23) MalzDruid's Prayer of Mending heals MalzSent for 529 points.
.ctor :: (04:49:23) MalzDruid's Prayer of Mending heals MalzSent for 529 points.
.ctor :: RegEx Match :: (04:49:23) MalzDruid's Prayer of Mending heals MalzSent for 529 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 529
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 529
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4542
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:23) MalzDruid's Prayer of Mending heals MalzDruid for 672 points.
.ctor :: (04:49:23) MalzDruid's Prayer of Mending heals MalzDruid for 672 points.
.ctor :: RegEx Match :: (04:49:23) MalzDruid's Prayer of Mending heals MalzDruid for 672 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 672
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 672
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4544
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:23) The Mud Ogre misses YOU!
.ctor :: (04:49:23) The Mud Ogre misses YOU!
.ctor :: RegEx Match :: (04:49:23) The Mud Ogre misses YOU!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = YOU
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4546
ParseLine :: AddCombatAction :: Target     = YOU
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:23) MalzDruid casts Earthquake.
.ctor :: (04:49:23) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:23) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4548
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:23) MalzDruid's Earthquake hurts Mud Ogre for 1399 points of damage.
.ctor :: (04:49:23) MalzDruid's Earthquake hurts Mud Ogre for 1399 points of damage.
.ctor :: RegEx Match :: (04:49:23) MalzDruid's Earthquake hurts Mud Ogre for 1399 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1399
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1399
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4550
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:23) MalzDruid casts Earthquake.
.ctor :: (04:49:23) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:23) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4552
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:23) MalzPL casts Call Lightning.
.ctor :: (04:49:23) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:23) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4554
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:23) MalzPL casts Call Lightning.
.ctor :: (04:49:23) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:23) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4556
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:23) MalzPL's Call Lightning shocks Mud Ogre for 901 points of damage!
.ctor :: (04:49:23) MalzPL's Call Lightning shocks Mud Ogre for 901 points of damage!
.ctor :: RegEx Match :: (04:49:23) MalzPL's Call Lightning shocks Mud Ogre for 901 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 901
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 901
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4558
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:23) [Combat] Info: The Mud Ogre has died!
.ctor :: (04:49:23) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: (04:49:23) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4560
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:23) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:23) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:23) MalzPL casts Prayer of Mending.
.ctor :: (04:49:23) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:23) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4564
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:23) MalzPL's Prayer of Mending heals MalzPL for 777 points.
.ctor :: (04:49:23) MalzPL's Prayer of Mending heals MalzPL for 777 points.
.ctor :: RegEx Match :: (04:49:23) MalzPL's Prayer of Mending heals MalzPL for 777 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 777
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 777
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4566
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:23) MalzPL's Prayer of Mending heals you for 582 points.
.ctor :: (04:49:23) MalzPL's Prayer of Mending heals you for 582 points.
.ctor :: RegEx Match :: (04:49:23) MalzPL's Prayer of Mending heals you for 582 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 582
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 582
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4568
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:23) MalzPL's Prayer of Mending heals MalzSent for 676 points.
.ctor :: (04:49:23) MalzPL's Prayer of Mending heals MalzSent for 676 points.
.ctor :: RegEx Match :: (04:49:23) MalzPL's Prayer of Mending heals MalzSent for 676 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 676
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 676
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4570
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:23) MalzPL's Prayer of Mending heals MalzDruid for 455 points.
.ctor :: (04:49:23) MalzPL's Prayer of Mending heals MalzDruid for 455 points.
.ctor :: RegEx Match :: (04:49:23) MalzPL's Prayer of Mending heals MalzDruid for 455 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 455
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 455
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4572
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:23) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:23) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:23) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4574
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:23) MalzDruid's Prayer of Mending heals MalzPL for 670 points.
.ctor :: (04:49:23) MalzDruid's Prayer of Mending heals MalzPL for 670 points.
.ctor :: RegEx Match :: (04:49:23) MalzDruid's Prayer of Mending heals MalzPL for 670 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 670
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 670
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4576
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:23) MalzDruid's Prayer of Mending heals you for 598 points.
.ctor :: (04:49:23) MalzDruid's Prayer of Mending heals you for 598 points.
.ctor :: RegEx Match :: (04:49:23) MalzDruid's Prayer of Mending heals you for 598 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 598
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 598
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4578
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:23) MalzDruid's Prayer of Mending heals MalzSent for 527 points.
.ctor :: (04:49:23) MalzDruid's Prayer of Mending heals MalzSent for 527 points.
.ctor :: RegEx Match :: (04:49:23) MalzDruid's Prayer of Mending heals MalzSent for 527 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 527
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 527
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4580
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:23) MalzDruid's Prayer of Mending heals MalzDruid for 377 points.
.ctor :: (04:49:23) MalzDruid's Prayer of Mending heals MalzDruid for 377 points.
.ctor :: RegEx Match :: (04:49:23) MalzDruid's Prayer of Mending heals MalzDruid for 377 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 377
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 377
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4582
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:23) MalzDruid casts Call Lightning.
.ctor :: (04:49:23) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:23) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4584
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:23) MalzDruid casts Call Lightning.
.ctor :: (04:49:23) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:23) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4586
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:23) Moss Ogre is stunned!
.ctor :: (04:49:23) Moss Ogre is stunned!
ParseLine :: (04:49:23) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:23) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:23) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4590
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:23) MalzSent's Righteous Word of Binding smites Moss Ogre for 636 points of damage!
.ctor :: (04:49:23) MalzSent's Righteous Word of Binding smites Moss Ogre for 636 points of damage!
.ctor :: RegEx Match :: (04:49:23) MalzSent's Righteous Word of Binding smites Moss Ogre for 636 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 636
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 636
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4592
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:23) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:23) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:23) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4594
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:23) MalzDruid's Call Lightning shocks Moss Ogre for 826 points of damage!
.ctor :: (04:49:23) MalzDruid's Call Lightning shocks Moss Ogre for 826 points of damage!
.ctor :: RegEx Match :: (04:49:23) MalzDruid's Call Lightning shocks Moss Ogre for 826 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 826
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 826
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4596
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:23) Moss Ogre is no longer stunned.
.ctor :: (04:49:23) Moss Ogre is no longer stunned.
ParseLine :: (04:49:23) MalzPL casts Prayer of Mending.
.ctor :: (04:49:23) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:23) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4600
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:23) MalzPL's Prayer of Mending heals MalzPL for 590 points.
.ctor :: (04:49:23) MalzPL's Prayer of Mending heals MalzPL for 590 points.
.ctor :: RegEx Match :: (04:49:23) MalzPL's Prayer of Mending heals MalzPL for 590 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 590
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 590
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4602
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:23) MalzPL's Prayer of Mending heals you for 344 points.
.ctor :: (04:49:23) MalzPL's Prayer of Mending heals you for 344 points.
.ctor :: RegEx Match :: (04:49:23) MalzPL's Prayer of Mending heals you for 344 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 344
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 344
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4604
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:23) MalzPL's Prayer of Mending heals MalzSent for 415 points.
.ctor :: (04:49:23) MalzPL's Prayer of Mending heals MalzSent for 415 points.
.ctor :: RegEx Match :: (04:49:23) MalzPL's Prayer of Mending heals MalzSent for 415 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 415
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 415
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4606
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:23) MalzPL's Prayer of Mending heals MalzDruid for 706 points.
.ctor :: (04:49:23) MalzPL's Prayer of Mending heals MalzDruid for 706 points.
.ctor :: RegEx Match :: (04:49:23) MalzPL's Prayer of Mending heals MalzDruid for 706 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 706
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 706
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4608
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:23) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:23) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:23) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4610
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:23) MalzSent drains 104 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: (04:49:23) MalzSent drains 104 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:23) MalzSent drains 104 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 104
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 104
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4612
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:23) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:23) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:23) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4614
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:23) MalzSent drains 148 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: (04:49:23) MalzSent drains 148 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:23) MalzSent drains 148 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 148
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 148
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4616
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:23) Moss Ogre begins to stumble.
.ctor :: (04:49:23) Moss Ogre begins to stumble.
ParseLine :: (04:49:23) The Moss Ogre misses MalzPL.
.ctor :: (04:49:23) The Moss Ogre misses MalzPL.
.ctor :: RegEx Match :: (04:49:23) The Moss Ogre misses MalzPL.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4620
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:23) MalzPL hits the Moss Ogre for 36 points of damage.
.ctor :: (04:49:23) MalzPL hits the Moss Ogre for 36 points of damage.
.ctor :: RegEx Match :: (04:49:23) MalzPL hits the Moss Ogre for 36 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 36
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 36
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4622
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:23) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:23) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:23) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4624
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:23) MalzDruid's Prayer of Mending heals MalzPL for 539 points.
.ctor :: (04:49:23) MalzDruid's Prayer of Mending heals MalzPL for 539 points.
.ctor :: RegEx Match :: (04:49:23) MalzDruid's Prayer of Mending heals MalzPL for 539 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 539
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 539
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4626
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:23) MalzDruid's Prayer of Mending heals you for 583 points.
.ctor :: (04:49:23) MalzDruid's Prayer of Mending heals you for 583 points.
.ctor :: RegEx Match :: (04:49:23) MalzDruid's Prayer of Mending heals you for 583 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 583
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 583
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4628
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:23) MalzDruid's Prayer of Mending heals MalzSent for 347 points.
.ctor :: (04:49:23) MalzDruid's Prayer of Mending heals MalzSent for 347 points.
.ctor :: RegEx Match :: (04:49:23) MalzDruid's Prayer of Mending heals MalzSent for 347 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 347
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 347
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4630
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:23) MalzDruid's Prayer of Mending heals MalzDruid for 407 points.
.ctor :: (04:49:23) MalzDruid's Prayer of Mending heals MalzDruid for 407 points.
.ctor :: RegEx Match :: (04:49:23) MalzDruid's Prayer of Mending heals MalzDruid for 407 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 407
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 407
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4632
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:23) MalzPL hits the Moss Ogre for 35 points of damage.
.ctor :: (04:49:23) MalzPL hits the Moss Ogre for 35 points of damage.
.ctor :: RegEx Match :: (04:49:23) MalzPL hits the Moss Ogre for 35 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 35
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 35
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4634
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:23) Moss Ogre's stun immunity has worn off.
.ctor :: (04:49:23) Moss Ogre's stun immunity has worn off.
ParseLine :: (04:49:23) MalzPL hits the Moss Ogre for 33 points of damage.
.ctor :: (04:49:23) MalzPL hits the Moss Ogre for 33 points of damage.
.ctor :: RegEx Match :: (04:49:23) MalzPL hits the Moss Ogre for 33 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 33
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 33
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4638
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:23) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:23) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:23) Moss Ogre stops stumbling.
.ctor :: (04:49:23) Moss Ogre stops stumbling.
ParseLine :: (04:49:23) MalzPL casts Earthquake.
.ctor :: (04:49:23) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:23) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4644
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:23) MalzPL's Earthquake hurts Moss Ogre for 874 points of damage.
.ctor :: (04:49:23) MalzPL's Earthquake hurts Moss Ogre for 874 points of damage.
.ctor :: RegEx Match :: (04:49:23) MalzPL's Earthquake hurts Moss Ogre for 874 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 874
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 874
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4646
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:23) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:23) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:23) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4648
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:23) MalzPL casts Earthquake.
.ctor :: (04:49:23) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:23) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4650
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:23) MalzPL casts Prayer of Mending.
.ctor :: (04:49:23) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:23) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:23
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:23
ParseLine :: AddCombatAction :: Time_Sorter= 4652
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:24) MalzPL's Prayer of Mending heals MalzPL for 702 points.
.ctor :: (04:49:24) MalzPL's Prayer of Mending heals MalzPL for 702 points.
.ctor :: RegEx Match :: (04:49:24) MalzPL's Prayer of Mending heals MalzPL for 702 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 702
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 702
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4654
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:24) MalzPL's Prayer of Mending heals you for 460 points.
.ctor :: (04:49:24) MalzPL's Prayer of Mending heals you for 460 points.
.ctor :: RegEx Match :: (04:49:24) MalzPL's Prayer of Mending heals you for 460 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 460
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 460
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4656
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:24) MalzPL's Prayer of Mending heals MalzSent for 694 points.
.ctor :: (04:49:24) MalzPL's Prayer of Mending heals MalzSent for 694 points.
.ctor :: RegEx Match :: (04:49:24) MalzPL's Prayer of Mending heals MalzSent for 694 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 694
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 694
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4658
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:24) MalzPL's Prayer of Mending heals MalzDruid for 549 points.
.ctor :: (04:49:24) MalzPL's Prayer of Mending heals MalzDruid for 549 points.
.ctor :: RegEx Match :: (04:49:24) MalzPL's Prayer of Mending heals MalzDruid for 549 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 549
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 549
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4660
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:24) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:24) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:24) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4662
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:24) MalzDruid's Prayer of Mending heals MalzPL for 583 points.
.ctor :: (04:49:24) MalzDruid's Prayer of Mending heals MalzPL for 583 points.
.ctor :: RegEx Match :: (04:49:24) MalzDruid's Prayer of Mending heals MalzPL for 583 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 583
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 583
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4664
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:24) MalzDruid's Prayer of Mending heals you for 554 points.
.ctor :: (04:49:24) MalzDruid's Prayer of Mending heals you for 554 points.
.ctor :: RegEx Match :: (04:49:24) MalzDruid's Prayer of Mending heals you for 554 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 554
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 554
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4666
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:24) MalzDruid's Prayer of Mending heals MalzSent for 475 points.
.ctor :: (04:49:24) MalzDruid's Prayer of Mending heals MalzSent for 475 points.
.ctor :: RegEx Match :: (04:49:24) MalzDruid's Prayer of Mending heals MalzSent for 475 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 475
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 475
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4668
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:24) MalzDruid's Prayer of Mending heals MalzDruid for 409 points.
.ctor :: (04:49:24) MalzDruid's Prayer of Mending heals MalzDruid for 409 points.
.ctor :: RegEx Match :: (04:49:24) MalzDruid's Prayer of Mending heals MalzDruid for 409 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 409
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 409
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4670
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:24) The Moss Ogre misses MalzDruid.
.ctor :: (04:49:24) The Moss Ogre misses MalzDruid.
.ctor :: RegEx Match :: (04:49:24) The Moss Ogre misses MalzDruid.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4672
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:24) MalzDruid hits the Moss Ogre for 46 points of damage.
.ctor :: (04:49:24) MalzDruid hits the Moss Ogre for 46 points of damage.
.ctor :: RegEx Match :: (04:49:24) MalzDruid hits the Moss Ogre for 46 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 46
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 46
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4674
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:24) [Combat] Info: The Tavok Chief-brother attacks HardC
.ctor :: (04:49:24) [Combat] Info: The Tavok Chief-brother attacks HardC
.ctor :: RegEx Match :: (04:49:24) [Combat] Info: The Tavok Chief-brother attacks HardC
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = HardC
.ctor :: RegEx Match :: Ability    = Challenge
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = attack
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 26
.ctor :: RegEx Match :: RegExDesc  = Taunt :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<target>.*) (?<type>[atck]*)s? (?<source>.*)
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = HardC
ParseLine :: AddCombatAction :: Ability    = Challenge
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4676
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = attack
ParseLine :: (04:49:24) MalzPL casts Earthquake.
.ctor :: (04:49:24) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:24) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4678
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:24) MalzPL's Earthquake hurts Mud Ogre for 1139 points of damage.
.ctor :: (04:49:24) MalzPL's Earthquake hurts Mud Ogre for 1139 points of damage.
.ctor :: RegEx Match :: (04:49:24) MalzPL's Earthquake hurts Mud Ogre for 1139 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1139
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1139
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4680
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:24) MalzPL casts Earthquake.
.ctor :: (04:49:24) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:24) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4682
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:24) MalzPL's Earthquake hurts Moss Ogre for 1101 points of damage.
.ctor :: (04:49:24) MalzPL's Earthquake hurts Moss Ogre for 1101 points of damage.
.ctor :: RegEx Match :: (04:49:24) MalzPL's Earthquake hurts Moss Ogre for 1101 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1101
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1101
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4684
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:24) MalzDruid hits the Moss Ogre for 18 points of damage.
.ctor :: (04:49:24) MalzDruid hits the Moss Ogre for 18 points of damage.
.ctor :: RegEx Match :: (04:49:24) MalzDruid hits the Moss Ogre for 18 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 18
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 18
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4686
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:24) MalzDruid hits the Moss Ogre for 33 points of damage.
.ctor :: (04:49:24) MalzDruid hits the Moss Ogre for 33 points of damage.
.ctor :: RegEx Match :: (04:49:24) MalzDruid hits the Moss Ogre for 33 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 33
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 33
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4688
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:24) MalzDruid casts Earthquake.
.ctor :: (04:49:24) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:24) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4690
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:24) MalzDruid's Earthquake hurts Tavok Chief-brother for 995 points of damage.
.ctor :: (04:49:24) MalzDruid's Earthquake hurts Tavok Chief-brother for 995 points of damage.
.ctor :: RegEx Match :: (04:49:24) MalzDruid's Earthquake hurts Tavok Chief-brother for 995 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 995
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 995
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4692
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:24) MalzDruid casts Earthquake.
.ctor :: (04:49:24) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:24) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4694
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:24) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:24) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:24) MalzDruid's Earthquake hurts Mud Ogre for 1140 points of damage.
.ctor :: (04:49:24) MalzDruid's Earthquake hurts Mud Ogre for 1140 points of damage.
.ctor :: RegEx Match :: (04:49:24) MalzDruid's Earthquake hurts Mud Ogre for 1140 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1140
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1140
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4698
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:24) [Combat] Info: The Mud Ogre has died!
.ctor :: (04:49:24) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: (04:49:24) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4700
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:24) MalzDruid's Earthquake hurts Moss Ogre for 594 points of damage.
.ctor :: (04:49:24) MalzDruid's Earthquake hurts Moss Ogre for 594 points of damage.
.ctor :: RegEx Match :: (04:49:24) MalzDruid's Earthquake hurts Moss Ogre for 594 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 594
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 594
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4702
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:24) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:24) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:24) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4704
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:24) MalzSent's Righteous Word of Binding smites Tavok Chief-brother for 679 points of damage!
.ctor :: (04:49:24) MalzSent's Righteous Word of Binding smites Tavok Chief-brother for 679 points of damage!
.ctor :: RegEx Match :: (04:49:24) MalzSent's Righteous Word of Binding smites Tavok Chief-brother for 679 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 679
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 679
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4706
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:24) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:24) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:24) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4708
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:24) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:24) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:24) MalzSent's Righteous Word of Binding smites Moss Ogre for 686 points of damage!
.ctor :: (04:49:24) MalzSent's Righteous Word of Binding smites Moss Ogre for 686 points of damage!
.ctor :: RegEx Match :: (04:49:24) MalzSent's Righteous Word of Binding smites Moss Ogre for 686 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 686
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 686
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4712
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:24) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:24) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:24) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4714
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:24) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:24) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:24) MalzPL casts Call Lightning.
.ctor :: (04:49:24) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:24) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4718
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:24) MalzPL casts Call Lightning.
.ctor :: (04:49:24) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:24) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4720
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:24) MalzPL's Call Lightning shocks Tavok Chief-brother for 923 points of damage!
.ctor :: (04:49:24) MalzPL's Call Lightning shocks Tavok Chief-brother for 923 points of damage!
.ctor :: RegEx Match :: (04:49:24) MalzPL's Call Lightning shocks Tavok Chief-brother for 923 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 923
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 923
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4722
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:24) [Combat] Info: The Tavok Chief-brother has died!
.ctor :: (04:49:24) [Combat] Info: The Tavok Chief-brother has died!
.ctor :: RegEx Match :: (04:49:24) [Combat] Info: The Tavok Chief-brother has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = Tavok Chief-brother
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4724
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:24) MalzPL casts Prayer of Mending.
.ctor :: (04:49:24) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:24) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4726
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:24) MalzPL's Prayer of Mending heals MalzPL for 725 points.
.ctor :: (04:49:24) MalzPL's Prayer of Mending heals MalzPL for 725 points.
.ctor :: RegEx Match :: (04:49:24) MalzPL's Prayer of Mending heals MalzPL for 725 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 725
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 725
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4728
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:24) MalzPL's Prayer of Mending heals you for 633 points.
.ctor :: (04:49:24) MalzPL's Prayer of Mending heals you for 633 points.
.ctor :: RegEx Match :: (04:49:24) MalzPL's Prayer of Mending heals you for 633 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 633
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 633
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4730
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:24) MalzPL's Prayer of Mending heals MalzSent for 623 points.
.ctor :: (04:49:24) MalzPL's Prayer of Mending heals MalzSent for 623 points.
.ctor :: RegEx Match :: (04:49:24) MalzPL's Prayer of Mending heals MalzSent for 623 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 623
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 623
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4732
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:24) MalzPL's Prayer of Mending heals MalzDruid for 558 points.
.ctor :: (04:49:24) MalzPL's Prayer of Mending heals MalzDruid for 558 points.
.ctor :: RegEx Match :: (04:49:24) MalzPL's Prayer of Mending heals MalzDruid for 558 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 558
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 558
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4734
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:24) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:24) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:24) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4736
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:24) MalzDruid's Prayer of Mending heals MalzPL for 513 points.
.ctor :: (04:49:24) MalzDruid's Prayer of Mending heals MalzPL for 513 points.
.ctor :: RegEx Match :: (04:49:24) MalzDruid's Prayer of Mending heals MalzPL for 513 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 513
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 513
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4738
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:24) MalzDruid's Prayer of Mending heals you for 482 points.
.ctor :: (04:49:24) MalzDruid's Prayer of Mending heals you for 482 points.
.ctor :: RegEx Match :: (04:49:24) MalzDruid's Prayer of Mending heals you for 482 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 482
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 482
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4740
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:24) MalzDruid's Prayer of Mending heals MalzSent for 668 points.
.ctor :: (04:49:24) MalzDruid's Prayer of Mending heals MalzSent for 668 points.
.ctor :: RegEx Match :: (04:49:24) MalzDruid's Prayer of Mending heals MalzSent for 668 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 668
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 668
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4742
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:24) MalzDruid's Prayer of Mending heals MalzDruid for 744 points.
.ctor :: (04:49:24) MalzDruid's Prayer of Mending heals MalzDruid for 744 points.
.ctor :: RegEx Match :: (04:49:24) MalzDruid's Prayer of Mending heals MalzDruid for 744 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 744
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 744
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4744
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:24) MalzPL casts Prayer of Mending.
.ctor :: (04:49:24) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:24) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4746
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:24) MalzPL's Prayer of Mending heals MalzPL for 524 points.
.ctor :: (04:49:24) MalzPL's Prayer of Mending heals MalzPL for 524 points.
.ctor :: RegEx Match :: (04:49:24) MalzPL's Prayer of Mending heals MalzPL for 524 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 524
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 524
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4748
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:24) MalzPL's Prayer of Mending heals you for 577 points.
.ctor :: (04:49:24) MalzPL's Prayer of Mending heals you for 577 points.
.ctor :: RegEx Match :: (04:49:24) MalzPL's Prayer of Mending heals you for 577 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 577
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 577
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4750
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:24) MalzPL's Prayer of Mending heals MalzSent for 393 points.
.ctor :: (04:49:24) MalzPL's Prayer of Mending heals MalzSent for 393 points.
.ctor :: RegEx Match :: (04:49:24) MalzPL's Prayer of Mending heals MalzSent for 393 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 393
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 393
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4752
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:24) MalzPL's Prayer of Mending heals MalzDruid for 697 points.
.ctor :: (04:49:24) MalzPL's Prayer of Mending heals MalzDruid for 697 points.
.ctor :: RegEx Match :: (04:49:24) MalzPL's Prayer of Mending heals MalzDruid for 697 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 697
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 697
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4754
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:24) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: (04:49:24) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: RegEx Match :: (04:49:24) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = HardC
.ctor :: RegEx Match :: Ability    = Challenge
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = attack
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 26
.ctor :: RegEx Match :: RegExDesc  = Taunt :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<target>.*) (?<type>[atck]*)s? (?<source>.*)
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = HardC
ParseLine :: AddCombatAction :: Ability    = Challenge
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4756
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = attack
ParseLine :: (04:49:24) The Moss Ogre misses MalzPL.
.ctor :: (04:49:24) The Moss Ogre misses MalzPL.
.ctor :: RegEx Match :: (04:49:24) The Moss Ogre misses MalzPL.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4758
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:24) MalzPL hits the Moss Ogre for 41 points of damage.
.ctor :: (04:49:24) MalzPL hits the Moss Ogre for 41 points of damage.
.ctor :: RegEx Match :: (04:49:24) MalzPL hits the Moss Ogre for 41 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 41
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 41
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4760
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:24) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:24) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:24) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4762
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:24) MalzDruid's Prayer of Mending heals MalzPL for 593 points.
.ctor :: (04:49:24) MalzDruid's Prayer of Mending heals MalzPL for 593 points.
.ctor :: RegEx Match :: (04:49:24) MalzDruid's Prayer of Mending heals MalzPL for 593 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 593
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 593
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4764
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:24) MalzDruid's Prayer of Mending heals you for 791 points.
.ctor :: (04:49:24) MalzDruid's Prayer of Mending heals you for 791 points.
.ctor :: RegEx Match :: (04:49:24) MalzDruid's Prayer of Mending heals you for 791 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 791
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 791
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4766
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:24) MalzDruid's Prayer of Mending heals MalzSent for 593 points.
.ctor :: (04:49:24) MalzDruid's Prayer of Mending heals MalzSent for 593 points.
.ctor :: RegEx Match :: (04:49:24) MalzDruid's Prayer of Mending heals MalzSent for 593 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 593
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 593
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4768
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:24) MalzDruid's Prayer of Mending heals MalzDruid for 580 points.
.ctor :: (04:49:24) MalzDruid's Prayer of Mending heals MalzDruid for 580 points.
.ctor :: RegEx Match :: (04:49:24) MalzDruid's Prayer of Mending heals MalzDruid for 580 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 580
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 580
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4770
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:24) MalzPL hits the Moss Ogre for 29 points of damage.
.ctor :: (04:49:24) MalzPL hits the Moss Ogre for 29 points of damage.
.ctor :: RegEx Match :: (04:49:24) MalzPL hits the Moss Ogre for 29 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 29
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 29
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4772
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:24) MalzPL casts Earthquake.
.ctor :: (04:49:24) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:24) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4774
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:24) MalzPL's Earthquake hurts Moss Ogre for 1227 points of damage.
.ctor :: (04:49:24) MalzPL's Earthquake hurts Moss Ogre for 1227 points of damage.
.ctor :: RegEx Match :: (04:49:24) MalzPL's Earthquake hurts Moss Ogre for 1227 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1227
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1227
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4776
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:24) MalzPL casts Earthquake.
.ctor :: (04:49:24) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:24) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4778
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:24) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:24) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:24) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:24
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:24
ParseLine :: AddCombatAction :: Time_Sorter= 4780
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:25) MalzSent's Righteous Word of Binding smites Moss Ogre for 402 points of damage!
.ctor :: (04:49:25) MalzSent's Righteous Word of Binding smites Moss Ogre for 402 points of damage!
.ctor :: RegEx Match :: (04:49:25) MalzSent's Righteous Word of Binding smites Moss Ogre for 402 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 402
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 402
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4782
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:25) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:25) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:25) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4784
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:25) MalzPL hits the Moss Ogre for 20 points of damage.
.ctor :: (04:49:25) MalzPL hits the Moss Ogre for 20 points of damage.
.ctor :: RegEx Match :: (04:49:25) MalzPL hits the Moss Ogre for 20 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 20
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 20
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4786
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:25) The Moss Ogre misses MalzDruid.
.ctor :: (04:49:25) The Moss Ogre misses MalzDruid.
.ctor :: RegEx Match :: (04:49:25) The Moss Ogre misses MalzDruid.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4788
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:25) MalzDruid hits the Moss Ogre for 20 points of damage.
.ctor :: (04:49:25) MalzDruid hits the Moss Ogre for 20 points of damage.
.ctor :: RegEx Match :: (04:49:25) MalzDruid hits the Moss Ogre for 20 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 20
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 20
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4790
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:25) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:25) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:25) MalzDruid casts Earthquake.
.ctor :: (04:49:25) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:25) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4794
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:25) MalzDruid's Earthquake hurts Moss Ogre for 1063 points of damage.
.ctor :: (04:49:25) MalzDruid's Earthquake hurts Moss Ogre for 1063 points of damage.
.ctor :: RegEx Match :: (04:49:25) MalzDruid's Earthquake hurts Moss Ogre for 1063 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1063
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1063
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4796
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:25) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:25) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:25) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4798
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:25) MalzDruid casts Earthquake.
.ctor :: (04:49:25) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:25) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4800
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:25) MalzDruid's Earthquake hurts Moss Ogre for 707 points of damage.
.ctor :: (04:49:25) MalzDruid's Earthquake hurts Moss Ogre for 707 points of damage.
.ctor :: RegEx Match :: (04:49:25) MalzDruid's Earthquake hurts Moss Ogre for 707 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 707
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 707
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4802
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:25) MalzPL casts Call Lightning.
.ctor :: (04:49:25) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:25) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4804
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:25) MalzPL casts Call Lightning.
.ctor :: (04:49:25) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:25) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4806
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:25) Moss Ogre is stunned!
.ctor :: (04:49:25) Moss Ogre is stunned!
ParseLine :: (04:49:25) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:25) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:25) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4810
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:25) MalzSent drains 100 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: (04:49:25) MalzSent drains 100 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:25) MalzSent drains 100 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 100
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 100
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4812
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:25) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:25) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:25) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4814
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:25) MalzSent drains 143 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: (04:49:25) MalzSent drains 143 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:25) MalzSent drains 143 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 143
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 143
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4816
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:25) Moss Ogre begins to stumble.
.ctor :: (04:49:25) Moss Ogre begins to stumble.
ParseLine :: (04:49:25) MalzPL's Call Lightning shocks Moss Ogre for 812 points of damage!
.ctor :: (04:49:25) MalzPL's Call Lightning shocks Moss Ogre for 812 points of damage!
.ctor :: RegEx Match :: (04:49:25) MalzPL's Call Lightning shocks Moss Ogre for 812 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 812
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 812
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4820
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:25) Moss Ogre is no longer stunned.
.ctor :: (04:49:25) Moss Ogre is no longer stunned.
ParseLine :: (04:49:25) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:25) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:25) Moss Ogre's stun immunity has worn off.
.ctor :: (04:49:25) Moss Ogre's stun immunity has worn off.
ParseLine :: (04:49:25) Moss Ogre stops stumbling.
.ctor :: (04:49:25) Moss Ogre stops stumbling.
ParseLine :: (04:49:25) MalzDruid casts Call Lightning.
.ctor :: (04:49:25) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:25) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4830
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:25) MalzDruid casts Call Lightning.
.ctor :: (04:49:25) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:25) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4832
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:25) MalzDruid's Call Lightning shocks Moss Ogre for 872 points of damage!
.ctor :: (04:49:25) MalzDruid's Call Lightning shocks Moss Ogre for 872 points of damage!
.ctor :: RegEx Match :: (04:49:25) MalzDruid's Call Lightning shocks Moss Ogre for 872 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 872
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 872
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4834
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:25) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:25) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:25) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4836
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:25) MalzPL casts Prayer of Mending.
.ctor :: (04:49:25) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:25) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4838
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:25) MalzPL's Prayer of Mending heals MalzPL for 576 points.
.ctor :: (04:49:25) MalzPL's Prayer of Mending heals MalzPL for 576 points.
.ctor :: RegEx Match :: (04:49:25) MalzPL's Prayer of Mending heals MalzPL for 576 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 576
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 576
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4840
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:25) MalzPL's Prayer of Mending heals you for 594 points.
.ctor :: (04:49:25) MalzPL's Prayer of Mending heals you for 594 points.
.ctor :: RegEx Match :: (04:49:25) MalzPL's Prayer of Mending heals you for 594 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 594
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 594
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4842
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:25) MalzPL's Prayer of Mending heals MalzSent for 649 points.
.ctor :: (04:49:25) MalzPL's Prayer of Mending heals MalzSent for 649 points.
.ctor :: RegEx Match :: (04:49:25) MalzPL's Prayer of Mending heals MalzSent for 649 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 649
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 649
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4844
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:25) MalzPL's Prayer of Mending heals MalzDruid for 521 points.
.ctor :: (04:49:25) MalzPL's Prayer of Mending heals MalzDruid for 521 points.
.ctor :: RegEx Match :: (04:49:25) MalzPL's Prayer of Mending heals MalzDruid for 521 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 521
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 521
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4846
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:25) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:25) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:25) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4848
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:25) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:25) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:25) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4850
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:25) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:25) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:25) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4852
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:25) MalzDruid's Prayer of Mending heals MalzPL for 756 points.
.ctor :: (04:49:25) MalzDruid's Prayer of Mending heals MalzPL for 756 points.
.ctor :: RegEx Match :: (04:49:25) MalzDruid's Prayer of Mending heals MalzPL for 756 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 756
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 756
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4854
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:25) MalzDruid's Prayer of Mending heals you for 335 points.
.ctor :: (04:49:25) MalzDruid's Prayer of Mending heals you for 335 points.
.ctor :: RegEx Match :: (04:49:25) MalzDruid's Prayer of Mending heals you for 335 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 335
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 335
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4856
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:25) MalzDruid's Prayer of Mending heals MalzSent for 425 points.
.ctor :: (04:49:25) MalzDruid's Prayer of Mending heals MalzSent for 425 points.
.ctor :: RegEx Match :: (04:49:25) MalzDruid's Prayer of Mending heals MalzSent for 425 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 425
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 425
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4858
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:25) MalzDruid's Prayer of Mending heals MalzDruid for 837 points.
.ctor :: (04:49:25) MalzDruid's Prayer of Mending heals MalzDruid for 837 points.
.ctor :: RegEx Match :: (04:49:25) MalzDruid's Prayer of Mending heals MalzDruid for 837 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 837
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 837
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4860
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:25) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:25) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:25) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4862
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:25) MalzSent's Righteous Word of Binding smites Mud Ogre for 777 points of damage!
.ctor :: (04:49:25) MalzSent's Righteous Word of Binding smites Mud Ogre for 777 points of damage!
.ctor :: RegEx Match :: (04:49:25) MalzSent's Righteous Word of Binding smites Mud Ogre for 777 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 777
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 777
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4864
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:25) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:25) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:25) Mud Ogre no longer feels as vulnerable to holy magic.
.ctor :: (04:49:25) Mud Ogre no longer feels as vulnerable to holy magic.
ParseLine :: (04:49:25) MalzPL casts Earthquake.
.ctor :: (04:49:25) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:25) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4870
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:25) MalzPL's Earthquake hurts Mud Ogre for 1426 points of damage.
.ctor :: (04:49:25) MalzPL's Earthquake hurts Mud Ogre for 1426 points of damage.
.ctor :: RegEx Match :: (04:49:25) MalzPL's Earthquake hurts Mud Ogre for 1426 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1426
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1426
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4872
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:25) [Combat] Info: The Mud Ogre has died!
.ctor :: (04:49:25) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: (04:49:25) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4874
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:25) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: (04:49:25) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: RegEx Match :: (04:49:25) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = HardC
.ctor :: RegEx Match :: Ability    = Challenge
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = attack
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 26
.ctor :: RegEx Match :: RegExDesc  = Taunt :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<target>.*) (?<type>[atck]*)s? (?<source>.*)
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = HardC
ParseLine :: AddCombatAction :: Ability    = Challenge
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4876
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = attack
ParseLine :: (04:49:25) MalzPL casts Prayer of Mending.
.ctor :: (04:49:25) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:25) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4878
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:25) MalzPL's Prayer of Mending heals MalzPL for 755 points.
.ctor :: (04:49:25) MalzPL's Prayer of Mending heals MalzPL for 755 points.
.ctor :: RegEx Match :: (04:49:25) MalzPL's Prayer of Mending heals MalzPL for 755 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 755
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 755
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4880
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:25) MalzPL's Prayer of Mending heals you for 639 points.
.ctor :: (04:49:25) MalzPL's Prayer of Mending heals you for 639 points.
.ctor :: RegEx Match :: (04:49:25) MalzPL's Prayer of Mending heals you for 639 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 639
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 639
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4882
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:25) MalzPL's Prayer of Mending heals MalzSent for 603 points.
.ctor :: (04:49:25) MalzPL's Prayer of Mending heals MalzSent for 603 points.
.ctor :: RegEx Match :: (04:49:25) MalzPL's Prayer of Mending heals MalzSent for 603 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 603
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 603
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4884
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:25) MalzPL's Prayer of Mending heals MalzDruid for 570 points.
.ctor :: (04:49:25) MalzPL's Prayer of Mending heals MalzDruid for 570 points.
.ctor :: RegEx Match :: (04:49:25) MalzPL's Prayer of Mending heals MalzDruid for 570 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 570
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 570
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4886
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:25) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:25) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:25) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4888
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:25) MalzDruid's Prayer of Mending heals MalzPL for 656 points.
.ctor :: (04:49:25) MalzDruid's Prayer of Mending heals MalzPL for 656 points.
.ctor :: RegEx Match :: (04:49:25) MalzDruid's Prayer of Mending heals MalzPL for 656 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 656
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 656
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4890
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:25) MalzDruid's Prayer of Mending heals you for 564 points.
.ctor :: (04:49:25) MalzDruid's Prayer of Mending heals you for 564 points.
.ctor :: RegEx Match :: (04:49:25) MalzDruid's Prayer of Mending heals you for 564 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 564
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 564
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4892
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:25) MalzDruid's Prayer of Mending heals MalzSent for 579 points.
.ctor :: (04:49:25) MalzDruid's Prayer of Mending heals MalzSent for 579 points.
.ctor :: RegEx Match :: (04:49:25) MalzDruid's Prayer of Mending heals MalzSent for 579 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 579
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 579
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4894
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:25) MalzDruid's Prayer of Mending heals MalzDruid for 384 points.
.ctor :: (04:49:25) MalzDruid's Prayer of Mending heals MalzDruid for 384 points.
.ctor :: RegEx Match :: (04:49:25) MalzDruid's Prayer of Mending heals MalzDruid for 384 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 384
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 384
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4896
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:25) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:25) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:25) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4898
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:25) MalzSent's Righteous Word of Binding smites Moss Ogre for 838 points of damage!
.ctor :: (04:49:25) MalzSent's Righteous Word of Binding smites Moss Ogre for 838 points of damage!
.ctor :: RegEx Match :: (04:49:25) MalzSent's Righteous Word of Binding smites Moss Ogre for 838 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 838
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 838
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4900
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:25) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:25) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:25) MalzPL casts Earthquake.
.ctor :: (04:49:25) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:25) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4904
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:25) MalzPL's Earthquake hurts Moss Ogre for 1484 points of damage.
.ctor :: (04:49:25) MalzPL's Earthquake hurts Moss Ogre for 1484 points of damage.
.ctor :: RegEx Match :: (04:49:25) MalzPL's Earthquake hurts Moss Ogre for 1484 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1484
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1484
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4906
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:25) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:25) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:25) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:25
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:25
ParseLine :: AddCombatAction :: Time_Sorter= 4908
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:26) MalzPL casts Prayer of Mending.
.ctor :: (04:49:26) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:26) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4910
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:26) MalzPL's Prayer of Mending heals MalzPL for 461 points.
.ctor :: (04:49:26) MalzPL's Prayer of Mending heals MalzPL for 461 points.
.ctor :: RegEx Match :: (04:49:26) MalzPL's Prayer of Mending heals MalzPL for 461 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 461
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 461
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4912
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:26) MalzPL's Prayer of Mending heals you for 299 points.
.ctor :: (04:49:26) MalzPL's Prayer of Mending heals you for 299 points.
.ctor :: RegEx Match :: (04:49:26) MalzPL's Prayer of Mending heals you for 299 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 299
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 299
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4914
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:26) MalzPL's Prayer of Mending heals MalzSent for 408 points.
.ctor :: (04:49:26) MalzPL's Prayer of Mending heals MalzSent for 408 points.
.ctor :: RegEx Match :: (04:49:26) MalzPL's Prayer of Mending heals MalzSent for 408 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 408
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 408
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4916
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:26) MalzPL's Prayer of Mending heals MalzDruid for 322 points.
.ctor :: (04:49:26) MalzPL's Prayer of Mending heals MalzDruid for 322 points.
.ctor :: RegEx Match :: (04:49:26) MalzPL's Prayer of Mending heals MalzDruid for 322 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 322
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 322
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4918
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:26) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:26) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:26) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4920
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:26) MalzDruid's Prayer of Mending heals MalzPL for 570 points.
.ctor :: (04:49:26) MalzDruid's Prayer of Mending heals MalzPL for 570 points.
.ctor :: RegEx Match :: (04:49:26) MalzDruid's Prayer of Mending heals MalzPL for 570 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 570
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 570
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4922
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:26) MalzDruid's Prayer of Mending heals you for 535 points.
.ctor :: (04:49:26) MalzDruid's Prayer of Mending heals you for 535 points.
.ctor :: RegEx Match :: (04:49:26) MalzDruid's Prayer of Mending heals you for 535 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 535
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 535
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4924
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:26) MalzDruid's Prayer of Mending heals MalzSent for 721 points.
.ctor :: (04:49:26) MalzDruid's Prayer of Mending heals MalzSent for 721 points.
.ctor :: RegEx Match :: (04:49:26) MalzDruid's Prayer of Mending heals MalzSent for 721 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 721
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 721
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4926
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:26) MalzDruid's Prayer of Mending heals MalzDruid for 563 points.
.ctor :: (04:49:26) MalzDruid's Prayer of Mending heals MalzDruid for 563 points.
.ctor :: RegEx Match :: (04:49:26) MalzDruid's Prayer of Mending heals MalzDruid for 563 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 563
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 563
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4928
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:26) [Combat] Info: The Vorok Mud-Chief attacks HardC
.ctor :: (04:49:26) [Combat] Info: The Vorok Mud-Chief attacks HardC
.ctor :: RegEx Match :: (04:49:26) [Combat] Info: The Vorok Mud-Chief attacks HardC
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = HardC
.ctor :: RegEx Match :: Ability    = Challenge
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = attack
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 26
.ctor :: RegEx Match :: RegExDesc  = Taunt :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<target>.*) (?<type>[atck]*)s? (?<source>.*)
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = HardC
ParseLine :: AddCombatAction :: Ability    = Challenge
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4930
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = attack
ParseLine :: (04:49:26) MalzDruid casts Earthquake.
.ctor :: (04:49:26) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:26) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4932
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:26) MalzDruid's Earthquake hurts Vorok Mud-Chief for 884 points of damage.
.ctor :: (04:49:26) MalzDruid's Earthquake hurts Vorok Mud-Chief for 884 points of damage.
.ctor :: RegEx Match :: (04:49:26) MalzDruid's Earthquake hurts Vorok Mud-Chief for 884 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 884
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 884
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4934
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:26) MalzDruid casts Earthquake.
.ctor :: (04:49:26) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:26) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4936
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:26) MalzPL casts Call Lightning.
.ctor :: (04:49:26) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:26) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4938
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:26) MalzPL casts Call Lightning.
.ctor :: (04:49:26) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:26) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4940
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:26) Vorok Mud-Chief is stunned!
.ctor :: (04:49:26) Vorok Mud-Chief is stunned!
ParseLine :: (04:49:26) MalzPL casts Call Lightning.
.ctor :: (04:49:26) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:26) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4944
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:26) MalzPL's Call Lightning shocks Vorok Mud-Chief for 596 points of damage!
.ctor :: (04:49:26) MalzPL's Call Lightning shocks Vorok Mud-Chief for 596 points of damage!
.ctor :: RegEx Match :: (04:49:26) MalzPL's Call Lightning shocks Vorok Mud-Chief for 596 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 596
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 596
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4946
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:26) Vorok Mud-Chief is no longer stunned.
.ctor :: (04:49:26) Vorok Mud-Chief is no longer stunned.
ParseLine :: (04:49:26) MalzDruid casts Call Lightning.
.ctor :: (04:49:26) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:26) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4950
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:26) The Vorok Mud-Chief misses YOU!
.ctor :: (04:49:26) The Vorok Mud-Chief misses YOU!
.ctor :: RegEx Match :: (04:49:26) The Vorok Mud-Chief misses YOU!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = Vorok Mud-Chief
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = YOU
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4952
ParseLine :: AddCombatAction :: Target     = YOU
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:26) MalzPL casts Prayer of Mending.
.ctor :: (04:49:26) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:26) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4954
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:26) MalzPL's Prayer of Mending heals you for 555 points.
.ctor :: (04:49:26) MalzPL's Prayer of Mending heals you for 555 points.
.ctor :: RegEx Match :: (04:49:26) MalzPL's Prayer of Mending heals you for 555 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 555
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 555
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4956
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:26) MalzPL's Prayer of Mending heals MalzPL for 510 points.
.ctor :: (04:49:26) MalzPL's Prayer of Mending heals MalzPL for 510 points.
.ctor :: RegEx Match :: (04:49:26) MalzPL's Prayer of Mending heals MalzPL for 510 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 510
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 510
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4958
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:26) MalzPL's Prayer of Mending heals MalzSent for 424 points.
.ctor :: (04:49:26) MalzPL's Prayer of Mending heals MalzSent for 424 points.
.ctor :: RegEx Match :: (04:49:26) MalzPL's Prayer of Mending heals MalzSent for 424 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 424
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 424
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4960
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:26) MalzPL's Prayer of Mending heals MalzDruid for 426 points.
.ctor :: (04:49:26) MalzPL's Prayer of Mending heals MalzDruid for 426 points.
.ctor :: RegEx Match :: (04:49:26) MalzPL's Prayer of Mending heals MalzDruid for 426 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 426
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 426
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4962
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:26) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:26) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:26) Vorok Mud-Chief's stun immunity has worn off.
.ctor :: (04:49:26) Vorok Mud-Chief's stun immunity has worn off.
ParseLine :: (04:49:26) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:26) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:26) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4968
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:26) MalzSent's Righteous Word of Binding smites Vorok Mud-Chief for 758 points of damage!
.ctor :: (04:49:26) MalzSent's Righteous Word of Binding smites Vorok Mud-Chief for 758 points of damage!
.ctor :: RegEx Match :: (04:49:26) MalzSent's Righteous Word of Binding smites Vorok Mud-Chief for 758 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 758
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 758
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4970
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:26) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: (04:49:26) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: RegEx Match :: (04:49:26) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = Vorok Mud-Chief
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4972
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:26) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:26) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:26) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4974
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:26) Mud Ogre's Earthquake hurts you for 254 points of damage.
.ctor :: (04:49:26) Mud Ogre's Earthquake hurts you for 254 points of damage.
.ctor :: RegEx Match :: (04:49:26) Mud Ogre's Earthquake hurts you for 254 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 254
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 254
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4976
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:26) Mud Ogre's Earthquake hurts MalzPL for 713 points of damage.
.ctor :: (04:49:26) Mud Ogre's Earthquake hurts MalzPL for 713 points of damage.
.ctor :: RegEx Match :: (04:49:26) Mud Ogre's Earthquake hurts MalzPL for 713 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 713
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 713
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4978
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:26) Mud Ogre's Earthquake hurts MalzSent for 379 points of damage.
.ctor :: (04:49:26) Mud Ogre's Earthquake hurts MalzSent for 379 points of damage.
.ctor :: RegEx Match :: (04:49:26) Mud Ogre's Earthquake hurts MalzSent for 379 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 379
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 379
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4980
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:26) Mud Ogre's Earthquake hurts MalzDruid for 607 points of damage.
.ctor :: (04:49:26) Mud Ogre's Earthquake hurts MalzDruid for 607 points of damage.
.ctor :: RegEx Match :: (04:49:26) Mud Ogre's Earthquake hurts MalzDruid for 607 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 607
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 607
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4982
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:26) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:26) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:26) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4984
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:26) MalzDruid's Prayer of Mending heals MalzPL for 665 points.
.ctor :: (04:49:26) MalzDruid's Prayer of Mending heals MalzPL for 665 points.
.ctor :: RegEx Match :: (04:49:26) MalzDruid's Prayer of Mending heals MalzPL for 665 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 665
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 665
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4986
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:26) MalzDruid's Prayer of Mending heals you for 478 points.
.ctor :: (04:49:26) MalzDruid's Prayer of Mending heals you for 478 points.
.ctor :: RegEx Match :: (04:49:26) MalzDruid's Prayer of Mending heals you for 478 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 478
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 478
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4988
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:26) MalzDruid's Prayer of Mending heals MalzSent for 651 points.
.ctor :: (04:49:26) MalzDruid's Prayer of Mending heals MalzSent for 651 points.
.ctor :: RegEx Match :: (04:49:26) MalzDruid's Prayer of Mending heals MalzSent for 651 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 651
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 651
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4990
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:26) MalzDruid's Prayer of Mending heals MalzDruid for 533 points.
.ctor :: (04:49:26) MalzDruid's Prayer of Mending heals MalzDruid for 533 points.
.ctor :: RegEx Match :: (04:49:26) MalzDruid's Prayer of Mending heals MalzDruid for 533 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 533
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 533
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4992
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:26) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:26) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:26) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4994
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:26) MalzSent drains 100 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: (04:49:26) MalzSent drains 100 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:26) MalzSent drains 100 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 100
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 100
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4996
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:26) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:26) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:26) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 4998
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:26) MalzSent drains 144 points of mana from Mud Ogre with Exalted Word of Binding.
.ctor :: (04:49:26) MalzSent drains 144 points of mana from Mud Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:26) MalzSent drains 144 points of mana from Mud Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 144
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 144
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 5000
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:26) Mud Ogre begins to stumble.
.ctor :: (04:49:26) Mud Ogre begins to stumble.
ParseLine :: (04:49:26) MalzPL casts Earthquake.
.ctor :: (04:49:26) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:26) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 5004
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:26) MalzPL's Earthquake hurts Mud Ogre for 1538 points of damage.
.ctor :: (04:49:26) MalzPL's Earthquake hurts Mud Ogre for 1538 points of damage.
.ctor :: RegEx Match :: (04:49:26) MalzPL's Earthquake hurts Mud Ogre for 1538 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1538
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1538
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 5006
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:26) MalzPL casts Earthquake.
.ctor :: (04:49:26) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:26) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 5008
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:26) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:26) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:26) Mud Ogre stops stumbling.
.ctor :: (04:49:26) Mud Ogre stops stumbling.
ParseLine :: (04:49:26) MalzDruid casts Earthquake.
.ctor :: (04:49:26) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:26) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 5014
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:26) MalzDruid's Earthquake hurts Mud Ogre for 1291 points of damage.
.ctor :: (04:49:26) MalzDruid's Earthquake hurts Mud Ogre for 1291 points of damage.
.ctor :: RegEx Match :: (04:49:26) MalzDruid's Earthquake hurts Mud Ogre for 1291 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1291
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1291
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 5016
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:26) [Combat] Info: The Mud Ogre has died!
.ctor :: (04:49:26) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: (04:49:26) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 5018
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:26) MalzDruid casts Call Lightning.
.ctor :: (04:49:26) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:26) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 5020
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:26) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:26) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:26) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 5022
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:26) MalzSent's Righteous Word of Binding smites Moss Ogre for 469 points of damage!
.ctor :: (04:49:26) MalzSent's Righteous Word of Binding smites Moss Ogre for 469 points of damage!
.ctor :: RegEx Match :: (04:49:26) MalzSent's Righteous Word of Binding smites Moss Ogre for 469 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 469
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 469
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 5024
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:26) MalzPL casts Prayer of Mending.
.ctor :: (04:49:26) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:26) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 5026
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:26) MalzPL's Prayer of Mending heals you for 577 points.
.ctor :: (04:49:26) MalzPL's Prayer of Mending heals you for 577 points.
.ctor :: RegEx Match :: (04:49:26) MalzPL's Prayer of Mending heals you for 577 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 577
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 577
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 5028
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:26) MalzPL's Prayer of Mending heals MalzPL for 489 points.
.ctor :: (04:49:26) MalzPL's Prayer of Mending heals MalzPL for 489 points.
.ctor :: RegEx Match :: (04:49:26) MalzPL's Prayer of Mending heals MalzPL for 489 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 489
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 489
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 5030
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:26) MalzPL's Prayer of Mending heals MalzSent for 577 points.
.ctor :: (04:49:26) MalzPL's Prayer of Mending heals MalzSent for 577 points.
.ctor :: RegEx Match :: (04:49:26) MalzPL's Prayer of Mending heals MalzSent for 577 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 577
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 577
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 5032
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:26) MalzPL's Prayer of Mending heals MalzDruid for 448 points.
.ctor :: (04:49:26) MalzPL's Prayer of Mending heals MalzDruid for 448 points.
.ctor :: RegEx Match :: (04:49:26) MalzPL's Prayer of Mending heals MalzDruid for 448 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 448
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 448
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 5034
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:26) The Moss Ogre misses MalzPL.
.ctor :: (04:49:26) The Moss Ogre misses MalzPL.
.ctor :: RegEx Match :: (04:49:26) The Moss Ogre misses MalzPL.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:26
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:26
ParseLine :: AddCombatAction :: Time_Sorter= 5036
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:27) MalzPL hits the Moss Ogre for 28 points of damage.
.ctor :: (04:49:27) MalzPL hits the Moss Ogre for 28 points of damage.
.ctor :: RegEx Match :: (04:49:27) MalzPL hits the Moss Ogre for 28 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 28
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 28
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5038
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:27) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:27) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:27) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5040
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:27) MalzDruid's Prayer of Mending heals you for 481 points.
.ctor :: (04:49:27) MalzDruid's Prayer of Mending heals you for 481 points.
.ctor :: RegEx Match :: (04:49:27) MalzDruid's Prayer of Mending heals you for 481 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 481
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 481
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5042
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:27) MalzDruid's Prayer of Mending heals MalzPL for 392 points.
.ctor :: (04:49:27) MalzDruid's Prayer of Mending heals MalzPL for 392 points.
.ctor :: RegEx Match :: (04:49:27) MalzDruid's Prayer of Mending heals MalzPL for 392 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 392
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 392
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5044
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:27) MalzDruid's Prayer of Mending heals MalzSent for 766 points.
.ctor :: (04:49:27) MalzDruid's Prayer of Mending heals MalzSent for 766 points.
.ctor :: RegEx Match :: (04:49:27) MalzDruid's Prayer of Mending heals MalzSent for 766 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 766
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 766
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5046
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:27) MalzDruid's Prayer of Mending heals MalzDruid for 615 points.
.ctor :: (04:49:27) MalzDruid's Prayer of Mending heals MalzDruid for 615 points.
.ctor :: RegEx Match :: (04:49:27) MalzDruid's Prayer of Mending heals MalzDruid for 615 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 615
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 615
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5048
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:27) MalzPL hits the Moss Ogre for 34 points of damage.
.ctor :: (04:49:27) MalzPL hits the Moss Ogre for 34 points of damage.
.ctor :: RegEx Match :: (04:49:27) MalzPL hits the Moss Ogre for 34 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 34
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 34
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5050
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:27) MalzPL casts Earthquake.
.ctor :: (04:49:27) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:27) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5052
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:27) MalzPL's Earthquake hurts Moss Ogre for 1339 points of damage.
.ctor :: (04:49:27) MalzPL's Earthquake hurts Moss Ogre for 1339 points of damage.
.ctor :: RegEx Match :: (04:49:27) MalzPL's Earthquake hurts Moss Ogre for 1339 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1339
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1339
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5054
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:27) MalzPL hits the Moss Ogre for 33 points of damage.
.ctor :: (04:49:27) MalzPL hits the Moss Ogre for 33 points of damage.
.ctor :: RegEx Match :: (04:49:27) MalzPL hits the Moss Ogre for 33 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 33
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 33
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5056
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:27) MalzPL hits the Moss Ogre for 31 points of damage.
.ctor :: (04:49:27) MalzPL hits the Moss Ogre for 31 points of damage.
.ctor :: RegEx Match :: (04:49:27) MalzPL hits the Moss Ogre for 31 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 31
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 31
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5058
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:27) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:27) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:27) MalzDruid casts Earthquake.
.ctor :: (04:49:27) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:27) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5062
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:27) MalzDruid's Earthquake hurts Moss Ogre for 713 points of damage.
.ctor :: (04:49:27) MalzDruid's Earthquake hurts Moss Ogre for 713 points of damage.
.ctor :: RegEx Match :: (04:49:27) MalzDruid's Earthquake hurts Moss Ogre for 713 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 713
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 713
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5064
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:27) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:27) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:27) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5066
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:27) MalzPL casts Prayer of Mending.
.ctor :: (04:49:27) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:27) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5068
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:27) MalzPL's Prayer of Mending heals MalzPL for 656 points.
.ctor :: (04:49:27) MalzPL's Prayer of Mending heals MalzPL for 656 points.
.ctor :: RegEx Match :: (04:49:27) MalzPL's Prayer of Mending heals MalzPL for 656 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 656
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 656
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5070
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:27) MalzPL's Prayer of Mending heals you for 797 points.
.ctor :: (04:49:27) MalzPL's Prayer of Mending heals you for 797 points.
.ctor :: RegEx Match :: (04:49:27) MalzPL's Prayer of Mending heals you for 797 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 797
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 797
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5072
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:27) MalzPL's Prayer of Mending heals MalzSent for 401 points.
.ctor :: (04:49:27) MalzPL's Prayer of Mending heals MalzSent for 401 points.
.ctor :: RegEx Match :: (04:49:27) MalzPL's Prayer of Mending heals MalzSent for 401 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 401
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 401
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5074
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:27) MalzPL's Prayer of Mending heals MalzDruid for 630 points.
.ctor :: (04:49:27) MalzPL's Prayer of Mending heals MalzDruid for 630 points.
.ctor :: RegEx Match :: (04:49:27) MalzPL's Prayer of Mending heals MalzDruid for 630 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 630
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 630
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5076
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:27) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:27) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:27) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5078
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:27) MalzDruid's Prayer of Mending heals you for 522 points.
.ctor :: (04:49:27) MalzDruid's Prayer of Mending heals you for 522 points.
.ctor :: RegEx Match :: (04:49:27) MalzDruid's Prayer of Mending heals you for 522 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 522
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 522
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5080
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:27) MalzDruid's Prayer of Mending heals MalzPL for 463 points.
.ctor :: (04:49:27) MalzDruid's Prayer of Mending heals MalzPL for 463 points.
.ctor :: RegEx Match :: (04:49:27) MalzDruid's Prayer of Mending heals MalzPL for 463 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 463
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 463
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5082
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:27) MalzDruid's Prayer of Mending heals MalzSent for 514 points.
.ctor :: (04:49:27) MalzDruid's Prayer of Mending heals MalzSent for 514 points.
.ctor :: RegEx Match :: (04:49:27) MalzDruid's Prayer of Mending heals MalzSent for 514 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 514
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 514
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5084
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:27) MalzDruid's Prayer of Mending heals MalzDruid for 485 points.
.ctor :: (04:49:27) MalzDruid's Prayer of Mending heals MalzDruid for 485 points.
.ctor :: RegEx Match :: (04:49:27) MalzDruid's Prayer of Mending heals MalzDruid for 485 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 485
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 485
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5086
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:27) MalzPL casts Earthquake.
.ctor :: (04:49:27) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:27) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5088
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:27) MalzPL's Earthquake hurts Mud Ogre for 1304 points of damage.
.ctor :: (04:49:27) MalzPL's Earthquake hurts Mud Ogre for 1304 points of damage.
.ctor :: RegEx Match :: (04:49:27) MalzPL's Earthquake hurts Mud Ogre for 1304 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1304
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1304
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5090
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:27) MalzPL's Earthquake hurts Moss Ogre for 1533 points of damage.
.ctor :: (04:49:27) MalzPL's Earthquake hurts Moss Ogre for 1533 points of damage.
.ctor :: RegEx Match :: (04:49:27) MalzPL's Earthquake hurts Moss Ogre for 1533 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1533
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1533
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5092
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:27) The Mud Ogre misses MalzDruid.
.ctor :: (04:49:27) The Mud Ogre misses MalzDruid.
.ctor :: RegEx Match :: (04:49:27) The Mud Ogre misses MalzDruid.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5094
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:27) MalzDruid hits the Mud Ogre for 32 points of damage.
.ctor :: (04:49:27) MalzDruid hits the Mud Ogre for 32 points of damage.
.ctor :: RegEx Match :: (04:49:27) MalzDruid hits the Mud Ogre for 32 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 32
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 32
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5096
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:27) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:27) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:27) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5098
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:27) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:27) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:27) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5100
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:27) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:27) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:27) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5102
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:27) The Moss Ogre misses MalzSent.
.ctor :: (04:49:27) The Moss Ogre misses MalzSent.
.ctor :: RegEx Match :: (04:49:27) The Moss Ogre misses MalzSent.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5104
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:27) MalzSent hits the Moss Ogre for 154 points of damage.
.ctor :: (04:49:27) MalzSent hits the Moss Ogre for 154 points of damage.
.ctor :: RegEx Match :: (04:49:27) MalzSent hits the Moss Ogre for 154 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 154
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 154
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5106
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:27) MalzDruid hits the Mud Ogre for 36 points of damage.
.ctor :: (04:49:27) MalzDruid hits the Mud Ogre for 36 points of damage.
.ctor :: RegEx Match :: (04:49:27) MalzDruid hits the Mud Ogre for 36 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 36
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 36
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5108
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:27) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:27) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:27) Mud Ogre no longer feels as vulnerable to holy magic.
.ctor :: (04:49:27) Mud Ogre no longer feels as vulnerable to holy magic.
ParseLine :: (04:49:27) MalzDruid casts Earthquake.
.ctor :: (04:49:27) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:27) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5114
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:27) MalzDruid's Earthquake hurts Mud Ogre for 942 points of damage.
.ctor :: (04:49:27) MalzDruid's Earthquake hurts Mud Ogre for 942 points of damage.
.ctor :: RegEx Match :: (04:49:27) MalzDruid's Earthquake hurts Mud Ogre for 942 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 942
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 942
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5116
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:27) [Combat] Info: The Mud Ogre has died!
.ctor :: (04:49:27) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: (04:49:27) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5118
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:27) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:27) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:27) Moss Ogre no longer feels as vulnerable to holy magic.
.ctor :: (04:49:27) Moss Ogre no longer feels as vulnerable to holy magic.
ParseLine :: (04:49:27) MalzDruid's Earthquake hurts Moss Ogre for 1320 points of damage.
.ctor :: (04:49:27) MalzDruid's Earthquake hurts Moss Ogre for 1320 points of damage.
.ctor :: RegEx Match :: (04:49:27) MalzDruid's Earthquake hurts Moss Ogre for 1320 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1320
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1320
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5124
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:27) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:27) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:27) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5126
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:27) MalzPL casts Prayer of Mending.
.ctor :: (04:49:27) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:27) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5128
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:27) MalzPL's Prayer of Mending heals you for 615 points.
.ctor :: (04:49:27) MalzPL's Prayer of Mending heals you for 615 points.
.ctor :: RegEx Match :: (04:49:27) MalzPL's Prayer of Mending heals you for 615 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 615
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 615
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5130
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:27) MalzPL's Prayer of Mending heals MalzPL for 441 points.
.ctor :: (04:49:27) MalzPL's Prayer of Mending heals MalzPL for 441 points.
.ctor :: RegEx Match :: (04:49:27) MalzPL's Prayer of Mending heals MalzPL for 441 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 441
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 441
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5132
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:27) MalzPL's Prayer of Mending heals MalzSent for 677 points.
.ctor :: (04:49:27) MalzPL's Prayer of Mending heals MalzSent for 677 points.
.ctor :: RegEx Match :: (04:49:27) MalzPL's Prayer of Mending heals MalzSent for 677 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 677
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 677
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5134
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:27) MalzPL's Prayer of Mending heals MalzDruid for 360 points.
.ctor :: (04:49:27) MalzPL's Prayer of Mending heals MalzDruid for 360 points.
.ctor :: RegEx Match :: (04:49:27) MalzPL's Prayer of Mending heals MalzDruid for 360 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 360
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 360
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5136
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:27) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:27) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:27) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5138
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:27) MalzDruid's Prayer of Mending heals you for 317 points.
.ctor :: (04:49:27) MalzDruid's Prayer of Mending heals you for 317 points.
.ctor :: RegEx Match :: (04:49:27) MalzDruid's Prayer of Mending heals you for 317 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 317
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 317
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5140
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:27) MalzDruid's Prayer of Mending heals MalzPL for 607 points.
.ctor :: (04:49:27) MalzDruid's Prayer of Mending heals MalzPL for 607 points.
.ctor :: RegEx Match :: (04:49:27) MalzDruid's Prayer of Mending heals MalzPL for 607 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 607
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 607
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5142
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:27) MalzDruid's Prayer of Mending heals MalzSent for 711 points.
.ctor :: (04:49:27) MalzDruid's Prayer of Mending heals MalzSent for 711 points.
.ctor :: RegEx Match :: (04:49:27) MalzDruid's Prayer of Mending heals MalzSent for 711 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 711
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 711
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5144
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:27) MalzDruid's Prayer of Mending heals MalzDruid for 634 points.
.ctor :: (04:49:27) MalzDruid's Prayer of Mending heals MalzDruid for 634 points.
.ctor :: RegEx Match :: (04:49:27) MalzDruid's Prayer of Mending heals MalzDruid for 634 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 634
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 634
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5146
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:27) The Tavok Chief-brother misses YOU!
.ctor :: (04:49:27) The Tavok Chief-brother misses YOU!
.ctor :: RegEx Match :: (04:49:27) The Tavok Chief-brother misses YOU!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = Tavok Chief-brother
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = YOU
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5148
ParseLine :: AddCombatAction :: Target     = YOU
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:27) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:27) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:27) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5150
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:27) MalzSent drains 98 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: (04:49:27) MalzSent drains 98 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:27) MalzSent drains 98 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 98
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 98
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5152
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:27) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:27) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:27) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5154
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:27) MalzSent drains 141 points of mana from Tavok Chief-brother with Exalted Word of Binding.
.ctor :: (04:49:27) MalzSent drains 141 points of mana from Tavok Chief-brother with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:27) MalzSent drains 141 points of mana from Tavok Chief-brother with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 141
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 141
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5156
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:27) Tavok Chief-brother begins to stumble.
.ctor :: (04:49:27) Tavok Chief-brother begins to stumble.
ParseLine :: (04:49:27) MalzDruid casts Call Lightning.
.ctor :: (04:49:27) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:27) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5160
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:27) MalzDruid casts Call Lightning.
.ctor :: (04:49:27) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:27) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:27
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:27
ParseLine :: AddCombatAction :: Time_Sorter= 5162
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:27) Tavok Chief-brother is stunned!
.ctor :: (04:49:27) Tavok Chief-brother is stunned!
ParseLine :: (04:49:28) MalzDruid casts Call Lightning.
.ctor :: (04:49:28) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:28) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5166
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:28) MalzDruid casts Call Lightning.
.ctor :: (04:49:28) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:28) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5168
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:28) MalzDruid's Call Lightning shocks Tavok Chief-brother for 1123 points of damage!
.ctor :: (04:49:28) MalzDruid's Call Lightning shocks Tavok Chief-brother for 1123 points of damage!
.ctor :: RegEx Match :: (04:49:28) MalzDruid's Call Lightning shocks Tavok Chief-brother for 1123 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 1123
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 1123
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5170
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:28) Tavok Chief-brother is no longer stunned.
.ctor :: (04:49:28) Tavok Chief-brother is no longer stunned.
ParseLine :: (04:49:28) MalzPL casts Prayer of Mending.
.ctor :: (04:49:28) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:28) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5174
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:28) MalzPL's Prayer of Mending heals you for 468 points.
.ctor :: (04:49:28) MalzPL's Prayer of Mending heals you for 468 points.
.ctor :: RegEx Match :: (04:49:28) MalzPL's Prayer of Mending heals you for 468 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 468
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 468
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5176
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:28) MalzPL's Prayer of Mending heals MalzPL for 687 points.
.ctor :: (04:49:28) MalzPL's Prayer of Mending heals MalzPL for 687 points.
.ctor :: RegEx Match :: (04:49:28) MalzPL's Prayer of Mending heals MalzPL for 687 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 687
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 687
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5178
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:28) MalzPL's Prayer of Mending heals MalzSent for 313 points.
.ctor :: (04:49:28) MalzPL's Prayer of Mending heals MalzSent for 313 points.
.ctor :: RegEx Match :: (04:49:28) MalzPL's Prayer of Mending heals MalzSent for 313 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 313
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 313
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5180
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:28) MalzPL's Prayer of Mending heals MalzDruid for 596 points.
.ctor :: (04:49:28) MalzPL's Prayer of Mending heals MalzDruid for 596 points.
.ctor :: RegEx Match :: (04:49:28) MalzPL's Prayer of Mending heals MalzDruid for 596 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 596
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 596
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5182
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:28) The Tavok Chief-brother misses MalzPL.
.ctor :: (04:49:28) The Tavok Chief-brother misses MalzPL.
.ctor :: RegEx Match :: (04:49:28) The Tavok Chief-brother misses MalzPL.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = Tavok Chief-brother
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5184
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:28) MalzPL hits the Tavok Chief-brother for 19 points of damage.
.ctor :: (04:49:28) MalzPL hits the Tavok Chief-brother for 19 points of damage.
.ctor :: RegEx Match :: (04:49:28) MalzPL hits the Tavok Chief-brother for 19 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 19
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 19
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5186
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:28) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:28) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:28) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5188
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:28) MalzDruid's Prayer of Mending heals you for 454 points.
.ctor :: (04:49:28) MalzDruid's Prayer of Mending heals you for 454 points.
.ctor :: RegEx Match :: (04:49:28) MalzDruid's Prayer of Mending heals you for 454 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 454
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 454
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5190
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:28) MalzDruid's Prayer of Mending heals MalzPL for 378 points.
.ctor :: (04:49:28) MalzDruid's Prayer of Mending heals MalzPL for 378 points.
.ctor :: RegEx Match :: (04:49:28) MalzDruid's Prayer of Mending heals MalzPL for 378 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 378
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 378
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5192
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:28) MalzDruid's Prayer of Mending heals MalzSent for 553 points.
.ctor :: (04:49:28) MalzDruid's Prayer of Mending heals MalzSent for 553 points.
.ctor :: RegEx Match :: (04:49:28) MalzDruid's Prayer of Mending heals MalzSent for 553 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 553
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 553
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5194
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:28) MalzDruid's Prayer of Mending heals MalzDruid for 639 points.
.ctor :: (04:49:28) MalzDruid's Prayer of Mending heals MalzDruid for 639 points.
.ctor :: RegEx Match :: (04:49:28) MalzDruid's Prayer of Mending heals MalzDruid for 639 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 639
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 639
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5196
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:28) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:28) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:28) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5198
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:28) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:28) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:28) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5200
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:28) Tavok Chief-brother's stun immunity has worn off.
.ctor :: (04:49:28) Tavok Chief-brother's stun immunity has worn off.
ParseLine :: (04:49:28) MalzPL hits the Tavok Chief-brother for 31 points of damage.
.ctor :: (04:49:28) MalzPL hits the Tavok Chief-brother for 31 points of damage.
.ctor :: RegEx Match :: (04:49:28) MalzPL hits the Tavok Chief-brother for 31 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 31
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 31
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5204
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:28) Tavok Chief-brother casts Flesh of Granite.
.ctor :: (04:49:28) Tavok Chief-brother casts Flesh of Granite.
.ctor :: RegEx Match :: (04:49:28) Tavok Chief-brother casts Flesh of Granite.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = Tavok Chief-brother
.ctor :: RegEx Match :: Ability    = Flesh of Granite
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Ability    = Flesh of Granite
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5206
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:28) Tavok Chief-brother's flesh becomes as hard as granite!
.ctor :: (04:49:28) Tavok Chief-brother's flesh becomes as hard as granite!
ParseLine :: (04:49:28) MalzPL casts Earthquake.
.ctor :: (04:49:28) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:28) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5210
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:28) MalzPL's Earthquake hurts Tavok Chief-brother for 290 points of damage.
.ctor :: (04:49:28) MalzPL's Earthquake hurts Tavok Chief-brother for 290 points of damage.
.ctor :: RegEx Match :: (04:49:28) MalzPL's Earthquake hurts Tavok Chief-brother for 290 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 290
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 290
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5212
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:28) MalzPL casts Earthquake.
.ctor :: (04:49:28) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:28) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5214
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:28) Tavok Chief-brother stops stumbling.
.ctor :: (04:49:28) Tavok Chief-brother stops stumbling.
ParseLine :: (04:49:28) MalzPL hits the Tavok Chief-brother for 7 points of damage.
.ctor :: (04:49:28) MalzPL hits the Tavok Chief-brother for 7 points of damage.
.ctor :: RegEx Match :: (04:49:28) MalzPL hits the Tavok Chief-brother for 7 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 7
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 7
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5218
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:28) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:28) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:28) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5220
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:28) MalzSent's Righteous Word of Binding smites Tavok Chief-brother for 674 points of damage!
.ctor :: (04:49:28) MalzSent's Righteous Word of Binding smites Tavok Chief-brother for 674 points of damage!
.ctor :: RegEx Match :: (04:49:28) MalzSent's Righteous Word of Binding smites Tavok Chief-brother for 674 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 674
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 674
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5222
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:28) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:28) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:28) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5224
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:28) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:28) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:28) Tavok Chief-brother's skin returns to normal.
.ctor :: (04:49:28) Tavok Chief-brother's skin returns to normal.
ParseLine :: (04:49:28) Tavok Chief-brother no longer feels as vulnerable to holy magic.
.ctor :: (04:49:28) Tavok Chief-brother no longer feels as vulnerable to holy magic.
ParseLine :: (04:49:28) MalzDruid casts Earthquake.
.ctor :: (04:49:28) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:28) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5232
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:28) MalzDruid's Earthquake hurts Tavok Chief-brother for 160 points of damage.
.ctor :: (04:49:28) MalzDruid's Earthquake hurts Tavok Chief-brother for 160 points of damage.
.ctor :: RegEx Match :: (04:49:28) MalzDruid's Earthquake hurts Tavok Chief-brother for 160 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 160
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 160
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5234
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:28) [Combat] Info: The Tavok Chief-brother has died!
.ctor :: (04:49:28) [Combat] Info: The Tavok Chief-brother has died!
.ctor :: RegEx Match :: (04:49:28) [Combat] Info: The Tavok Chief-brother has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = Tavok Chief-brother
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5236
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:28) MalzDruid casts Earthquake.
.ctor :: (04:49:28) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:28) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5238
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:28) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: (04:49:28) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: RegEx Match :: (04:49:28) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = HardC
.ctor :: RegEx Match :: Ability    = Challenge
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = attack
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 26
.ctor :: RegEx Match :: RegExDesc  = Taunt :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<target>.*) (?<type>[atck]*)s? (?<source>.*)
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = HardC
ParseLine :: AddCombatAction :: Ability    = Challenge
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5240
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = attack
ParseLine :: (04:49:28) MalzDruid casts Call Lightning.
.ctor :: (04:49:28) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:28) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5242
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:28) Mud Ogre is stunned!
.ctor :: (04:49:28) Mud Ogre is stunned!
ParseLine :: (04:49:28) Mud Ogre is no longer stunned.
.ctor :: (04:49:28) Mud Ogre is no longer stunned.
ParseLine :: (04:49:28) MalzPL casts Prayer of Mending.
.ctor :: (04:49:28) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:28) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5248
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:28) MalzPL's Prayer of Mending heals MalzPL for 648 points.
.ctor :: (04:49:28) MalzPL's Prayer of Mending heals MalzPL for 648 points.
.ctor :: RegEx Match :: (04:49:28) MalzPL's Prayer of Mending heals MalzPL for 648 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 648
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 648
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5250
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:28) MalzPL's Prayer of Mending heals you for 652 points.
.ctor :: (04:49:28) MalzPL's Prayer of Mending heals you for 652 points.
.ctor :: RegEx Match :: (04:49:28) MalzPL's Prayer of Mending heals you for 652 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 652
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 652
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5252
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:28) MalzPL's Prayer of Mending heals MalzSent for 841 points.
.ctor :: (04:49:28) MalzPL's Prayer of Mending heals MalzSent for 841 points.
.ctor :: RegEx Match :: (04:49:28) MalzPL's Prayer of Mending heals MalzSent for 841 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 841
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 841
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5254
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:28) MalzPL's Prayer of Mending heals MalzDruid for 630 points.
.ctor :: (04:49:28) MalzPL's Prayer of Mending heals MalzDruid for 630 points.
.ctor :: RegEx Match :: (04:49:28) MalzPL's Prayer of Mending heals MalzDruid for 630 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 630
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 630
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5256
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:28) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:28) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:28) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5258
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:28) MalzDruid's Prayer of Mending heals MalzPL for 517 points.
.ctor :: (04:49:28) MalzDruid's Prayer of Mending heals MalzPL for 517 points.
.ctor :: RegEx Match :: (04:49:28) MalzDruid's Prayer of Mending heals MalzPL for 517 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 517
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 517
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5260
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:28) MalzDruid's Prayer of Mending heals you for 541 points.
.ctor :: (04:49:28) MalzDruid's Prayer of Mending heals you for 541 points.
.ctor :: RegEx Match :: (04:49:28) MalzDruid's Prayer of Mending heals you for 541 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 541
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 541
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5262
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:28) MalzDruid's Prayer of Mending heals MalzSent for 732 points.
.ctor :: (04:49:28) MalzDruid's Prayer of Mending heals MalzSent for 732 points.
.ctor :: RegEx Match :: (04:49:28) MalzDruid's Prayer of Mending heals MalzSent for 732 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 732
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 732
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5264
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:28) MalzDruid's Prayer of Mending heals MalzDruid for 488 points.
.ctor :: (04:49:28) MalzDruid's Prayer of Mending heals MalzDruid for 488 points.
.ctor :: RegEx Match :: (04:49:28) MalzDruid's Prayer of Mending heals MalzDruid for 488 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 488
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 488
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5266
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:28) The Moss Ogre misses YOU!
.ctor :: (04:49:28) The Moss Ogre misses YOU!
.ctor :: RegEx Match :: (04:49:28) The Moss Ogre misses YOU!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = YOU
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5268
ParseLine :: AddCombatAction :: Target     = YOU
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:28) The Mud Ogre misses MalzDruid.
.ctor :: (04:49:28) The Mud Ogre misses MalzDruid.
.ctor :: RegEx Match :: (04:49:28) The Mud Ogre misses MalzDruid.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5270
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:28) MalzDruid hits the Mud Ogre for 38 points of damage.
.ctor :: (04:49:28) MalzDruid hits the Mud Ogre for 38 points of damage.
.ctor :: RegEx Match :: (04:49:28) MalzDruid hits the Mud Ogre for 38 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 38
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 38
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5272
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:28) The Moss Ogre misses YOU!
.ctor :: (04:49:28) The Moss Ogre misses YOU!
.ctor :: RegEx Match :: (04:49:28) The Moss Ogre misses YOU!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = YOU
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5274
ParseLine :: AddCombatAction :: Target     = YOU
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:28) Mud Ogre's stun immunity has worn off.
.ctor :: (04:49:28) Mud Ogre's stun immunity has worn off.
ParseLine :: (04:49:28) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:28) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:28) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5278
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:28) MalzSent's Righteous Word of Binding smites Moss Ogre for 892 points of damage!
.ctor :: (04:49:28) MalzSent's Righteous Word of Binding smites Moss Ogre for 892 points of damage!
.ctor :: RegEx Match :: (04:49:28) MalzSent's Righteous Word of Binding smites Moss Ogre for 892 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 892
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 892
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5280
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:28) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:28) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:28) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5282
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:28) MalzSent's Righteous Word of Binding smites Mud Ogre for 437 points of damage!
.ctor :: (04:49:28) MalzSent's Righteous Word of Binding smites Mud Ogre for 437 points of damage!
.ctor :: RegEx Match :: (04:49:28) MalzSent's Righteous Word of Binding smites Mud Ogre for 437 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 437
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 437
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5284
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:28) MalzDruid hits the Mud Ogre for 33 points of damage.
.ctor :: (04:49:28) MalzDruid hits the Mud Ogre for 33 points of damage.
.ctor :: RegEx Match :: (04:49:28) MalzDruid hits the Mud Ogre for 33 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 33
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 33
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5286
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:28) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:28) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:28) MalzPL casts Earthquake.
.ctor :: (04:49:28) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:28) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:28
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:28
ParseLine :: AddCombatAction :: Time_Sorter= 5290
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:29) MalzPL's Earthquake hurts Moss Ogre for 1567 points of damage.
.ctor :: (04:49:29) MalzPL's Earthquake hurts Moss Ogre for 1567 points of damage.
.ctor :: RegEx Match :: (04:49:29) MalzPL's Earthquake hurts Moss Ogre for 1567 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1567
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1567
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5292
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:29) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:29) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:29) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5294
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:29) MalzPL's Earthquake hurts Moss Ogre for 1036 points of damage.
.ctor :: (04:49:29) MalzPL's Earthquake hurts Moss Ogre for 1036 points of damage.
.ctor :: RegEx Match :: (04:49:29) MalzPL's Earthquake hurts Moss Ogre for 1036 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1036
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1036
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5296
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:29) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:29) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:29) MalzPL's Earthquake hurts Mud Ogre for 1391 points of damage.
.ctor :: (04:49:29) MalzPL's Earthquake hurts Mud Ogre for 1391 points of damage.
.ctor :: RegEx Match :: (04:49:29) MalzPL's Earthquake hurts Mud Ogre for 1391 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1391
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1391
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5300
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:29) [Combat] Info: The Mud Ogre has died!
.ctor :: (04:49:29) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: (04:49:29) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5302
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:29) You parry the Moss Ogre's attack!
.ctor :: (04:49:29) You parry the Moss Ogre's attack!
.ctor :: RegEx Match :: (04:49:29) You parry the Moss Ogre's attack!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = You
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = parry
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 17
.ctor :: RegEx Match :: RegExDesc  = Parry :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>parr)[yies]+ (?<source>.*)'s .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5304
ParseLine :: AddCombatAction :: Target     = You
ParseLine :: AddCombatAction :: Value_Type = parry
ParseLine :: (04:49:29) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:29) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:29) MalzDruid casts Earthquake.
.ctor :: (04:49:29) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:29) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5308
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:29) MalzDruid's Earthquake hurts Moss Ogre for 1304 points of damage.
.ctor :: (04:49:29) MalzDruid's Earthquake hurts Moss Ogre for 1304 points of damage.
.ctor :: RegEx Match :: (04:49:29) MalzDruid's Earthquake hurts Moss Ogre for 1304 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1304
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1304
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5310
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:29) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:29) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:29) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5312
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:29) MalzPL casts Prayer of Mending.
.ctor :: (04:49:29) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:29) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5314
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:29) MalzPL's Prayer of Mending heals MalzPL for 591 points.
.ctor :: (04:49:29) MalzPL's Prayer of Mending heals MalzPL for 591 points.
.ctor :: RegEx Match :: (04:49:29) MalzPL's Prayer of Mending heals MalzPL for 591 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 591
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 591
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5316
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:29) MalzPL's Prayer of Mending heals you for 512 points.
.ctor :: (04:49:29) MalzPL's Prayer of Mending heals you for 512 points.
.ctor :: RegEx Match :: (04:49:29) MalzPL's Prayer of Mending heals you for 512 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 512
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 512
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5318
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:29) MalzPL's Prayer of Mending heals MalzSent for 582 points.
.ctor :: (04:49:29) MalzPL's Prayer of Mending heals MalzSent for 582 points.
.ctor :: RegEx Match :: (04:49:29) MalzPL's Prayer of Mending heals MalzSent for 582 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 582
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 582
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5320
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:29) MalzPL's Prayer of Mending heals MalzDruid for 617 points.
.ctor :: (04:49:29) MalzPL's Prayer of Mending heals MalzDruid for 617 points.
.ctor :: RegEx Match :: (04:49:29) MalzPL's Prayer of Mending heals MalzDruid for 617 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 617
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 617
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5322
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:29) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:29) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:29) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5324
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:29) MalzDruid's Prayer of Mending heals MalzPL for 781 points.
.ctor :: (04:49:29) MalzDruid's Prayer of Mending heals MalzPL for 781 points.
.ctor :: RegEx Match :: (04:49:29) MalzDruid's Prayer of Mending heals MalzPL for 781 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 781
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 781
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5326
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:29) MalzDruid's Prayer of Mending heals you for 615 points.
.ctor :: (04:49:29) MalzDruid's Prayer of Mending heals you for 615 points.
.ctor :: RegEx Match :: (04:49:29) MalzDruid's Prayer of Mending heals you for 615 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 615
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 615
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5328
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:29) MalzDruid's Prayer of Mending heals MalzSent for 392 points.
.ctor :: (04:49:29) MalzDruid's Prayer of Mending heals MalzSent for 392 points.
.ctor :: RegEx Match :: (04:49:29) MalzDruid's Prayer of Mending heals MalzSent for 392 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 392
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 392
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5330
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:29) MalzDruid's Prayer of Mending heals MalzDruid for 548 points.
.ctor :: (04:49:29) MalzDruid's Prayer of Mending heals MalzDruid for 548 points.
.ctor :: RegEx Match :: (04:49:29) MalzDruid's Prayer of Mending heals MalzDruid for 548 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 548
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 548
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5332
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:29) Moss Ogre feels warded against magic.
.ctor :: (04:49:29) Moss Ogre feels warded against magic.
ParseLine :: (04:49:29) MalzDruid casts Earthquake.
.ctor :: (04:49:29) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:29) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5336
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:29) MalzDruid's Earthquake hurts Moss Ogre for 981 points of damage.
.ctor :: (04:49:29) MalzDruid's Earthquake hurts Moss Ogre for 981 points of damage.
.ctor :: RegEx Match :: (04:49:29) MalzDruid's Earthquake hurts Moss Ogre for 981 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 981
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 981
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5338
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:29) MalzPL casts Call Lightning.
.ctor :: (04:49:29) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:29) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5340
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:29) MalzPL casts Call Lightning.
.ctor :: (04:49:29) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:29) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5342
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:29) Moss Ogre is stunned!
.ctor :: (04:49:29) Moss Ogre is stunned!
ParseLine :: (04:49:29) MalzPL casts Call Lightning.
.ctor :: (04:49:29) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:29) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5346
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:29) MalzPL casts Call Lightning.
.ctor :: (04:49:29) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:29) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5348
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:29) MalzPL's Call Lightning shocks Moss Ogre for 149 points of damage!
.ctor :: (04:49:29) MalzPL's Call Lightning shocks Moss Ogre for 149 points of damage!
.ctor :: RegEx Match :: (04:49:29) MalzPL's Call Lightning shocks Moss Ogre for 149 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 149
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 149
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5350
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:29) Moss Ogre is no longer stunned.
.ctor :: (04:49:29) Moss Ogre is no longer stunned.
ParseLine :: (04:49:29) MalzDruid casts Call Lightning.
.ctor :: (04:49:29) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:29) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5354
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:29) MalzDruid casts Call Lightning.
.ctor :: (04:49:29) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:29) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5356
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:29) MalzDruid's Call Lightning shocks Moss Ogre for 194 points of damage!
.ctor :: (04:49:29) MalzDruid's Call Lightning shocks Moss Ogre for 194 points of damage!
.ctor :: RegEx Match :: (04:49:29) MalzDruid's Call Lightning shocks Moss Ogre for 194 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 194
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 194
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5358
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:29) The Moss Ogre misses MalzDruid.
.ctor :: (04:49:29) The Moss Ogre misses MalzDruid.
.ctor :: RegEx Match :: (04:49:29) The Moss Ogre misses MalzDruid.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5360
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:29) MalzDruid hits the Moss Ogre for 43 points of damage.
.ctor :: (04:49:29) MalzDruid hits the Moss Ogre for 43 points of damage.
.ctor :: RegEx Match :: (04:49:29) MalzDruid hits the Moss Ogre for 43 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 43
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 43
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5362
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:29) MalzPL casts Prayer of Mending.
.ctor :: (04:49:29) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:29) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5364
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:29) MalzPL's Prayer of Mending heals MalzPL for 646 points.
.ctor :: (04:49:29) MalzPL's Prayer of Mending heals MalzPL for 646 points.
.ctor :: RegEx Match :: (04:49:29) MalzPL's Prayer of Mending heals MalzPL for 646 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 646
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 646
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5366
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:29) MalzPL's Prayer of Mending heals you for 629 points.
.ctor :: (04:49:29) MalzPL's Prayer of Mending heals you for 629 points.
.ctor :: RegEx Match :: (04:49:29) MalzPL's Prayer of Mending heals you for 629 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 629
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 629
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5368
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:29) MalzPL's Prayer of Mending heals MalzSent for 480 points.
.ctor :: (04:49:29) MalzPL's Prayer of Mending heals MalzSent for 480 points.
.ctor :: RegEx Match :: (04:49:29) MalzPL's Prayer of Mending heals MalzSent for 480 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 480
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 480
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5370
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:29) MalzPL's Prayer of Mending heals MalzDruid for 442 points.
.ctor :: (04:49:29) MalzPL's Prayer of Mending heals MalzDruid for 442 points.
.ctor :: RegEx Match :: (04:49:29) MalzPL's Prayer of Mending heals MalzDruid for 442 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 442
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 442
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5372
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:29) MalzDruid hits the Moss Ogre for 20 points of damage.
.ctor :: (04:49:29) MalzDruid hits the Moss Ogre for 20 points of damage.
.ctor :: RegEx Match :: (04:49:29) MalzDruid hits the Moss Ogre for 20 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 20
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 20
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5374
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:29) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:29) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:29) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5376
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:29) MalzSent's Righteous Word of Binding smites Moss Ogre for 499 points of damage!
.ctor :: (04:49:29) MalzSent's Righteous Word of Binding smites Moss Ogre for 499 points of damage!
.ctor :: RegEx Match :: (04:49:29) MalzSent's Righteous Word of Binding smites Moss Ogre for 499 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 499
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 499
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5378
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:29) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:29) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:29) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5380
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:29) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:29) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:29) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5382
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:29) MalzDruid's Prayer of Mending heals MalzPL for 832 points.
.ctor :: (04:49:29) MalzDruid's Prayer of Mending heals MalzPL for 832 points.
.ctor :: RegEx Match :: (04:49:29) MalzDruid's Prayer of Mending heals MalzPL for 832 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 832
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 832
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5384
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:29) MalzDruid's Prayer of Mending heals you for 708 points.
.ctor :: (04:49:29) MalzDruid's Prayer of Mending heals you for 708 points.
.ctor :: RegEx Match :: (04:49:29) MalzDruid's Prayer of Mending heals you for 708 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 708
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 708
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5386
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:29) MalzDruid's Prayer of Mending heals MalzSent for 607 points.
.ctor :: (04:49:29) MalzDruid's Prayer of Mending heals MalzSent for 607 points.
.ctor :: RegEx Match :: (04:49:29) MalzDruid's Prayer of Mending heals MalzSent for 607 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 607
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 607
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5388
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:29) MalzDruid's Prayer of Mending heals MalzDruid for 587 points.
.ctor :: (04:49:29) MalzDruid's Prayer of Mending heals MalzDruid for 587 points.
.ctor :: RegEx Match :: (04:49:29) MalzDruid's Prayer of Mending heals MalzDruid for 587 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 587
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 587
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5390
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:29) MalzDruid misses the Moss Ogre.
.ctor :: (04:49:29) MalzDruid misses the Moss Ogre.
.ctor :: RegEx Match :: (04:49:29) MalzDruid misses the Moss Ogre.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5392
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:29) Moss Ogre's stun immunity has worn off.
.ctor :: (04:49:29) Moss Ogre's stun immunity has worn off.
ParseLine :: (04:49:29) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:29) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:29) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5396
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:29) MalzSent drains 106 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: (04:49:29) MalzSent drains 106 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:29) MalzSent drains 106 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 106
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 106
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5398
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:29) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:29) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:29) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5400
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:29) MalzSent drains 151 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: (04:49:29) MalzSent drains 151 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:29) MalzSent drains 151 points of mana from Moss Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 151
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 151
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5402
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:29) Moss Ogre begins to stumble.
.ctor :: (04:49:29) Moss Ogre begins to stumble.
ParseLine :: (04:49:29) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:29) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:29) Moss Ogre's warding fades.
.ctor :: (04:49:29) Moss Ogre's warding fades.
ParseLine :: (04:49:29) Moss Ogre stops stumbling.
.ctor :: (04:49:29) Moss Ogre stops stumbling.
ParseLine :: (04:49:29) MalzPL casts Earthquake.
.ctor :: (04:49:29) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:29) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5412
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:29) MalzPL's Earthquake hurts Moss Ogre for 715 points of damage.
.ctor :: (04:49:29) MalzPL's Earthquake hurts Moss Ogre for 715 points of damage.
.ctor :: RegEx Match :: (04:49:29) MalzPL's Earthquake hurts Moss Ogre for 715 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 715
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 715
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5414
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:29) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:29) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:29) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5416
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:29) MalzPL casts Earthquake.
.ctor :: (04:49:29) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:29) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5418
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:29) MalzPL casts Prayer of Mending.
.ctor :: (04:49:29) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:29) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:29
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:29
ParseLine :: AddCombatAction :: Time_Sorter= 5420
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:30) MalzPL's Prayer of Mending heals MalzPL for 714 points.
.ctor :: (04:49:30) MalzPL's Prayer of Mending heals MalzPL for 714 points.
.ctor :: RegEx Match :: (04:49:30) MalzPL's Prayer of Mending heals MalzPL for 714 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 714
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 714
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5422
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:30) MalzPL's Prayer of Mending heals you for 611 points.
.ctor :: (04:49:30) MalzPL's Prayer of Mending heals you for 611 points.
.ctor :: RegEx Match :: (04:49:30) MalzPL's Prayer of Mending heals you for 611 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 611
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 611
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5424
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:30) MalzPL's Prayer of Mending heals MalzSent for 604 points.
.ctor :: (04:49:30) MalzPL's Prayer of Mending heals MalzSent for 604 points.
.ctor :: RegEx Match :: (04:49:30) MalzPL's Prayer of Mending heals MalzSent for 604 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 604
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 604
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5426
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:30) MalzPL's Prayer of Mending heals MalzDruid for 632 points.
.ctor :: (04:49:30) MalzPL's Prayer of Mending heals MalzDruid for 632 points.
.ctor :: RegEx Match :: (04:49:30) MalzPL's Prayer of Mending heals MalzDruid for 632 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 632
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 632
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5428
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:30) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:30) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:30) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5430
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:30) MalzSent's Righteous Word of Binding smites Vorok Mud-Chief for 701 points of damage!
.ctor :: (04:49:30) MalzSent's Righteous Word of Binding smites Vorok Mud-Chief for 701 points of damage!
.ctor :: RegEx Match :: (04:49:30) MalzSent's Righteous Word of Binding smites Vorok Mud-Chief for 701 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 701
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 701
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5432
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:30) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:30) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:30) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5434
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:30) MalzDruid's Prayer of Mending heals MalzPL for 423 points.
.ctor :: (04:49:30) MalzDruid's Prayer of Mending heals MalzPL for 423 points.
.ctor :: RegEx Match :: (04:49:30) MalzDruid's Prayer of Mending heals MalzPL for 423 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 423
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 423
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5436
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:30) MalzDruid's Prayer of Mending heals you for 526 points.
.ctor :: (04:49:30) MalzDruid's Prayer of Mending heals you for 526 points.
.ctor :: RegEx Match :: (04:49:30) MalzDruid's Prayer of Mending heals you for 526 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 526
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 526
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5438
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:30) MalzDruid's Prayer of Mending heals MalzSent for 571 points.
.ctor :: (04:49:30) MalzDruid's Prayer of Mending heals MalzSent for 571 points.
.ctor :: RegEx Match :: (04:49:30) MalzDruid's Prayer of Mending heals MalzSent for 571 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 571
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 571
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5440
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:30) MalzDruid's Prayer of Mending heals MalzDruid for 403 points.
.ctor :: (04:49:30) MalzDruid's Prayer of Mending heals MalzDruid for 403 points.
.ctor :: RegEx Match :: (04:49:30) MalzDruid's Prayer of Mending heals MalzDruid for 403 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 403
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 403
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5442
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:30) Vorok Mud-Chief casts Mantle of Stone.
.ctor :: (04:49:30) Vorok Mud-Chief casts Mantle of Stone.
.ctor :: RegEx Match :: (04:49:30) Vorok Mud-Chief casts Mantle of Stone.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = Vorok Mud-Chief
.ctor :: RegEx Match :: Ability    = Mantle of Stone
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Ability    = Mantle of Stone
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5444
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:30) Vorok Mud-Chief feels warded from harm.
.ctor :: (04:49:30) Vorok Mud-Chief feels warded from harm.
ParseLine :: (04:49:30) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:30) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:30) Vorok Mud-Chief is no longer warded from harm.
.ctor :: (04:49:30) Vorok Mud-Chief is no longer warded from harm.
ParseLine :: (04:49:30) MalzPL casts Earthquake.
.ctor :: (04:49:30) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:30) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5452
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:30) MalzPL's Earthquake hurts Vorok Mud-Chief for 1527 points of damage.
.ctor :: (04:49:30) MalzPL's Earthquake hurts Vorok Mud-Chief for 1527 points of damage.
.ctor :: RegEx Match :: (04:49:30) MalzPL's Earthquake hurts Vorok Mud-Chief for 1527 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 1527
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1527
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5454
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:30) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: (04:49:30) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: RegEx Match :: (04:49:30) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = Vorok Mud-Chief
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5456
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:30) [Combat] Info: The Mud Ogre attacks HardC
.ctor :: (04:49:30) [Combat] Info: The Mud Ogre attacks HardC
.ctor :: RegEx Match :: (04:49:30) [Combat] Info: The Mud Ogre attacks HardC
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = HardC
.ctor :: RegEx Match :: Ability    = Challenge
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = attack
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 26
.ctor :: RegEx Match :: RegExDesc  = Taunt :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<target>.*) (?<type>[atck]*)s? (?<source>.*)
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = HardC
ParseLine :: AddCombatAction :: Ability    = Challenge
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5458
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = attack
ParseLine :: (04:49:30) MalzPL casts Prayer of Mending.
.ctor :: (04:49:30) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:30) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5460
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:30) MalzPL's Prayer of Mending heals MalzPL for 334 points.
.ctor :: (04:49:30) MalzPL's Prayer of Mending heals MalzPL for 334 points.
.ctor :: RegEx Match :: (04:49:30) MalzPL's Prayer of Mending heals MalzPL for 334 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 334
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 334
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5462
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:30) MalzPL's Prayer of Mending heals you for 474 points.
.ctor :: (04:49:30) MalzPL's Prayer of Mending heals you for 474 points.
.ctor :: RegEx Match :: (04:49:30) MalzPL's Prayer of Mending heals you for 474 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 474
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 474
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5464
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:30) MalzPL's Prayer of Mending heals MalzSent for 707 points.
.ctor :: (04:49:30) MalzPL's Prayer of Mending heals MalzSent for 707 points.
.ctor :: RegEx Match :: (04:49:30) MalzPL's Prayer of Mending heals MalzSent for 707 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 707
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 707
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5466
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:30) MalzPL's Prayer of Mending heals MalzDruid for 377 points.
.ctor :: (04:49:30) MalzPL's Prayer of Mending heals MalzDruid for 377 points.
.ctor :: RegEx Match :: (04:49:30) MalzPL's Prayer of Mending heals MalzDruid for 377 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 377
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 377
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5468
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:30) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:30) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:30) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5470
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:30) MalzDruid's Prayer of Mending heals MalzPL for 762 points.
.ctor :: (04:49:30) MalzDruid's Prayer of Mending heals MalzPL for 762 points.
.ctor :: RegEx Match :: (04:49:30) MalzDruid's Prayer of Mending heals MalzPL for 762 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 762
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 762
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5472
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:30) MalzDruid's Prayer of Mending heals you for 462 points.
.ctor :: (04:49:30) MalzDruid's Prayer of Mending heals you for 462 points.
.ctor :: RegEx Match :: (04:49:30) MalzDruid's Prayer of Mending heals you for 462 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 462
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 462
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5474
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:30) MalzDruid's Prayer of Mending heals MalzSent for 591 points.
.ctor :: (04:49:30) MalzDruid's Prayer of Mending heals MalzSent for 591 points.
.ctor :: RegEx Match :: (04:49:30) MalzDruid's Prayer of Mending heals MalzSent for 591 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 591
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 591
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5476
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:30) MalzDruid's Prayer of Mending heals MalzDruid for 536 points.
.ctor :: (04:49:30) MalzDruid's Prayer of Mending heals MalzDruid for 536 points.
.ctor :: RegEx Match :: (04:49:30) MalzDruid's Prayer of Mending heals MalzDruid for 536 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 536
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 536
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5478
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:30) The Moss Ogre misses MalzDruid.
.ctor :: (04:49:30) The Moss Ogre misses MalzDruid.
.ctor :: RegEx Match :: (04:49:30) The Moss Ogre misses MalzDruid.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5480
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:30) MalzDruid hits the Moss Ogre for 16 points of damage.
.ctor :: (04:49:30) MalzDruid hits the Moss Ogre for 16 points of damage.
.ctor :: RegEx Match :: (04:49:30) MalzDruid hits the Moss Ogre for 16 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 16
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 16
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5482
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:30) You parry the Mud Ogre's attack!
.ctor :: (04:49:30) You parry the Mud Ogre's attack!
.ctor :: RegEx Match :: (04:49:30) You parry the Mud Ogre's attack!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = You
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = parry
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 17
.ctor :: RegEx Match :: RegExDesc  = Parry :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>parr)[yies]+ (?<source>.*)'s .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5484
ParseLine :: AddCombatAction :: Target     = You
ParseLine :: AddCombatAction :: Value_Type = parry
ParseLine :: (04:49:30) MalzDruid hits the Moss Ogre for 42 points of damage.
.ctor :: (04:49:30) MalzDruid hits the Moss Ogre for 42 points of damage.
.ctor :: RegEx Match :: (04:49:30) MalzDruid hits the Moss Ogre for 42 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 42
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 42
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5486
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:30) MalzPL casts Earthquake.
.ctor :: (04:49:30) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:30) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5488
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:30) MalzPL's Earthquake hurts Moss Ogre for 812 points of damage.
.ctor :: (04:49:30) MalzPL's Earthquake hurts Moss Ogre for 812 points of damage.
.ctor :: RegEx Match :: (04:49:30) MalzPL's Earthquake hurts Moss Ogre for 812 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 812
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 812
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5490
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:30) MalzPL's Earthquake hurts Mud Ogre for 1081 points of damage.
.ctor :: (04:49:30) MalzPL's Earthquake hurts Mud Ogre for 1081 points of damage.
.ctor :: RegEx Match :: (04:49:30) MalzPL's Earthquake hurts Mud Ogre for 1081 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1081
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1081
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5492
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:30) MalzDruid hits the Moss Ogre for 48 points of damage.
.ctor :: (04:49:30) MalzDruid hits the Moss Ogre for 48 points of damage.
.ctor :: RegEx Match :: (04:49:30) MalzDruid hits the Moss Ogre for 48 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 48
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 48
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5494
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:30) MalzDruid casts Earthquake.
.ctor :: (04:49:30) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:30) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5496
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:30) MalzDruid's Earthquake hurts Moss Ogre for 1138 points of damage.
.ctor :: (04:49:30) MalzDruid's Earthquake hurts Moss Ogre for 1138 points of damage.
.ctor :: RegEx Match :: (04:49:30) MalzDruid's Earthquake hurts Moss Ogre for 1138 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1138
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1138
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5498
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:30) MalzDruid casts Earthquake.
.ctor :: (04:49:30) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:30) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5500
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:30) MalzDruid's Earthquake hurts Mud Ogre for 592 points of damage.
.ctor :: (04:49:30) MalzDruid's Earthquake hurts Mud Ogre for 592 points of damage.
.ctor :: RegEx Match :: (04:49:30) MalzDruid's Earthquake hurts Mud Ogre for 592 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 592
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 592
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5502
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:30) The Moss Ogre misses MalzDruid.
.ctor :: (04:49:30) The Moss Ogre misses MalzDruid.
.ctor :: RegEx Match :: (04:49:30) The Moss Ogre misses MalzDruid.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5504
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:30) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:30) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:30) MalzPL casts Call Lightning.
.ctor :: (04:49:30) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:30) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5508
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:30) MalzPL casts Call Lightning.
.ctor :: (04:49:30) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:30) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5510
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:30) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:30) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:30) MalzPL casts Call Lightning.
.ctor :: (04:49:30) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:30) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5514
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:30) MalzPL's Call Lightning shocks Moss Ogre for 833 points of damage!
.ctor :: (04:49:30) MalzPL's Call Lightning shocks Moss Ogre for 833 points of damage!
.ctor :: RegEx Match :: (04:49:30) MalzPL's Call Lightning shocks Moss Ogre for 833 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 833
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 833
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5516
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:30) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:30) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:30) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5518
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:30) MalzPL's Call Lightning shocks Mud Ogre for 563 points of damage!
.ctor :: (04:49:30) MalzPL's Call Lightning shocks Mud Ogre for 563 points of damage!
.ctor :: RegEx Match :: (04:49:30) MalzPL's Call Lightning shocks Mud Ogre for 563 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 563
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 563
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5520
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:30) [Combat] Info: The Mud Ogre has died!
.ctor :: (04:49:30) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: (04:49:30) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5522
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:30) MalzSent casts Dangiriel's Might.
.ctor :: (04:49:30) MalzSent casts Dangiriel's Might.
.ctor :: RegEx Match :: (04:49:30) MalzSent casts Dangiriel's Might.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Dangiriel's Might
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Dangiriel's Might
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5524
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:30) MalzSent feels more deadly!
.ctor :: (04:49:30) MalzSent feels more deadly!
ParseLine :: (04:49:30) MalzSent feels more deadly!
.ctor :: (04:49:30) MalzSent feels more deadly!
ParseLine :: (04:49:30) MalzDruid assumes Offensive Stance.
.ctor :: (04:49:30) MalzDruid assumes Offensive Stance.
.ctor :: RegEx Match :: (04:49:30) MalzDruid assumes Offensive Stance.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Offensive Stance
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = assume
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 23
.ctor :: RegEx Match :: RegExDesc  = Use power -- assume :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>assume)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Offensive Stance
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5530
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = assume
ParseLine :: (04:49:30) MalzPL casts Prayer of Mending.
.ctor :: (04:49:30) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:30) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5532
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:30) MalzPL's Prayer of Mending heals MalzPL for 428 points.
.ctor :: (04:49:30) MalzPL's Prayer of Mending heals MalzPL for 428 points.
.ctor :: RegEx Match :: (04:49:30) MalzPL's Prayer of Mending heals MalzPL for 428 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 428
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 428
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5534
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:30) MalzPL's Prayer of Mending heals you for 553 points.
.ctor :: (04:49:30) MalzPL's Prayer of Mending heals you for 553 points.
.ctor :: RegEx Match :: (04:49:30) MalzPL's Prayer of Mending heals you for 553 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 553
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 553
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5536
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:30) MalzPL's Prayer of Mending heals MalzSent for 763 points.
.ctor :: (04:49:30) MalzPL's Prayer of Mending heals MalzSent for 763 points.
.ctor :: RegEx Match :: (04:49:30) MalzPL's Prayer of Mending heals MalzSent for 763 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 763
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 763
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5538
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:30) MalzPL's Prayer of Mending heals MalzDruid for 409 points.
.ctor :: (04:49:30) MalzPL's Prayer of Mending heals MalzDruid for 409 points.
.ctor :: RegEx Match :: (04:49:30) MalzPL's Prayer of Mending heals MalzDruid for 409 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 409
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 409
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5540
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:30) MalzDruid casts Blessing of the Grove.
.ctor :: (04:49:30) MalzDruid casts Blessing of the Grove.
.ctor :: RegEx Match :: (04:49:30) MalzDruid casts Blessing of the Grove.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:30
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Blessing of the Grove
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Blessing of the Grove
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:30
ParseLine :: AddCombatAction :: Time_Sorter= 5542
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:30) MalzDruid looks stronger and healthier!
.ctor :: (04:49:30) MalzDruid looks stronger and healthier!
ParseLine :: (04:49:30) MalzDruid looks stronger and healthier!
.ctor :: (04:49:30) MalzDruid looks stronger and healthier!
ParseLine :: (04:49:31) The Mud Ogre misses MalzSent.
.ctor :: (04:49:31) The Mud Ogre misses MalzSent.
.ctor :: RegEx Match :: (04:49:31) The Mud Ogre misses MalzSent.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5548
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:31) MalzSent hits the Mud Ogre for 93 points of damage.
.ctor :: (04:49:31) MalzSent hits the Mud Ogre for 93 points of damage.
.ctor :: RegEx Match :: (04:49:31) MalzSent hits the Mud Ogre for 93 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 93
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 93
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5550
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:31) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:31) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:31) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5552
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:31) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:31) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:31) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5554
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:31) MalzPL casts Earthquake.
.ctor :: (04:49:31) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:31) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5556
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:31) MalzPL's Earthquake hurts Mud Ogre for 1305 points of damage.
.ctor :: (04:49:31) MalzPL's Earthquake hurts Mud Ogre for 1305 points of damage.
.ctor :: RegEx Match :: (04:49:31) MalzPL's Earthquake hurts Mud Ogre for 1305 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1305
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1305
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5558
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:31) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:31) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:31) Mud Ogre no longer feels as vulnerable to holy magic.
.ctor :: (04:49:31) Mud Ogre no longer feels as vulnerable to holy magic.
ParseLine :: (04:49:31) MalzDruid casts Call Lightning.
.ctor :: (04:49:31) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:31) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5564
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:31) MalzDruid casts Call Lightning.
.ctor :: (04:49:31) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:31) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5566
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:31) MalzDruid's Call Lightning shocks Mud Ogre for 913 points of damage!
.ctor :: (04:49:31) MalzDruid's Call Lightning shocks Mud Ogre for 913 points of damage!
.ctor :: RegEx Match :: (04:49:31) MalzDruid's Call Lightning shocks Mud Ogre for 913 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 913
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 913
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5568
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:31) [Combat] Info: The Mud Ogre has died!
.ctor :: (04:49:31) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: (04:49:31) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5570
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:31) MalzPL assumes Offensive Stance.
.ctor :: (04:49:31) MalzPL assumes Offensive Stance.
.ctor :: RegEx Match :: (04:49:31) MalzPL assumes Offensive Stance.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Offensive Stance
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = assume
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 23
.ctor :: RegEx Match :: RegExDesc  = Use power -- assume :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>assume)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Offensive Stance
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5572
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = assume
ParseLine :: (04:49:31) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:31) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:31) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5574
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:31) MalzDruid's Prayer of Mending heals MalzPL for 623 points.
.ctor :: (04:49:31) MalzDruid's Prayer of Mending heals MalzPL for 623 points.
.ctor :: RegEx Match :: (04:49:31) MalzDruid's Prayer of Mending heals MalzPL for 623 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 623
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 623
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5576
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:31) MalzDruid's Prayer of Mending heals you for 641 points.
.ctor :: (04:49:31) MalzDruid's Prayer of Mending heals you for 641 points.
.ctor :: RegEx Match :: (04:49:31) MalzDruid's Prayer of Mending heals you for 641 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 641
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 641
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5578
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:31) MalzDruid's Prayer of Mending heals MalzSent for 545 points.
.ctor :: (04:49:31) MalzDruid's Prayer of Mending heals MalzSent for 545 points.
.ctor :: RegEx Match :: (04:49:31) MalzDruid's Prayer of Mending heals MalzSent for 545 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 545
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 545
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5580
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:31) MalzDruid's Prayer of Mending heals MalzDruid for 627 points.
.ctor :: (04:49:31) MalzDruid's Prayer of Mending heals MalzDruid for 627 points.
.ctor :: RegEx Match :: (04:49:31) MalzDruid's Prayer of Mending heals MalzDruid for 627 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 627
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 627
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5582
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:31) MalzPL casts Blessing of the Grove.
.ctor :: (04:49:31) MalzPL casts Blessing of the Grove.
.ctor :: RegEx Match :: (04:49:31) MalzPL casts Blessing of the Grove.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Blessing of the Grove
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Blessing of the Grove
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5584
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:31) MalzPL looks stronger and healthier!
.ctor :: (04:49:31) MalzPL looks stronger and healthier!
ParseLine :: (04:49:31) MalzPL looks stronger and healthier!
.ctor :: (04:49:31) MalzPL looks stronger and healthier!
ParseLine :: (04:49:31) The Moss Ogre misses MalzSent.
.ctor :: (04:49:31) The Moss Ogre misses MalzSent.
.ctor :: RegEx Match :: (04:49:31) The Moss Ogre misses MalzSent.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5590
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:31) MalzSent hits the Moss Ogre for 182 points of damage.
.ctor :: (04:49:31) MalzSent hits the Moss Ogre for 182 points of damage.
.ctor :: RegEx Match :: (04:49:31) MalzSent hits the Moss Ogre for 182 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 182
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 182
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5592
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:31) MalzSent hits the Moss Ogre for 221 points of damage.
.ctor :: (04:49:31) MalzSent hits the Moss Ogre for 221 points of damage.
.ctor :: RegEx Match :: (04:49:31) MalzSent hits the Moss Ogre for 221 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 221
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 221
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5594
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:31) MalzDruid casts Earthquake.
.ctor :: (04:49:31) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:31) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5596
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:31) MalzDruid's Earthquake hurts Moss Ogre for 828 points of damage.
.ctor :: (04:49:31) MalzDruid's Earthquake hurts Moss Ogre for 828 points of damage.
.ctor :: RegEx Match :: (04:49:31) MalzDruid's Earthquake hurts Moss Ogre for 828 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 828
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 828
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5598
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:31) The Moss Ogre misses MalzDruid.
.ctor :: (04:49:31) The Moss Ogre misses MalzDruid.
.ctor :: RegEx Match :: (04:49:31) The Moss Ogre misses MalzDruid.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5600
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:31) MalzDruid hits the Moss Ogre for 20 points of damage.
.ctor :: (04:49:31) MalzDruid hits the Moss Ogre for 20 points of damage.
.ctor :: RegEx Match :: (04:49:31) MalzDruid hits the Moss Ogre for 20 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 20
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 20
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5602
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:31) MalzPL casts Call Lightning.
.ctor :: (04:49:31) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:31) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5604
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:31) MalzPL casts Call Lightning.
.ctor :: (04:49:31) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:31) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5606
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:31) Moss Ogre is stunned!
.ctor :: (04:49:31) Moss Ogre is stunned!
ParseLine :: (04:49:31) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:31) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:31) Moss Ogre's stun immunity has worn off.
.ctor :: (04:49:31) Moss Ogre's stun immunity has worn off.
ParseLine :: (04:49:31) Moss Ogre is no longer stunned.
.ctor :: (04:49:31) Moss Ogre is no longer stunned.
ParseLine :: (04:49:31) MalzSent hits the Moss Ogre for 229 points of damage.
.ctor :: (04:49:31) MalzSent hits the Moss Ogre for 229 points of damage.
.ctor :: RegEx Match :: (04:49:31) MalzSent hits the Moss Ogre for 229 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 229
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 229
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5616
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:31) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:31) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:31) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5618
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:31) MalzPL's Call Lightning shocks Moss Ogre for 870 points of damage!
.ctor :: (04:49:31) MalzPL's Call Lightning shocks Moss Ogre for 870 points of damage!
.ctor :: RegEx Match :: (04:49:31) MalzPL's Call Lightning shocks Moss Ogre for 870 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 870
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 870
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5620
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:31) MalzPL casts Prayer of Mending.
.ctor :: (04:49:31) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:31) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5622
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:31) MalzPL's Prayer of Mending heals MalzPL for 573 points.
.ctor :: (04:49:31) MalzPL's Prayer of Mending heals MalzPL for 573 points.
.ctor :: RegEx Match :: (04:49:31) MalzPL's Prayer of Mending heals MalzPL for 573 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 573
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 573
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5624
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:31) MalzPL's Prayer of Mending heals you for 473 points.
.ctor :: (04:49:31) MalzPL's Prayer of Mending heals you for 473 points.
.ctor :: RegEx Match :: (04:49:31) MalzPL's Prayer of Mending heals you for 473 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 473
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 473
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5626
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:31) MalzPL's Prayer of Mending heals MalzSent for 585 points.
.ctor :: (04:49:31) MalzPL's Prayer of Mending heals MalzSent for 585 points.
.ctor :: RegEx Match :: (04:49:31) MalzPL's Prayer of Mending heals MalzSent for 585 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 585
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 585
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5628
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:31) MalzPL's Prayer of Mending heals MalzDruid for 581 points.
.ctor :: (04:49:31) MalzPL's Prayer of Mending heals MalzDruid for 581 points.
.ctor :: RegEx Match :: (04:49:31) MalzPL's Prayer of Mending heals MalzDruid for 581 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 581
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 581
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5630
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:31) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:31) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:31) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5632
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:31) MalzDruid's Prayer of Mending heals MalzPL for 654 points.
.ctor :: (04:49:31) MalzDruid's Prayer of Mending heals MalzPL for 654 points.
.ctor :: RegEx Match :: (04:49:31) MalzDruid's Prayer of Mending heals MalzPL for 654 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 654
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 654
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5634
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:31) MalzDruid's Prayer of Mending heals you for 419 points.
.ctor :: (04:49:31) MalzDruid's Prayer of Mending heals you for 419 points.
.ctor :: RegEx Match :: (04:49:31) MalzDruid's Prayer of Mending heals you for 419 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 419
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 419
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5636
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:31) MalzDruid's Prayer of Mending heals MalzSent for 579 points.
.ctor :: (04:49:31) MalzDruid's Prayer of Mending heals MalzSent for 579 points.
.ctor :: RegEx Match :: (04:49:31) MalzDruid's Prayer of Mending heals MalzSent for 579 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 579
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 579
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5638
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:31) MalzDruid's Prayer of Mending heals MalzDruid for 575 points.
.ctor :: (04:49:31) MalzDruid's Prayer of Mending heals MalzDruid for 575 points.
.ctor :: RegEx Match :: (04:49:31) MalzDruid's Prayer of Mending heals MalzDruid for 575 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 575
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 575
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5640
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:31) [Combat] Info: The Tavok Chief-brother attacks HardC
.ctor :: (04:49:31) [Combat] Info: The Tavok Chief-brother attacks HardC
.ctor :: RegEx Match :: (04:49:31) [Combat] Info: The Tavok Chief-brother attacks HardC
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = HardC
.ctor :: RegEx Match :: Ability    = Challenge
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = attack
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 26
.ctor :: RegEx Match :: RegExDesc  = Taunt :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<target>.*) (?<type>[atck]*)s? (?<source>.*)
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = HardC
ParseLine :: AddCombatAction :: Ability    = Challenge
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5642
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = attack
ParseLine :: (04:49:31) MalzPL casts Prayer of Mending.
.ctor :: (04:49:31) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:31) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5644
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:31) MalzPL's Prayer of Mending heals MalzPL for 424 points.
.ctor :: (04:49:31) MalzPL's Prayer of Mending heals MalzPL for 424 points.
.ctor :: RegEx Match :: (04:49:31) MalzPL's Prayer of Mending heals MalzPL for 424 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 424
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 424
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5646
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:31) MalzPL's Prayer of Mending heals you for 506 points.
.ctor :: (04:49:31) MalzPL's Prayer of Mending heals you for 506 points.
.ctor :: RegEx Match :: (04:49:31) MalzPL's Prayer of Mending heals you for 506 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 506
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 506
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5648
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:31) MalzPL's Prayer of Mending heals MalzSent for 704 points.
.ctor :: (04:49:31) MalzPL's Prayer of Mending heals MalzSent for 704 points.
.ctor :: RegEx Match :: (04:49:31) MalzPL's Prayer of Mending heals MalzSent for 704 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 704
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 704
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5650
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:31) MalzPL's Prayer of Mending heals MalzDruid for 665 points.
.ctor :: (04:49:31) MalzPL's Prayer of Mending heals MalzDruid for 665 points.
.ctor :: RegEx Match :: (04:49:31) MalzPL's Prayer of Mending heals MalzDruid for 665 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 665
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 665
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5652
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:31) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:31) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:31) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5654
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:31) MalzDruid's Prayer of Mending heals MalzPL for 635 points.
.ctor :: (04:49:31) MalzDruid's Prayer of Mending heals MalzPL for 635 points.
.ctor :: RegEx Match :: (04:49:31) MalzDruid's Prayer of Mending heals MalzPL for 635 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 635
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 635
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5656
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:31) MalzDruid's Prayer of Mending heals you for 479 points.
.ctor :: (04:49:31) MalzDruid's Prayer of Mending heals you for 479 points.
.ctor :: RegEx Match :: (04:49:31) MalzDruid's Prayer of Mending heals you for 479 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 479
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 479
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5658
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:31) MalzDruid's Prayer of Mending heals MalzSent for 598 points.
.ctor :: (04:49:31) MalzDruid's Prayer of Mending heals MalzSent for 598 points.
.ctor :: RegEx Match :: (04:49:31) MalzDruid's Prayer of Mending heals MalzSent for 598 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 598
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 598
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5660
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:31) MalzDruid's Prayer of Mending heals MalzDruid for 492 points.
.ctor :: (04:49:31) MalzDruid's Prayer of Mending heals MalzDruid for 492 points.
.ctor :: RegEx Match :: (04:49:31) MalzDruid's Prayer of Mending heals MalzDruid for 492 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 492
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 492
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5662
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:31) MalzPL casts Earthquake.
.ctor :: (04:49:31) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:31) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5664
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:31) MalzPL's Earthquake hurts Tavok Chief-brother for 982 points of damage.
.ctor :: (04:49:31) MalzPL's Earthquake hurts Tavok Chief-brother for 982 points of damage.
.ctor :: RegEx Match :: (04:49:31) MalzPL's Earthquake hurts Tavok Chief-brother for 982 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 982
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 982
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5666
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:31) MalzPL casts Earthquake.
.ctor :: (04:49:31) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:31) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5668
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:31) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:31) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:31) MalzDruid casts Earthquake.
.ctor :: (04:49:31) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:31) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5672
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:31) MalzDruid's Earthquake hurts Tavok Chief-brother for 1224 points of damage.
.ctor :: (04:49:31) MalzDruid's Earthquake hurts Tavok Chief-brother for 1224 points of damage.
.ctor :: RegEx Match :: (04:49:31) MalzDruid's Earthquake hurts Tavok Chief-brother for 1224 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 1224
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1224
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5674
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:31) [Combat] Info: The Tavok Chief-brother has died!
.ctor :: (04:49:31) [Combat] Info: The Tavok Chief-brother has died!
.ctor :: RegEx Match :: (04:49:31) [Combat] Info: The Tavok Chief-brother has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:31
.ctor :: RegEx Match :: Source     = Tavok Chief-brother
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Tavok Chief-brother
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:31
ParseLine :: AddCombatAction :: Time_Sorter= 5676
ParseLine :: AddCombatAction :: Target     = Tavok Chief-brother
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:32) MalzDruid casts Earthquake.
.ctor :: (04:49:32) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:32) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5678
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:32) MalzDruid's Earthquake hurts Moss Ogre for 1203 points of damage.
.ctor :: (04:49:32) MalzDruid's Earthquake hurts Moss Ogre for 1203 points of damage.
.ctor :: RegEx Match :: (04:49:32) MalzDruid's Earthquake hurts Moss Ogre for 1203 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1203
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1203
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5680
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:32) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:32) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:32) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5682
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:32) MalzSent's Righteous Word of Binding smites Moss Ogre for 596 points of damage!
.ctor :: (04:49:32) MalzSent's Righteous Word of Binding smites Moss Ogre for 596 points of damage!
.ctor :: RegEx Match :: (04:49:32) MalzSent's Righteous Word of Binding smites Moss Ogre for 596 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 596
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 596
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5684
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:32) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:32) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:32) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5686
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:32) MalzPL casts Call Lightning.
.ctor :: (04:49:32) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:32) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5688
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:32) The Moss Ogre misses MalzPL.
.ctor :: (04:49:32) The Moss Ogre misses MalzPL.
.ctor :: RegEx Match :: (04:49:32) The Moss Ogre misses MalzPL.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5690
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:32) MalzPL hits the Moss Ogre for 16 points of damage.
.ctor :: (04:49:32) MalzPL hits the Moss Ogre for 16 points of damage.
.ctor :: RegEx Match :: (04:49:32) MalzPL hits the Moss Ogre for 16 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 16
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 16
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5692
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:32) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:32) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:32) MalzDruid casts Call Lightning.
.ctor :: (04:49:32) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:32) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5696
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:32) MalzDruid casts Call Lightning.
.ctor :: (04:49:32) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:32) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5698
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:32) Mud Ogre is stunned!
.ctor :: (04:49:32) Mud Ogre is stunned!
ParseLine :: (04:49:32) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:32) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:32) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5702
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:32) MalzSent drains 108 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: (04:49:32) MalzSent drains 108 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:32) MalzSent drains 108 points of mana from MalzSent with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 108
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 108
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5704
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:32) MalzSent casts Exalted Word of Binding.
.ctor :: (04:49:32) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:32) MalzSent casts Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5706
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:32) MalzSent drains 154 points of mana from Mud Ogre with Exalted Word of Binding.
.ctor :: (04:49:32) MalzSent drains 154 points of mana from Mud Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: (04:49:32) MalzSent drains 154 points of mana from Mud Ogre with Exalted Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Exalted Word of Binding
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 154
.ctor :: RegEx Match :: Value_Type = drain
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 3
.ctor :: RegEx Match :: RegExDesc  = Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 13
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Exalted Word of Binding
ParseLine :: AddCombatAction :: Value      = 154
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5708
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = drain
ParseLine :: (04:49:32) Mud Ogre begins to stumble.
.ctor :: (04:49:32) Mud Ogre begins to stumble.
ParseLine :: (04:49:32) MalzDruid hits the Mud Ogre for 23 points of damage.
.ctor :: (04:49:32) MalzDruid hits the Mud Ogre for 23 points of damage.
.ctor :: RegEx Match :: (04:49:32) MalzDruid hits the Mud Ogre for 23 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 23
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 23
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5712
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:32) MalzDruid's Call Lightning shocks Moss Ogre for 751 points of damage!
.ctor :: (04:49:32) MalzDruid's Call Lightning shocks Moss Ogre for 751 points of damage!
.ctor :: RegEx Match :: (04:49:32) MalzDruid's Call Lightning shocks Moss Ogre for 751 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 751
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 751
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5714
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:32) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:32) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:32) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5716
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:32) Mud Ogre is no longer stunned.
.ctor :: (04:49:32) Mud Ogre is no longer stunned.
ParseLine :: (04:49:32) MalzPL casts Prayer of Mending.
.ctor :: (04:49:32) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:32) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5720
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:32) MalzPL's Prayer of Mending heals MalzPL for 492 points.
.ctor :: (04:49:32) MalzPL's Prayer of Mending heals MalzPL for 492 points.
.ctor :: RegEx Match :: (04:49:32) MalzPL's Prayer of Mending heals MalzPL for 492 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 492
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 492
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5722
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:32) MalzPL's Prayer of Mending heals you for 609 points.
.ctor :: (04:49:32) MalzPL's Prayer of Mending heals you for 609 points.
.ctor :: RegEx Match :: (04:49:32) MalzPL's Prayer of Mending heals you for 609 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 609
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 609
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5724
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:32) MalzPL's Prayer of Mending heals MalzSent for 560 points.
.ctor :: (04:49:32) MalzPL's Prayer of Mending heals MalzSent for 560 points.
.ctor :: RegEx Match :: (04:49:32) MalzPL's Prayer of Mending heals MalzSent for 560 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 560
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 560
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5726
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:32) MalzPL's Prayer of Mending heals MalzDruid for 477 points.
.ctor :: (04:49:32) MalzPL's Prayer of Mending heals MalzDruid for 477 points.
.ctor :: RegEx Match :: (04:49:32) MalzPL's Prayer of Mending heals MalzDruid for 477 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 477
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 477
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5728
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:32) MalzDruid hits the Mud Ogre for 23 points of damage.
.ctor :: (04:49:32) MalzDruid hits the Mud Ogre for 23 points of damage.
.ctor :: RegEx Match :: (04:49:32) MalzDruid hits the Mud Ogre for 23 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 23
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 23
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5730
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:32) MalzDruid's Call Lightning shocks Mud Ogre for 766 points of damage!
.ctor :: (04:49:32) MalzDruid's Call Lightning shocks Mud Ogre for 766 points of damage!
.ctor :: RegEx Match :: (04:49:32) MalzDruid's Call Lightning shocks Mud Ogre for 766 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 766
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 766
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5732
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:32) The Mud Ogre misses MalzPL.
.ctor :: (04:49:32) The Mud Ogre misses MalzPL.
.ctor :: RegEx Match :: (04:49:32) The Mud Ogre misses MalzPL.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5734
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:32) MalzPL hits the Mud Ogre for 33 points of damage.
.ctor :: (04:49:32) MalzPL hits the Mud Ogre for 33 points of damage.
.ctor :: RegEx Match :: (04:49:32) MalzPL hits the Mud Ogre for 33 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 33
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 33
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5736
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:32) MalzDruid hits the Mud Ogre for 37 points of damage.
.ctor :: (04:49:32) MalzDruid hits the Mud Ogre for 37 points of damage.
.ctor :: RegEx Match :: (04:49:32) MalzDruid hits the Mud Ogre for 37 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 37
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 37
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5738
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:32) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:32) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:32) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5740
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:32) MalzDruid's Prayer of Mending heals MalzPL for 626 points.
.ctor :: (04:49:32) MalzDruid's Prayer of Mending heals MalzPL for 626 points.
.ctor :: RegEx Match :: (04:49:32) MalzDruid's Prayer of Mending heals MalzPL for 626 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 626
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 626
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5742
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:32) MalzDruid's Prayer of Mending heals you for 613 points.
.ctor :: (04:49:32) MalzDruid's Prayer of Mending heals you for 613 points.
.ctor :: RegEx Match :: (04:49:32) MalzDruid's Prayer of Mending heals you for 613 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 613
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 613
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5744
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:32) MalzDruid's Prayer of Mending heals MalzSent for 608 points.
.ctor :: (04:49:32) MalzDruid's Prayer of Mending heals MalzSent for 608 points.
.ctor :: RegEx Match :: (04:49:32) MalzDruid's Prayer of Mending heals MalzSent for 608 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 608
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 608
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5746
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:32) MalzDruid's Prayer of Mending heals MalzDruid for 454 points.
.ctor :: (04:49:32) MalzDruid's Prayer of Mending heals MalzDruid for 454 points.
.ctor :: RegEx Match :: (04:49:32) MalzDruid's Prayer of Mending heals MalzDruid for 454 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 454
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 454
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5748
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:32) MalzPL hits the Mud Ogre for 24 points of damage.
.ctor :: (04:49:32) MalzPL hits the Mud Ogre for 24 points of damage.
.ctor :: RegEx Match :: (04:49:32) MalzPL hits the Mud Ogre for 24 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 24
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 24
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5750
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:32) Mud Ogre's stun immunity has worn off.
.ctor :: (04:49:32) Mud Ogre's stun immunity has worn off.
ParseLine :: (04:49:32) MalzDruid hits the Mud Ogre for 17 points of damage.
.ctor :: (04:49:32) MalzDruid hits the Mud Ogre for 17 points of damage.
.ctor :: RegEx Match :: (04:49:32) MalzDruid hits the Mud Ogre for 17 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 17
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 17
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5754
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:32) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:32) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:32) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5756
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:32) MalzSent casts Holy Word of Binding.
.ctor :: (04:49:32) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: (04:49:32) MalzSent casts Holy Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Holy Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Holy Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5758
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:32) MalzPL hits the Mud Ogre for 42 points of damage.
.ctor :: (04:49:32) MalzPL hits the Mud Ogre for 42 points of damage.
.ctor :: RegEx Match :: (04:49:32) MalzPL hits the Mud Ogre for 42 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 42
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 42
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5760
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:32) MalzPL casts Earthquake.
.ctor :: (04:49:32) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:32) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5762
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:32) MalzPL's Earthquake hurts Mud Ogre for 1037 points of damage.
.ctor :: (04:49:32) MalzPL's Earthquake hurts Mud Ogre for 1037 points of damage.
.ctor :: RegEx Match :: (04:49:32) MalzPL's Earthquake hurts Mud Ogre for 1037 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 1037
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1037
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5764
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:32) MalzDruid misses the Mud Ogre.
.ctor :: (04:49:32) MalzDruid misses the Mud Ogre.
.ctor :: RegEx Match :: (04:49:32) MalzDruid misses the Mud Ogre.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5766
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:32) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: (04:49:32) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: RegEx Match :: (04:49:32) [Combat] Info: The Moss Ogre attacks HardC
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = HardC
.ctor :: RegEx Match :: Ability    = Challenge
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = attack
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 26
.ctor :: RegEx Match :: RegExDesc  = Taunt :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<target>.*) (?<type>[atck]*)s? (?<source>.*)
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = HardC
ParseLine :: AddCombatAction :: Ability    = Challenge
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5768
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = attack
ParseLine :: (04:49:32) MalzPL hits the Mud Ogre for 26 points of damage.
.ctor :: (04:49:32) MalzPL hits the Mud Ogre for 26 points of damage.
.ctor :: RegEx Match :: (04:49:32) MalzPL hits the Mud Ogre for 26 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 26
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 26
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5770
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:32) Mud Ogre stops stumbling.
.ctor :: (04:49:32) Mud Ogre stops stumbling.
ParseLine :: (04:49:32) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:32) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:32) Mud Ogre no longer feels as vulnerable to holy magic.
.ctor :: (04:49:32) Mud Ogre no longer feels as vulnerable to holy magic.
ParseLine :: (04:49:32) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:32) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:32) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5778
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:32) MalzSent's Righteous Word of Binding smites Mud Ogre for 714 points of damage!
.ctor :: (04:49:32) MalzSent's Righteous Word of Binding smites Mud Ogre for 714 points of damage!
.ctor :: RegEx Match :: (04:49:32) MalzSent's Righteous Word of Binding smites Mud Ogre for 714 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 714
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 714
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5780
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:32) [Combat] Info: The Mud Ogre has died!
.ctor :: (04:49:32) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: (04:49:32) [Combat] Info: The Mud Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = Mud Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Mud Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Mud Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5782
ParseLine :: AddCombatAction :: Target     = Mud Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:32) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:32) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:32) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5784
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:32) MalzDruid casts Call Lightning.
.ctor :: (04:49:32) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:32) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5786
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:32) Moss Ogre is stunned!
.ctor :: (04:49:32) Moss Ogre is stunned!
ParseLine :: (04:49:32) MalzDruid's Call Lightning shocks Moss Ogre for 715 points of damage!
.ctor :: (04:49:32) MalzDruid's Call Lightning shocks Moss Ogre for 715 points of damage!
.ctor :: RegEx Match :: (04:49:32) MalzDruid's Call Lightning shocks Moss Ogre for 715 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 715
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 715
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5790
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:32) MalzPL casts Prayer of Mending.
.ctor :: (04:49:32) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:32) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5792
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:32) MalzPL's Prayer of Mending heals MalzPL for 585 points.
.ctor :: (04:49:32) MalzPL's Prayer of Mending heals MalzPL for 585 points.
.ctor :: RegEx Match :: (04:49:32) MalzPL's Prayer of Mending heals MalzPL for 585 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 585
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 585
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5794
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:32) MalzPL's Prayer of Mending heals you for 686 points.
.ctor :: (04:49:32) MalzPL's Prayer of Mending heals you for 686 points.
.ctor :: RegEx Match :: (04:49:32) MalzPL's Prayer of Mending heals you for 686 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 686
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 686
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5796
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:32) MalzPL's Prayer of Mending heals MalzSent for 468 points.
.ctor :: (04:49:32) MalzPL's Prayer of Mending heals MalzSent for 468 points.
.ctor :: RegEx Match :: (04:49:32) MalzPL's Prayer of Mending heals MalzSent for 468 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 468
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 468
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5798
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:32) MalzPL's Prayer of Mending heals MalzDruid for 328 points.
.ctor :: (04:49:32) MalzPL's Prayer of Mending heals MalzDruid for 328 points.
.ctor :: RegEx Match :: (04:49:32) MalzPL's Prayer of Mending heals MalzDruid for 328 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 328
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 328
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5800
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:32) Moss Ogre is no longer stunned.
.ctor :: (04:49:32) Moss Ogre is no longer stunned.
ParseLine :: (04:49:32) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:32) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:32) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:32
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:32
ParseLine :: AddCombatAction :: Time_Sorter= 5804
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:33) MalzDruid's Prayer of Mending heals MalzPL for 459 points.
.ctor :: (04:49:33) MalzDruid's Prayer of Mending heals MalzPL for 459 points.
.ctor :: RegEx Match :: (04:49:33) MalzDruid's Prayer of Mending heals MalzPL for 459 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 459
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 459
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5806
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:33) MalzDruid's Prayer of Mending heals you for 498 points.
.ctor :: (04:49:33) MalzDruid's Prayer of Mending heals you for 498 points.
.ctor :: RegEx Match :: (04:49:33) MalzDruid's Prayer of Mending heals you for 498 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 498
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 498
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5808
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:33) MalzDruid's Prayer of Mending heals MalzSent for 671 points.
.ctor :: (04:49:33) MalzDruid's Prayer of Mending heals MalzSent for 671 points.
.ctor :: RegEx Match :: (04:49:33) MalzDruid's Prayer of Mending heals MalzSent for 671 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 671
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 671
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5810
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:33) MalzDruid's Prayer of Mending heals MalzDruid for 630 points.
.ctor :: (04:49:33) MalzDruid's Prayer of Mending heals MalzDruid for 630 points.
.ctor :: RegEx Match :: (04:49:33) MalzDruid's Prayer of Mending heals MalzDruid for 630 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 630
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 630
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5812
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:33) Moss Ogre's stun immunity has worn off.
.ctor :: (04:49:33) Moss Ogre's stun immunity has worn off.
ParseLine :: (04:49:33) MalzPL casts Earthquake.
.ctor :: (04:49:33) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:33) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5816
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:33) MalzPL's Earthquake hurts Moss Ogre for 1144 points of damage.
.ctor :: (04:49:33) MalzPL's Earthquake hurts Moss Ogre for 1144 points of damage.
.ctor :: RegEx Match :: (04:49:33) MalzPL's Earthquake hurts Moss Ogre for 1144 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1144
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1144
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5818
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:33) You parry the Moss Ogre's attack!
.ctor :: (04:49:33) You parry the Moss Ogre's attack!
.ctor :: RegEx Match :: (04:49:33) You parry the Moss Ogre's attack!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = You
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = parry
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 17
.ctor :: RegEx Match :: RegExDesc  = Parry :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>parr)[yies]+ (?<source>.*)'s .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5820
ParseLine :: AddCombatAction :: Target     = You
ParseLine :: AddCombatAction :: Value_Type = parry
ParseLine :: (04:49:33) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:33) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:33) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5822
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:33) MalzSent's Righteous Word of Binding smites Moss Ogre for 550 points of damage!
.ctor :: (04:49:33) MalzSent's Righteous Word of Binding smites Moss Ogre for 550 points of damage!
.ctor :: RegEx Match :: (04:49:33) MalzSent's Righteous Word of Binding smites Moss Ogre for 550 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 550
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 550
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5824
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:33) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:33) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:33) MalzSent's Righteous Word of Binding smites Moss Ogre for 788 points of damage!
.ctor :: (04:49:33) MalzSent's Righteous Word of Binding smites Moss Ogre for 788 points of damage!
.ctor :: RegEx Match :: (04:49:33) MalzSent's Righteous Word of Binding smites Moss Ogre for 788 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 788
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 788
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5828
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:33) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:33) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:33) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5830
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:33) Moss Ogre's Earthquake hurts you for 457 points of damage.
.ctor :: (04:49:33) Moss Ogre's Earthquake hurts you for 457 points of damage.
.ctor :: RegEx Match :: (04:49:33) Moss Ogre's Earthquake hurts you for 457 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 457
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 457
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5832
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:33) Moss Ogre's Earthquake hurts MalzPL for 532 points of damage.
.ctor :: (04:49:33) Moss Ogre's Earthquake hurts MalzPL for 532 points of damage.
.ctor :: RegEx Match :: (04:49:33) Moss Ogre's Earthquake hurts MalzPL for 532 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 532
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 532
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5834
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:33) Moss Ogre's Earthquake hurts MalzSent for 451 points of damage.
.ctor :: (04:49:33) Moss Ogre's Earthquake hurts MalzSent for 451 points of damage.
.ctor :: RegEx Match :: (04:49:33) Moss Ogre's Earthquake hurts MalzSent for 451 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 451
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 451
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5836
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:33) Moss Ogre's Earthquake hurts MalzDruid for 677 points of damage.
.ctor :: (04:49:33) Moss Ogre's Earthquake hurts MalzDruid for 677 points of damage.
.ctor :: RegEx Match :: (04:49:33) Moss Ogre's Earthquake hurts MalzDruid for 677 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 677
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 677
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5838
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:33) MalzPL hits the Moss Ogre for 25 points of damage.
.ctor :: (04:49:33) MalzPL hits the Moss Ogre for 25 points of damage.
.ctor :: RegEx Match :: (04:49:33) MalzPL hits the Moss Ogre for 25 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 25
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 25
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5840
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:33) MalzSent hits the Moss Ogre for 164 points of damage.
.ctor :: (04:49:33) MalzSent hits the Moss Ogre for 164 points of damage.
.ctor :: RegEx Match :: (04:49:33) MalzSent hits the Moss Ogre for 164 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 164
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 164
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5842
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:33) MalzDruid hits the Moss Ogre for 24 points of damage.
.ctor :: (04:49:33) MalzDruid hits the Moss Ogre for 24 points of damage.
.ctor :: RegEx Match :: (04:49:33) MalzDruid hits the Moss Ogre for 24 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 24
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 24
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5844
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:33) The Moss Ogre misses MalzSent.
.ctor :: (04:49:33) The Moss Ogre misses MalzSent.
.ctor :: RegEx Match :: (04:49:33) The Moss Ogre misses MalzSent.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5846
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:33) MalzDruid casts Earthquake.
.ctor :: (04:49:33) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:33) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5848
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:33) MalzDruid's Earthquake hurts Moss Ogre for 1141 points of damage.
.ctor :: (04:49:33) MalzDruid's Earthquake hurts Moss Ogre for 1141 points of damage.
.ctor :: RegEx Match :: (04:49:33) MalzDruid's Earthquake hurts Moss Ogre for 1141 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 1141
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1141
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5850
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:33) MalzDruid casts Earthquake.
.ctor :: (04:49:33) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: (04:49:33) MalzDruid casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5852
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:33) MalzPL casts Call Lightning.
.ctor :: (04:49:33) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:33) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5854
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:33) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:33) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:33) MalzPL casts Call Lightning.
.ctor :: (04:49:33) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: (04:49:33) MalzPL casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5858
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:33) MalzPL's Call Lightning shocks Moss Ogre for 612 points of damage!
.ctor :: (04:49:33) MalzPL's Call Lightning shocks Moss Ogre for 612 points of damage!
.ctor :: RegEx Match :: (04:49:33) MalzPL's Call Lightning shocks Moss Ogre for 612 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 612
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 612
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5860
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:33) [Combat] Info: The Moss Ogre has died!
.ctor :: (04:49:33) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: (04:49:33) [Combat] Info: The Moss Ogre has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = Moss Ogre
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Moss Ogre
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Moss Ogre
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5862
ParseLine :: AddCombatAction :: Target     = Moss Ogre
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:33) MalzPL casts Prayer of Mending.
.ctor :: (04:49:33) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:33) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5864
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:33) MalzPL's Prayer of Mending heals MalzPL for 548 points.
.ctor :: (04:49:33) MalzPL's Prayer of Mending heals MalzPL for 548 points.
.ctor :: RegEx Match :: (04:49:33) MalzPL's Prayer of Mending heals MalzPL for 548 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 548
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 548
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5866
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:33) MalzPL's Prayer of Mending heals you for 534 points.
.ctor :: (04:49:33) MalzPL's Prayer of Mending heals you for 534 points.
.ctor :: RegEx Match :: (04:49:33) MalzPL's Prayer of Mending heals you for 534 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 534
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 534
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5868
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:33) MalzPL's Prayer of Mending heals MalzSent for 521 points.
.ctor :: (04:49:33) MalzPL's Prayer of Mending heals MalzSent for 521 points.
.ctor :: RegEx Match :: (04:49:33) MalzPL's Prayer of Mending heals MalzSent for 521 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 521
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 521
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5870
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:33) MalzPL's Prayer of Mending heals MalzDruid for 775 points.
.ctor :: (04:49:33) MalzPL's Prayer of Mending heals MalzDruid for 775 points.
.ctor :: RegEx Match :: (04:49:33) MalzPL's Prayer of Mending heals MalzDruid for 775 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 775
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 775
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5872
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:33) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:33) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:33) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5874
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:33) MalzDruid's Prayer of Mending heals MalzPL for 372 points.
.ctor :: (04:49:33) MalzDruid's Prayer of Mending heals MalzPL for 372 points.
.ctor :: RegEx Match :: (04:49:33) MalzDruid's Prayer of Mending heals MalzPL for 372 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 372
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 372
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5876
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:33) MalzDruid's Prayer of Mending heals you for 523 points.
.ctor :: (04:49:33) MalzDruid's Prayer of Mending heals you for 523 points.
.ctor :: RegEx Match :: (04:49:33) MalzDruid's Prayer of Mending heals you for 523 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 523
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 523
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5878
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:33) MalzDruid's Prayer of Mending heals MalzSent for 561 points.
.ctor :: (04:49:33) MalzDruid's Prayer of Mending heals MalzSent for 561 points.
.ctor :: RegEx Match :: (04:49:33) MalzDruid's Prayer of Mending heals MalzSent for 561 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 561
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 561
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5880
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:33) MalzDruid's Prayer of Mending heals MalzDruid for 487 points.
.ctor :: (04:49:33) MalzDruid's Prayer of Mending heals MalzDruid for 487 points.
.ctor :: RegEx Match :: (04:49:33) MalzDruid's Prayer of Mending heals MalzDruid for 487 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 487
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 487
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5882
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:33) MalzDruid casts Call Lightning.
.ctor :: (04:49:33) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:33) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5884
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:33) MalzDruid casts Call Lightning.
.ctor :: (04:49:33) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: (04:49:33) MalzDruid casts Call Lightning.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5886
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:33) Vorok Mud-Chief is stunned!
.ctor :: (04:49:33) Vorok Mud-Chief is stunned!
ParseLine :: (04:49:33) MalzDruid's Call Lightning shocks Vorok Mud-Chief for 610 points of damage!
.ctor :: (04:49:33) MalzDruid's Call Lightning shocks Vorok Mud-Chief for 610 points of damage!
.ctor :: RegEx Match :: (04:49:33) MalzDruid's Call Lightning shocks Vorok Mud-Chief for 610 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Call Lightning
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 610
.ctor :: RegEx Match :: Value_Type = shock
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Call Lightning
ParseLine :: AddCombatAction :: Value      = 610
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5890
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = shock
ParseLine :: (04:49:33) Vorok Mud-Chief is no longer stunned.
.ctor :: (04:49:33) Vorok Mud-Chief is no longer stunned.
ParseLine :: (04:49:33) MalzPL casts Prayer of Mending.
.ctor :: (04:49:33) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:33) MalzPL casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5894
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:33) MalzPL's Prayer of Mending heals MalzPL for 700 points.
.ctor :: (04:49:33) MalzPL's Prayer of Mending heals MalzPL for 700 points.
.ctor :: RegEx Match :: (04:49:33) MalzPL's Prayer of Mending heals MalzPL for 700 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 700
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 700
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5896
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:33) MalzPL's Prayer of Mending heals you for 435 points.
.ctor :: (04:49:33) MalzPL's Prayer of Mending heals you for 435 points.
.ctor :: RegEx Match :: (04:49:33) MalzPL's Prayer of Mending heals you for 435 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 435
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 435
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5898
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:33) MalzPL's Prayer of Mending heals MalzSent for 406 points.
.ctor :: (04:49:33) MalzPL's Prayer of Mending heals MalzSent for 406 points.
.ctor :: RegEx Match :: (04:49:33) MalzPL's Prayer of Mending heals MalzSent for 406 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 406
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 406
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5900
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:33) MalzPL's Prayer of Mending heals MalzDruid for 596 points.
.ctor :: (04:49:33) MalzPL's Prayer of Mending heals MalzDruid for 596 points.
.ctor :: RegEx Match :: (04:49:33) MalzPL's Prayer of Mending heals MalzDruid for 596 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 596
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 596
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5902
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:33) MalzDruid casts Prayer of Mending.
.ctor :: (04:49:33) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:33) MalzDruid casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5904
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:33) MalzDruid's Prayer of Mending heals MalzPL for 644 points.
.ctor :: (04:49:33) MalzDruid's Prayer of Mending heals MalzPL for 644 points.
.ctor :: RegEx Match :: (04:49:33) MalzDruid's Prayer of Mending heals MalzPL for 644 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzPL
.ctor :: RegEx Match :: Value      = 644
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 644
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5906
ParseLine :: AddCombatAction :: Target     = MalzPL
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:33) MalzDruid's Prayer of Mending heals you for 633 points.
.ctor :: (04:49:33) MalzDruid's Prayer of Mending heals you for 633 points.
.ctor :: RegEx Match :: (04:49:33) MalzDruid's Prayer of Mending heals you for 633 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = you
.ctor :: RegEx Match :: Value      = 633
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 633
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5908
ParseLine :: AddCombatAction :: Target     = you
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:33) MalzDruid's Prayer of Mending heals MalzSent for 667 points.
.ctor :: (04:49:33) MalzDruid's Prayer of Mending heals MalzSent for 667 points.
.ctor :: RegEx Match :: (04:49:33) MalzDruid's Prayer of Mending heals MalzSent for 667 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzSent
.ctor :: RegEx Match :: Value      = 667
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 667
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5910
ParseLine :: AddCombatAction :: Target     = MalzSent
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:33) MalzDruid's Prayer of Mending heals MalzDruid for 612 points.
.ctor :: (04:49:33) MalzDruid's Prayer of Mending heals MalzDruid for 612 points.
.ctor :: RegEx Match :: (04:49:33) MalzDruid's Prayer of Mending heals MalzDruid for 612 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 612
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 612
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5912
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:33) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:33) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:33) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5914
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:33) MalzSent's Righteous Word of Binding smites Vorok Mud-Chief for 502 points of damage!
.ctor :: (04:49:33) MalzSent's Righteous Word of Binding smites Vorok Mud-Chief for 502 points of damage!
.ctor :: RegEx Match :: (04:49:33) MalzSent's Righteous Word of Binding smites Vorok Mud-Chief for 502 points of damage!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 502
.ctor :: RegEx Match :: Value_Type = smite
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 502
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5916
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = smite
ParseLine :: (04:49:33) MalzSent casts Righteous Word of Binding.
.ctor :: (04:49:33) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: (04:49:33) MalzSent casts Righteous Word of Binding.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzSent
.ctor :: RegEx Match :: Ability    = Righteous Word of Binding
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzSent
ParseLine :: AddCombatAction :: Ability    = Righteous Word of Binding
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5918
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:33) The Vorok Mud-Chief misses MalzDruid.
.ctor :: (04:49:33) The Vorok Mud-Chief misses MalzDruid.
.ctor :: RegEx Match :: (04:49:33) The Vorok Mud-Chief misses MalzDruid.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = Vorok Mud-Chief
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = MalzDruid
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = miss
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 15
.ctor :: RegEx Match :: RegExDesc  = Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5920
ParseLine :: AddCombatAction :: Target     = MalzDruid
ParseLine :: AddCombatAction :: Value_Type = miss
ParseLine :: (04:49:33) MalzDruid hits the Vorok Mud-Chief for 35 points of damage.
.ctor :: (04:49:33) MalzDruid hits the Vorok Mud-Chief for 35 points of damage.
.ctor :: RegEx Match :: (04:49:33) MalzDruid hits the Vorok Mud-Chief for 35 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 35
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 35
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5922
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:33) Vorok Mud-Chief's stun immunity has worn off.
.ctor :: (04:49:33) Vorok Mud-Chief's stun immunity has worn off.
ParseLine :: (04:49:33) MalzDruid hits the Vorok Mud-Chief for 22 points of damage.
.ctor :: (04:49:33) MalzDruid hits the Vorok Mud-Chief for 22 points of damage.
.ctor :: RegEx Match :: (04:49:33) MalzDruid hits the Vorok Mud-Chief for 22 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzDruid
.ctor :: RegEx Match :: Ability    = melee
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 22
.ctor :: RegEx Match :: Value_Type = hit
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 8
.ctor :: RegEx Match :: RegExDesc  = Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzDruid
ParseLine :: AddCombatAction :: Ability    = melee
ParseLine :: AddCombatAction :: Value      = 22
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5926
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hit
ParseLine :: (04:49:33) [Combat] Info: You have received 1 Experience Point!
.ctor :: (04:49:33) [Combat] Info: You have received 1 Experience Point!
ParseLine :: (04:49:33) MalzPL casts Earthquake.
.ctor :: (04:49:33) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:33) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5930
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:33) MalzPL's Earthquake hurts Vorok Mud-Chief for 1227 points of damage.
.ctor :: (04:49:33) MalzPL's Earthquake hurts Vorok Mud-Chief for 1227 points of damage.
.ctor :: RegEx Match :: (04:49:33) MalzPL's Earthquake hurts Vorok Mud-Chief for 1227 points of damage.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 1227
.ctor :: RegEx Match :: Value_Type = hurt
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 9
.ctor :: RegEx Match :: RegExDesc  = Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
ParseLine :: AddCombatAction :: Type       = 1
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 1227
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5932
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = hurt
ParseLine :: (04:49:33) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: (04:49:33) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: RegEx Match :: (04:49:33) [Combat] Info: The Vorok Mud-Chief has died!
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:33
.ctor :: RegEx Match :: Source     = Vorok Mud-Chief
.ctor :: RegEx Match :: Ability    = death
.ctor :: RegEx Match :: Target     = Vorok Mud-Chief
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = die
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 27
.ctor :: RegEx Match :: RegExDesc  = Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
ParseLine :: AddCombatAction :: Type       = 0
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Ability    = death
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:33
ParseLine :: AddCombatAction :: Time_Sorter= 5934
ParseLine :: AddCombatAction :: Target     = Vorok Mud-Chief
ParseLine :: AddCombatAction :: Value_Type = die
ParseLine :: (04:49:34) MalzPL casts Earthquake.
.ctor :: (04:49:34) MalzPL casts Earthquake.
.ctor :: RegEx Match :: (04:49:34) MalzPL casts Earthquake.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:34
.ctor :: RegEx Match :: Source     = MalzPL
.ctor :: RegEx Match :: Ability    = Earthquake
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = MalzPL
ParseLine :: AddCombatAction :: Ability    = Earthquake
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:34
ParseLine :: AddCombatAction :: Time_Sorter= 5936
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:34) MaDmanCH looks more agile!
.ctor :: (04:49:34) MaDmanCH looks more agile!
ParseLine :: (04:49:34) MaDmanCH feels warded from harm.
.ctor :: (04:49:34) MaDmanCH feels warded from harm.
ParseLine :: (04:49:34) MaDmanCH looks stronger!
.ctor :: (04:49:34) MaDmanCH looks stronger!
ParseLine :: (04:49:34) MaDmanCH's mana recovery increases.
.ctor :: (04:49:34) MaDmanCH's mana recovery increases.
ParseLine :: (04:49:34) MaDmanCH looks smarter and glows with an inner light.
.ctor :: (04:49:34) MaDmanCH looks smarter and glows with an inner light.
ParseLine :: (04:49:34) MaDmanCH looks healthier!
.ctor :: (04:49:34) MaDmanCH looks healthier!
ParseLine :: (04:49:34) MaDmanCH attacks more quickly.
.ctor :: (04:49:34) MaDmanCH attacks more quickly.
ParseLine :: (04:49:34) MaDmanCH looks smarter and glows with an inner light.
.ctor :: (04:49:34) MaDmanCH looks smarter and glows with an inner light.
ParseLine :: (04:49:34) MaDmanCH feels warded from harm.
.ctor :: (04:49:34) MaDmanCH feels warded from harm.
ParseLine :: (04:49:34) Moony looks more agile!
.ctor :: (04:49:34) Moony looks more agile!
ParseLine :: (04:49:34) Moony looks stronger!
.ctor :: (04:49:34) Moony looks stronger!
ParseLine :: (04:49:34) Moony is surrounded by a protective shield.
.ctor :: (04:49:34) Moony is surrounded by a protective shield.
.ctor :: RegEx Match :: (04:49:34) Moony is surrounded by a protective shield.
.ctor :: RegEx Match :: Valid      = False
.ctor :: RegEx Match :: Time       = 04:49:34
.ctor :: RegEx Match :: Source     = protective shield
.ctor :: RegEx Match :: Ability    = 
.ctor :: RegEx Match :: Target     = 
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = surround
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 19
.ctor :: RegEx Match :: RegExDesc  = Shadow Mantle :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) [areis]+ (?<type>surround)ed by a (?<source>.*)[\.!]
ParseLine :: (04:49:34) Moony's mana recovery increases.
.ctor :: (04:49:34) Moony's mana recovery increases.
ParseLine :: (04:49:34) Moony looks smarter and glows with an inner light.
.ctor :: (04:49:34) Moony looks smarter and glows with an inner light.
ParseLine :: (04:49:34) Moony looks healthier!
.ctor :: (04:49:34) Moony looks healthier!
ParseLine :: (04:49:34) Moony attacks more quickly.
.ctor :: (04:49:34) Moony attacks more quickly.
ParseLine :: (04:49:34) Moony looks smarter and glows with an inner light.
.ctor :: (04:49:34) Moony looks smarter and glows with an inner light.
ParseLine :: (04:49:34) Moony feels warded from harm.
.ctor :: (04:49:34) Moony feels warded from harm.
ParseLine :: (04:49:34) FQc looks much faster!
.ctor :: (04:49:34) FQc looks much faster!
ParseLine :: (04:49:34) FQc looks much faster!
.ctor :: (04:49:34) FQc looks much faster!
ParseLine :: (04:49:34) Syl looks more agile!
.ctor :: (04:49:34) Syl looks more agile!
ParseLine :: (04:49:34) Syl looks stronger!
.ctor :: (04:49:34) Syl looks stronger!
ParseLine :: (04:49:34) Syl's mana recovery increases.
.ctor :: (04:49:34) Syl's mana recovery increases.
ParseLine :: (04:49:34) Syl looks smarter and glows with an inner light.
.ctor :: (04:49:34) Syl looks smarter and glows with an inner light.
ParseLine :: (04:49:34) Syl looks healthier!
.ctor :: (04:49:34) Syl looks healthier!
ParseLine :: (04:49:34) Syl attacks more quickly.
.ctor :: (04:49:34) Syl attacks more quickly.
ParseLine :: (04:49:34) Syl looks smarter and glows with an inner light.
.ctor :: (04:49:34) Syl looks smarter and glows with an inner light.
ParseLine :: (04:49:34) Syl feels warded from harm.
.ctor :: (04:49:34) Syl feels warded from harm.
ParseLine :: (04:49:34) blzbmb feels more deadly!
.ctor :: (04:49:34) blzbmb feels more deadly!
ParseLine :: (04:49:34) blzbmb feels more deadly!
.ctor :: (04:49:34) blzbmb feels more deadly!
ParseLine :: (04:49:34) Cigar looks more agile!
.ctor :: (04:49:34) Cigar looks more agile!
ParseLine :: (04:49:34) Cigar feels warded from harm.
.ctor :: (04:49:34) Cigar feels warded from harm.
ParseLine :: (04:49:34) Cigar looks stronger!
.ctor :: (04:49:34) Cigar looks stronger!
ParseLine :: (04:49:34) Cigar's mana recovery increases.
.ctor :: (04:49:34) Cigar's mana recovery increases.
ParseLine :: (04:49:34) Cigar looks healthier!
.ctor :: (04:49:34) Cigar looks healthier!
ParseLine :: (04:49:34) Cigar attacks more quickly.
.ctor :: (04:49:34) Cigar attacks more quickly.
ParseLine :: (04:49:34) Cigar feels warded from harm.
.ctor :: (04:49:34) Cigar feels warded from harm.
ParseLine :: (04:49:34) FYmss looks more agile!
.ctor :: (04:49:34) FYmss looks more agile!
ParseLine :: (04:49:34) FYmss feels warded from harm.
.ctor :: (04:49:34) FYmss feels warded from harm.
ParseLine :: (04:49:34) FYmss looks stronger!
.ctor :: (04:49:34) FYmss looks stronger!
ParseLine :: (04:49:34) FYmss's mana recovery increases.
.ctor :: (04:49:34) FYmss's mana recovery increases.
ParseLine :: (04:49:34) FYmss looks smarter and glows with an inner light.
.ctor :: (04:49:34) FYmss looks smarter and glows with an inner light.
ParseLine :: (04:49:34) FYmss attacks more quickly.
.ctor :: (04:49:34) FYmss attacks more quickly.
ParseLine :: (04:49:34) FYmss looks healthier!
.ctor :: (04:49:34) FYmss looks healthier!
ParseLine :: (04:49:34) FYmss looks smarter and glows with an inner light.
.ctor :: (04:49:34) FYmss looks smarter and glows with an inner light.
ParseLine :: (04:49:34) FYmss feels warded from harm.
.ctor :: (04:49:34) FYmss feels warded from harm.
ParseLine :: (04:49:34) Cigar's Divine Recovery heals Waffles for 112 points.
.ctor :: (04:49:34) Cigar's Divine Recovery heals Waffles for 112 points.
.ctor :: RegEx Match :: (04:49:34) Cigar's Divine Recovery heals Waffles for 112 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:34
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 112
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 112
ParseLine :: AddCombatAction :: Time       = 04:49:34
ParseLine :: AddCombatAction :: Time_Sorter= 6030
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:34) Cigar's Divine Recovery heals Waffles for 98 points.
.ctor :: (04:49:34) Cigar's Divine Recovery heals Waffles for 98 points.
.ctor :: RegEx Match :: (04:49:34) Cigar's Divine Recovery heals Waffles for 98 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:34
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 98
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 98
ParseLine :: AddCombatAction :: Time       = 04:49:34
ParseLine :: AddCombatAction :: Time_Sorter= 6032
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:34) Malechey looks more agile!
.ctor :: (04:49:34) Malechey looks more agile!
ParseLine :: (04:49:34) Malechey looks stronger!
.ctor :: (04:49:34) Malechey looks stronger!
ParseLine :: (04:49:34) Malechey feels more deadly!
.ctor :: (04:49:34) Malechey feels more deadly!
ParseLine :: (04:49:34) Malechey looks healthier!
.ctor :: (04:49:34) Malechey looks healthier!
ParseLine :: (04:49:34) Cigar casts Divine Recovery.
.ctor :: (04:49:34) Cigar casts Divine Recovery.
.ctor :: RegEx Match :: (04:49:34) Cigar casts Divine Recovery.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:34
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:34
ParseLine :: AddCombatAction :: Time_Sorter= 6042
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:34) Cigar's Divine Recovery heals Waffles for 83 points.
.ctor :: (04:49:34) Cigar's Divine Recovery heals Waffles for 83 points.
.ctor :: RegEx Match :: (04:49:34) Cigar's Divine Recovery heals Waffles for 83 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:34
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 83
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 83
ParseLine :: AddCombatAction :: Time       = 04:49:34
ParseLine :: AddCombatAction :: Time_Sorter= 6044
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:34) Cigar's Divine Recovery heals Waffles for 72 points.
.ctor :: (04:49:34) Cigar's Divine Recovery heals Waffles for 72 points.
.ctor :: RegEx Match :: (04:49:34) Cigar's Divine Recovery heals Waffles for 72 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:34
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 72
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 72
ParseLine :: AddCombatAction :: Time       = 04:49:34
ParseLine :: AddCombatAction :: Time_Sorter= 6046
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:34) Cigar casts Blessed Purity.
.ctor :: (04:49:34) Cigar casts Blessed Purity.
.ctor :: RegEx Match :: (04:49:34) Cigar casts Blessed Purity.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:34
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Blessed Purity
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Blessed Purity
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:34
ParseLine :: AddCombatAction :: Time_Sorter= 6048
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:34) Cigar's mana recovery increases.
.ctor :: (04:49:34) Cigar's mana recovery increases.
ParseLine :: (04:49:34) Cigar's Divine Recovery heals Waffles for 94 points.
.ctor :: (04:49:34) Cigar's Divine Recovery heals Waffles for 94 points.
.ctor :: RegEx Match :: (04:49:34) Cigar's Divine Recovery heals Waffles for 94 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:34
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 94
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 94
ParseLine :: AddCombatAction :: Time       = 04:49:34
ParseLine :: AddCombatAction :: Time_Sorter= 6052
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:34) Cigar's Divine Recovery heals Waffles for 93 points.
.ctor :: (04:49:34) Cigar's Divine Recovery heals Waffles for 93 points.
.ctor :: RegEx Match :: (04:49:34) Cigar's Divine Recovery heals Waffles for 93 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:34
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 93
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 93
ParseLine :: AddCombatAction :: Time       = 04:49:34
ParseLine :: AddCombatAction :: Time_Sorter= 6054
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:34) Cigar casts Prayer of Protection.
.ctor :: (04:49:34) Cigar casts Prayer of Protection.
.ctor :: RegEx Match :: (04:49:34) Cigar casts Prayer of Protection.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:34
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Prayer of Protection
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Prayer of Protection
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:34
ParseLine :: AddCombatAction :: Time_Sorter= 6056
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:34) Cigar feels warded from harm.
.ctor :: (04:49:34) Cigar feels warded from harm.
ParseLine :: (04:49:34) Cigar's Divine Recovery heals Waffles for 74 points.
.ctor :: (04:49:34) Cigar's Divine Recovery heals Waffles for 74 points.
.ctor :: RegEx Match :: (04:49:34) Cigar's Divine Recovery heals Waffles for 74 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:34
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 74
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 74
ParseLine :: AddCombatAction :: Time       = 04:49:34
ParseLine :: AddCombatAction :: Time_Sorter= 6060
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:34) Cigar's Divine Recovery heals Waffles for 75 points.
.ctor :: (04:49:34) Cigar's Divine Recovery heals Waffles for 75 points.
.ctor :: RegEx Match :: (04:49:34) Cigar's Divine Recovery heals Waffles for 75 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:34
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 75
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 75
ParseLine :: AddCombatAction :: Time       = 04:49:34
ParseLine :: AddCombatAction :: Time_Sorter= 6062
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:35) Cigar's Divine Recovery heals Waffles for 77 points.
.ctor :: (04:49:35) Cigar's Divine Recovery heals Waffles for 77 points.
.ctor :: RegEx Match :: (04:49:35) Cigar's Divine Recovery heals Waffles for 77 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:35
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 77
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 77
ParseLine :: AddCombatAction :: Time       = 04:49:35
ParseLine :: AddCombatAction :: Time_Sorter= 6064
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:35) FQc's speed returns to normal.
.ctor :: (04:49:35) FQc's speed returns to normal.
ParseLine :: (04:49:35) FQc's speed returns to normal.
.ctor :: (04:49:35) FQc's speed returns to normal.
ParseLine :: (04:49:35) Cigar casts Divine Recovery.
.ctor :: (04:49:35) Cigar casts Divine Recovery.
.ctor :: RegEx Match :: (04:49:35) Cigar casts Divine Recovery.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:35
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:35
ParseLine :: AddCombatAction :: Time_Sorter= 6070
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:35) Cigar's Divine Recovery heals Waffles for 94 points.
.ctor :: (04:49:35) Cigar's Divine Recovery heals Waffles for 94 points.
.ctor :: RegEx Match :: (04:49:35) Cigar's Divine Recovery heals Waffles for 94 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:35
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 94
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 94
ParseLine :: AddCombatAction :: Time       = 04:49:35
ParseLine :: AddCombatAction :: Time_Sorter= 6072
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:35) Cigar's Divine Recovery heals Waffles for 65 points.
.ctor :: (04:49:35) Cigar's Divine Recovery heals Waffles for 65 points.
.ctor :: RegEx Match :: (04:49:35) Cigar's Divine Recovery heals Waffles for 65 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:35
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 65
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 65
ParseLine :: AddCombatAction :: Time       = 04:49:35
ParseLine :: AddCombatAction :: Time_Sorter= 6074
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:35) Cigar casts Blessed Purity.
.ctor :: (04:49:35) Cigar casts Blessed Purity.
.ctor :: RegEx Match :: (04:49:35) Cigar casts Blessed Purity.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:35
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Blessed Purity
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Blessed Purity
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:35
ParseLine :: AddCombatAction :: Time_Sorter= 6076
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:35) Cigar's mana recovery increases.
.ctor :: (04:49:35) Cigar's mana recovery increases.
ParseLine :: (04:49:35) Cigar's Divine Recovery heals Waffles for 108 points.
.ctor :: (04:49:35) Cigar's Divine Recovery heals Waffles for 108 points.
.ctor :: RegEx Match :: (04:49:35) Cigar's Divine Recovery heals Waffles for 108 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:35
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 108
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 108
ParseLine :: AddCombatAction :: Time       = 04:49:35
ParseLine :: AddCombatAction :: Time_Sorter= 6080
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:35) [System] Info: You will teleport in 10 seconds
.ctor :: (04:49:35) [System] Info: You will teleport in 10 seconds
ParseLine :: (04:49:35) Zorgs is wrapped in a cloak of shadows.
.ctor :: (04:49:35) Zorgs is wrapped in a cloak of shadows.
ParseLine :: (04:49:35) Cigar's Divine Recovery heals Waffles for 83 points.
.ctor :: (04:49:35) Cigar's Divine Recovery heals Waffles for 83 points.
.ctor :: RegEx Match :: (04:49:35) Cigar's Divine Recovery heals Waffles for 83 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:35
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 83
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 83
ParseLine :: AddCombatAction :: Time       = 04:49:35
ParseLine :: AddCombatAction :: Time_Sorter= 6086
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:35) Cigar casts Prayer of Protection.
.ctor :: (04:49:35) Cigar casts Prayer of Protection.
.ctor :: RegEx Match :: (04:49:35) Cigar casts Prayer of Protection.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:35
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Prayer of Protection
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Prayer of Protection
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:35
ParseLine :: AddCombatAction :: Time_Sorter= 6088
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:35) Cigar feels warded from harm.
.ctor :: (04:49:35) Cigar feels warded from harm.
ParseLine :: (04:49:35) Cigar's Divine Recovery heals Waffles for 89 points.
.ctor :: (04:49:35) Cigar's Divine Recovery heals Waffles for 89 points.
.ctor :: RegEx Match :: (04:49:35) Cigar's Divine Recovery heals Waffles for 89 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:35
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 89
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 89
ParseLine :: AddCombatAction :: Time       = 04:49:35
ParseLine :: AddCombatAction :: Time_Sorter= 6092
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:35) [System] Info: You will teleport in 10 seconds
.ctor :: (04:49:35) [System] Info: You will teleport in 10 seconds
ParseLine :: (04:49:35) MaDmanCH looks more agile!
.ctor :: (04:49:35) MaDmanCH looks more agile!
ParseLine :: (04:49:35) MaDmanCH feels warded from harm.
.ctor :: (04:49:35) MaDmanCH feels warded from harm.
ParseLine :: (04:49:35) MaDmanCH looks stronger!
.ctor :: (04:49:35) MaDmanCH looks stronger!
ParseLine :: (04:49:35) MaDmanCH's mana recovery increases.
.ctor :: (04:49:35) MaDmanCH's mana recovery increases.
ParseLine :: (04:49:35) MaDmanCH looks smarter and glows with an inner light.
.ctor :: (04:49:35) MaDmanCH looks smarter and glows with an inner light.
ParseLine :: (04:49:35) MaDmanCH looks healthier!
.ctor :: (04:49:35) MaDmanCH looks healthier!
ParseLine :: (04:49:35) MaDmanCH attacks more quickly.
.ctor :: (04:49:35) MaDmanCH attacks more quickly.
ParseLine :: (04:49:35) MaDmanCH looks smarter and glows with an inner light.
.ctor :: (04:49:35) MaDmanCH looks smarter and glows with an inner light.
ParseLine :: (04:49:35) MaDmanCH feels warded from harm.
.ctor :: (04:49:35) MaDmanCH feels warded from harm.
ParseLine :: (04:49:35) Sajeena looks more agile!
.ctor :: (04:49:35) Sajeena looks more agile!
ParseLine :: (04:49:35) Sajeena feels warded from harm.
.ctor :: (04:49:35) Sajeena feels warded from harm.
ParseLine :: (04:49:35) Sajeena looks stronger!
.ctor :: (04:49:35) Sajeena looks stronger!
ParseLine :: (04:49:35) Sajeena's mana recovery increases.
.ctor :: (04:49:35) Sajeena's mana recovery increases.
ParseLine :: (04:49:35) Sajeena looks smarter and glows with an inner light.
.ctor :: (04:49:35) Sajeena looks smarter and glows with an inner light.
ParseLine :: (04:49:35) Sajeena looks healthier!
.ctor :: (04:49:35) Sajeena looks healthier!
ParseLine :: (04:49:35) Sajeena attacks more quickly.
.ctor :: (04:49:35) Sajeena attacks more quickly.
ParseLine :: (04:49:35) Sajeena looks smarter and glows with an inner light.
.ctor :: (04:49:35) Sajeena looks smarter and glows with an inner light.
ParseLine :: (04:49:35) Sajeena feels warded from harm.
.ctor :: (04:49:35) Sajeena feels warded from harm.
ParseLine :: (04:49:35) Nova looks more agile!
.ctor :: (04:49:35) Nova looks more agile!
ParseLine :: (04:49:35) Nova looks stronger!
.ctor :: (04:49:35) Nova looks stronger!
ParseLine :: (04:49:35) Nova is surrounded by a protective shield.
.ctor :: (04:49:35) Nova is surrounded by a protective shield.
.ctor :: RegEx Match :: (04:49:35) Nova is surrounded by a protective shield.
.ctor :: RegEx Match :: Valid      = False
.ctor :: RegEx Match :: Time       = 04:49:35
.ctor :: RegEx Match :: Source     = protective shield
.ctor :: RegEx Match :: Ability    = 
.ctor :: RegEx Match :: Target     = 
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = surround
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 19
.ctor :: RegEx Match :: RegExDesc  = Shadow Mantle :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) [areis]+ (?<type>surround)ed by a (?<source>.*)[\.!]
ParseLine :: (04:49:35) Nova's mana recovery increases.
.ctor :: (04:49:35) Nova's mana recovery increases.
ParseLine :: (04:49:35) Nova looks smarter and glows with an inner light.
.ctor :: (04:49:35) Nova looks smarter and glows with an inner light.
ParseLine :: (04:49:35) Nova looks healthier!
.ctor :: (04:49:35) Nova looks healthier!
ParseLine :: (04:49:35) Nova attacks more quickly.
.ctor :: (04:49:35) Nova attacks more quickly.
ParseLine :: (04:49:35) Nova looks smarter and glows with an inner light.
.ctor :: (04:49:35) Nova looks smarter and glows with an inner light.
ParseLine :: (04:49:35) Nova feels warded from harm.
.ctor :: (04:49:35) Nova feels warded from harm.
ParseLine :: (04:49:35) BillyNoo is steeled with Dark Fortitude!
.ctor :: (04:49:35) BillyNoo is steeled with Dark Fortitude!
ParseLine :: (04:49:35) BillyNoo is surrounded by a protective shield.
.ctor :: (04:49:35) BillyNoo is surrounded by a protective shield.
.ctor :: RegEx Match :: (04:49:35) BillyNoo is surrounded by a protective shield.
.ctor :: RegEx Match :: Valid      = False
.ctor :: RegEx Match :: Time       = 04:49:35
.ctor :: RegEx Match :: Source     = protective shield
.ctor :: RegEx Match :: Ability    = 
.ctor :: RegEx Match :: Target     = 
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = surround
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 19
.ctor :: RegEx Match :: RegExDesc  = Shadow Mantle :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) [areis]+ (?<type>surround)ed by a (?<source>.*)[\.!]
ParseLine :: (04:49:35) BillyNoo looks focused.
.ctor :: (04:49:35) BillyNoo looks focused.
ParseLine :: (04:49:35) Syl looks more agile!
.ctor :: (04:49:35) Syl looks more agile!
ParseLine :: (04:49:35) Syl looks stronger!
.ctor :: (04:49:35) Syl looks stronger!
ParseLine :: (04:49:35) Syl's mana recovery increases.
.ctor :: (04:49:35) Syl's mana recovery increases.
ParseLine :: (04:49:35) Syl looks smarter and glows with an inner light.
.ctor :: (04:49:35) Syl looks smarter and glows with an inner light.
ParseLine :: (04:49:35) Syl looks healthier!
.ctor :: (04:49:35) Syl looks healthier!
ParseLine :: (04:49:35) Syl attacks more quickly.
.ctor :: (04:49:35) Syl attacks more quickly.
ParseLine :: (04:49:35) Syl looks smarter and glows with an inner light.
.ctor :: (04:49:35) Syl looks smarter and glows with an inner light.
ParseLine :: (04:49:35) Syl feels warded from harm.
.ctor :: (04:49:35) Syl feels warded from harm.
ParseLine :: (04:49:35) Batwoman is surrounded by a protective shield.
.ctor :: (04:49:35) Batwoman is surrounded by a protective shield.
.ctor :: RegEx Match :: (04:49:35) Batwoman is surrounded by a protective shield.
.ctor :: RegEx Match :: Valid      = False
.ctor :: RegEx Match :: Time       = 04:49:35
.ctor :: RegEx Match :: Source     = protective shield
.ctor :: RegEx Match :: Ability    = 
.ctor :: RegEx Match :: Target     = 
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = surround
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 19
.ctor :: RegEx Match :: RegExDesc  = Shadow Mantle :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) [areis]+ (?<type>surround)ed by a (?<source>.*)[\.!]
ParseLine :: (04:49:35) Moony looks more agile!
.ctor :: (04:49:35) Moony looks more agile!
ParseLine :: (04:49:35) Moony looks stronger!
.ctor :: (04:49:35) Moony looks stronger!
ParseLine :: (04:49:35) Moony is surrounded by a protective shield.
.ctor :: (04:49:35) Moony is surrounded by a protective shield.
.ctor :: RegEx Match :: (04:49:35) Moony is surrounded by a protective shield.
.ctor :: RegEx Match :: Valid      = False
.ctor :: RegEx Match :: Time       = 04:49:35
.ctor :: RegEx Match :: Source     = protective shield
.ctor :: RegEx Match :: Ability    = 
.ctor :: RegEx Match :: Target     = 
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = surround
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 19
.ctor :: RegEx Match :: RegExDesc  = Shadow Mantle :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) [areis]+ (?<type>surround)ed by a (?<source>.*)[\.!]
ParseLine :: (04:49:35) Moony's mana recovery increases.
.ctor :: (04:49:35) Moony's mana recovery increases.
ParseLine :: (04:49:35) Moony looks smarter and glows with an inner light.
.ctor :: (04:49:35) Moony looks smarter and glows with an inner light.
ParseLine :: (04:49:35) Moony looks healthier!
.ctor :: (04:49:35) Moony looks healthier!
ParseLine :: (04:49:35) Moony attacks more quickly.
.ctor :: (04:49:35) Moony attacks more quickly.
ParseLine :: (04:49:35) Moony looks smarter and glows with an inner light.
.ctor :: (04:49:35) Moony looks smarter and glows with an inner light.
ParseLine :: (04:49:35) Moony feels warded from harm.
.ctor :: (04:49:35) Moony feels warded from harm.
ParseLine :: (04:49:36) AllahPon is resistant to fire and cold.
.ctor :: (04:49:36) AllahPon is resistant to fire and cold.
ParseLine :: (04:49:36) SilverSurfer is now able to fly!
.ctor :: (04:49:36) SilverSurfer is now able to fly!
ParseLine :: (04:49:36) SilverSurfer looks more agile!
.ctor :: (04:49:36) SilverSurfer looks more agile!
ParseLine :: (04:49:36) SilverSurfer's flesh becomes as hard as granite!
.ctor :: (04:49:36) SilverSurfer's flesh becomes as hard as granite!
ParseLine :: (04:49:36) SilverSurfer looks stronger!
.ctor :: (04:49:36) SilverSurfer looks stronger!
ParseLine :: (04:49:36) SilverSurfer's mana recovery increases.
.ctor :: (04:49:36) SilverSurfer's mana recovery increases.
ParseLine :: (04:49:36) SilverSurfer looks smarter and glows with an inner light.
.ctor :: (04:49:36) SilverSurfer looks smarter and glows with an inner light.
ParseLine :: (04:49:36) SilverSurfer looks healthier!
.ctor :: (04:49:36) SilverSurfer looks healthier!
ParseLine :: (04:49:36) SilverSurfer attacks more quickly.
.ctor :: (04:49:36) SilverSurfer attacks more quickly.
ParseLine :: (04:49:36) SilverSurfer looks smarter and glows with an inner light.
.ctor :: (04:49:36) SilverSurfer looks smarter and glows with an inner light.
ParseLine :: (04:49:36) SilverSurfer feels warded from harm.
.ctor :: (04:49:36) SilverSurfer feels warded from harm.
ParseLine :: (04:49:36) Screeech looks more agile!
.ctor :: (04:49:36) Screeech looks more agile!
ParseLine :: (04:49:36) Screeech looks stronger!
.ctor :: (04:49:36) Screeech looks stronger!
ParseLine :: (04:49:36) Screeech is surrounded by a protective shield.
.ctor :: (04:49:36) Screeech is surrounded by a protective shield.
.ctor :: RegEx Match :: (04:49:36) Screeech is surrounded by a protective shield.
.ctor :: RegEx Match :: Valid      = False
.ctor :: RegEx Match :: Time       = 04:49:36
.ctor :: RegEx Match :: Source     = protective shield
.ctor :: RegEx Match :: Ability    = 
.ctor :: RegEx Match :: Target     = 
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = surround
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 19
.ctor :: RegEx Match :: RegExDesc  = Shadow Mantle :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) [areis]+ (?<type>surround)ed by a (?<source>.*)[\.!]
ParseLine :: (04:49:36) Screeech's mana recovery increases.
.ctor :: (04:49:36) Screeech's mana recovery increases.
ParseLine :: (04:49:36) Screeech looks smarter and glows with an inner light.
.ctor :: (04:49:36) Screeech looks smarter and glows with an inner light.
ParseLine :: (04:49:36) Screeech looks healthier!
.ctor :: (04:49:36) Screeech looks healthier!
ParseLine :: (04:49:36) Screeech attacks more quickly.
.ctor :: (04:49:36) Screeech attacks more quickly.
ParseLine :: (04:49:36) Screeech looks smarter and glows with an inner light.
.ctor :: (04:49:36) Screeech looks smarter and glows with an inner light.
ParseLine :: (04:49:36) Screeech feels warded from harm.
.ctor :: (04:49:36) Screeech feels warded from harm.
ParseLine :: (04:49:36) Sajeena's Prayer of Mending heals Nova for 372 points.
.ctor :: (04:49:36) Sajeena's Prayer of Mending heals Nova for 372 points.
.ctor :: RegEx Match :: (04:49:36) Sajeena's Prayer of Mending heals Nova for 372 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:36
.ctor :: RegEx Match :: Source     = Sajeena
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = Nova
.ctor :: RegEx Match :: Value      = 372
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Sajeena
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 372
ParseLine :: AddCombatAction :: Time       = 04:49:36
ParseLine :: AddCombatAction :: Time_Sorter= 6232
ParseLine :: AddCombatAction :: Target     = Nova
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:36) Bukk looks more agile!
.ctor :: (04:49:36) Bukk looks more agile!
ParseLine :: (04:49:36) Bukk looks stronger!
.ctor :: (04:49:36) Bukk looks stronger!
ParseLine :: (04:49:36) Bukk's mana recovery increases.
.ctor :: (04:49:36) Bukk's mana recovery increases.
ParseLine :: (04:49:36) Bukk looks smarter and glows with an inner light.
.ctor :: (04:49:36) Bukk looks smarter and glows with an inner light.
ParseLine :: (04:49:36) Bukk looks healthier!
.ctor :: (04:49:36) Bukk looks healthier!
ParseLine :: (04:49:36) Bukk attacks more quickly.
.ctor :: (04:49:36) Bukk attacks more quickly.
ParseLine :: (04:49:36) Bukk looks smarter and glows with an inner light.
.ctor :: (04:49:36) Bukk looks smarter and glows with an inner light.
ParseLine :: (04:49:36) Bukk feels warded from harm.
.ctor :: (04:49:36) Bukk feels warded from harm.
ParseLine :: (04:49:36) Sajeena's Prayer of Mending heals Batwoman for 269 points.
.ctor :: (04:49:36) Sajeena's Prayer of Mending heals Batwoman for 269 points.
.ctor :: RegEx Match :: (04:49:36) Sajeena's Prayer of Mending heals Batwoman for 269 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:36
.ctor :: RegEx Match :: Source     = Sajeena
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = Batwoman
.ctor :: RegEx Match :: Value      = 269
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Sajeena
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 269
ParseLine :: AddCombatAction :: Time       = 04:49:36
ParseLine :: AddCombatAction :: Time_Sorter= 6250
ParseLine :: AddCombatAction :: Target     = Batwoman
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:36) Zorgs is wrapped in a cloak of shadows.
.ctor :: (04:49:36) Zorgs is wrapped in a cloak of shadows.
ParseLine :: (04:49:36) Sajeena's Prayer of Mending heals SilverSurfer for 255 points.
.ctor :: (04:49:36) Sajeena's Prayer of Mending heals SilverSurfer for 255 points.
.ctor :: RegEx Match :: (04:49:36) Sajeena's Prayer of Mending heals SilverSurfer for 255 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:36
.ctor :: RegEx Match :: Source     = Sajeena
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = SilverSurfer
.ctor :: RegEx Match :: Value      = 255
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Sajeena
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 255
ParseLine :: AddCombatAction :: Time       = 04:49:36
ParseLine :: AddCombatAction :: Time_Sorter= 6254
ParseLine :: AddCombatAction :: Target     = SilverSurfer
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:36) Sajeena's Prayer of Mending heals Bukk for 274 points.
.ctor :: (04:49:36) Sajeena's Prayer of Mending heals Bukk for 274 points.
.ctor :: RegEx Match :: (04:49:36) Sajeena's Prayer of Mending heals Bukk for 274 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:36
.ctor :: RegEx Match :: Source     = Sajeena
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = Bukk
.ctor :: RegEx Match :: Value      = 274
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Sajeena
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 274
ParseLine :: AddCombatAction :: Time       = 04:49:36
ParseLine :: AddCombatAction :: Time_Sorter= 6256
ParseLine :: AddCombatAction :: Target     = Bukk
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:36) Sajeena's Prayer of Mending heals Sajeena for 504 points.
.ctor :: (04:49:36) Sajeena's Prayer of Mending heals Sajeena for 504 points.
.ctor :: RegEx Match :: (04:49:36) Sajeena's Prayer of Mending heals Sajeena for 504 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:36
.ctor :: RegEx Match :: Source     = Sajeena
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = Sajeena
.ctor :: RegEx Match :: Value      = 504
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Sajeena
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 504
ParseLine :: AddCombatAction :: Time       = 04:49:36
ParseLine :: AddCombatAction :: Time_Sorter= 6258
ParseLine :: AddCombatAction :: Target     = Sajeena
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:36) Cigar looks more agile!
.ctor :: (04:49:36) Cigar looks more agile!
ParseLine :: (04:49:36) Cigar feels warded from harm.
.ctor :: (04:49:36) Cigar feels warded from harm.
ParseLine :: (04:49:36) Cigar looks stronger!
.ctor :: (04:49:36) Cigar looks stronger!
ParseLine :: (04:49:36) Cigar's mana recovery increases.
.ctor :: (04:49:36) Cigar's mana recovery increases.
ParseLine :: (04:49:36) Cigar looks healthier!
.ctor :: (04:49:36) Cigar looks healthier!
ParseLine :: (04:49:36) Cigar attacks more quickly.
.ctor :: (04:49:36) Cigar attacks more quickly.
ParseLine :: (04:49:36) Cigar feels warded from harm.
.ctor :: (04:49:36) Cigar feels warded from harm.
ParseLine :: (04:49:36) Cigar's Divine Recovery heals Waffles for 80 points.
.ctor :: (04:49:36) Cigar's Divine Recovery heals Waffles for 80 points.
.ctor :: RegEx Match :: (04:49:36) Cigar's Divine Recovery heals Waffles for 80 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:36
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 80
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 80
ParseLine :: AddCombatAction :: Time       = 04:49:36
ParseLine :: AddCombatAction :: Time_Sorter= 6274
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:36) FYmss looks more agile!
.ctor :: (04:49:36) FYmss looks more agile!
ParseLine :: (04:49:36) FYmss feels warded from harm.
.ctor :: (04:49:36) FYmss feels warded from harm.
ParseLine :: (04:49:36) FYmss looks stronger!
.ctor :: (04:49:36) FYmss looks stronger!
ParseLine :: (04:49:36) FYmss's mana recovery increases.
.ctor :: (04:49:36) FYmss's mana recovery increases.
ParseLine :: (04:49:36) FYmss looks smarter and glows with an inner light.
.ctor :: (04:49:36) FYmss looks smarter and glows with an inner light.
ParseLine :: (04:49:36) FYmss attacks more quickly.
.ctor :: (04:49:36) FYmss attacks more quickly.
ParseLine :: (04:49:36) FYmss looks healthier!
.ctor :: (04:49:36) FYmss looks healthier!
ParseLine :: (04:49:36) FYmss looks smarter and glows with an inner light.
.ctor :: (04:49:36) FYmss looks smarter and glows with an inner light.
ParseLine :: (04:49:36) FYmss feels warded from harm.
.ctor :: (04:49:36) FYmss feels warded from harm.
ParseLine :: (04:49:36) Malechey looks more agile!
.ctor :: (04:49:36) Malechey looks more agile!
ParseLine :: (04:49:36) Malechey looks stronger!
.ctor :: (04:49:36) Malechey looks stronger!
ParseLine :: (04:49:36) Malechey feels more deadly!
.ctor :: (04:49:36) Malechey feels more deadly!
ParseLine :: (04:49:36) Malechey looks healthier!
.ctor :: (04:49:36) Malechey looks healthier!
ParseLine :: (04:49:36) Cigar casts Divine Recovery.
.ctor :: (04:49:36) Cigar casts Divine Recovery.
.ctor :: RegEx Match :: (04:49:36) Cigar casts Divine Recovery.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:36
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:36
ParseLine :: AddCombatAction :: Time_Sorter= 6302
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:36) Cigar's Divine Recovery heals Waffles for 104 points.
.ctor :: (04:49:36) Cigar's Divine Recovery heals Waffles for 104 points.
.ctor :: RegEx Match :: (04:49:36) Cigar's Divine Recovery heals Waffles for 104 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:36
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 104
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 104
ParseLine :: AddCombatAction :: Time       = 04:49:36
ParseLine :: AddCombatAction :: Time_Sorter= 6304
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:36) Cigar's Divine Recovery heals Waffles for 100 points.
.ctor :: (04:49:36) Cigar's Divine Recovery heals Waffles for 100 points.
.ctor :: RegEx Match :: (04:49:36) Cigar's Divine Recovery heals Waffles for 100 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:36
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 100
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 100
ParseLine :: AddCombatAction :: Time       = 04:49:36
ParseLine :: AddCombatAction :: Time_Sorter= 6306
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:36) Cigar casts Blessed Purity.
.ctor :: (04:49:36) Cigar casts Blessed Purity.
.ctor :: RegEx Match :: (04:49:36) Cigar casts Blessed Purity.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:36
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Blessed Purity
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Blessed Purity
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:36
ParseLine :: AddCombatAction :: Time_Sorter= 6308
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:36) Cigar's mana recovery increases.
.ctor :: (04:49:36) Cigar's mana recovery increases.
ParseLine :: (04:49:36) Cigar's Divine Recovery heals Waffles for 103 points.
.ctor :: (04:49:36) Cigar's Divine Recovery heals Waffles for 103 points.
.ctor :: RegEx Match :: (04:49:36) Cigar's Divine Recovery heals Waffles for 103 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:36
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 103
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 103
ParseLine :: AddCombatAction :: Time       = 04:49:36
ParseLine :: AddCombatAction :: Time_Sorter= 6312
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:36) Cigar's Divine Recovery heals Waffles for 107 points.
.ctor :: (04:49:36) Cigar's Divine Recovery heals Waffles for 107 points.
.ctor :: RegEx Match :: (04:49:36) Cigar's Divine Recovery heals Waffles for 107 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:36
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 107
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 107
ParseLine :: AddCombatAction :: Time       = 04:49:36
ParseLine :: AddCombatAction :: Time_Sorter= 6314
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:36) Cigar casts Prayer of Protection.
.ctor :: (04:49:36) Cigar casts Prayer of Protection.
.ctor :: RegEx Match :: (04:49:36) Cigar casts Prayer of Protection.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:36
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Prayer of Protection
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Prayer of Protection
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:36
ParseLine :: AddCombatAction :: Time_Sorter= 6316
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:36) Cigar feels warded from harm.
.ctor :: (04:49:36) Cigar feels warded from harm.
ParseLine :: (04:49:37) Cigar's Divine Recovery heals Waffles for 66 points.
.ctor :: (04:49:37) Cigar's Divine Recovery heals Waffles for 66 points.
.ctor :: RegEx Match :: (04:49:37) Cigar's Divine Recovery heals Waffles for 66 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 66
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 66
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6320
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) Cigar's Divine Recovery heals Waffles for 92 points.
.ctor :: (04:49:37) Cigar's Divine Recovery heals Waffles for 92 points.
.ctor :: RegEx Match :: (04:49:37) Cigar's Divine Recovery heals Waffles for 92 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 92
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 92
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6322
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) Cigar's Divine Recovery heals Waffles for 92 points.
.ctor :: (04:49:37) Cigar's Divine Recovery heals Waffles for 92 points.
.ctor :: RegEx Match :: (04:49:37) Cigar's Divine Recovery heals Waffles for 92 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 92
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 92
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6324
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) Malechey feels less deadly.
.ctor :: (04:49:37) Malechey feels less deadly.
ParseLine :: (04:49:37) Cigar casts Divine Recovery.
.ctor :: (04:49:37) Cigar casts Divine Recovery.
.ctor :: RegEx Match :: (04:49:37) Cigar casts Divine Recovery.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6328
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:37) Cigar's Divine Recovery heals Waffles for 104 points.
.ctor :: (04:49:37) Cigar's Divine Recovery heals Waffles for 104 points.
.ctor :: RegEx Match :: (04:49:37) Cigar's Divine Recovery heals Waffles for 104 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 104
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 104
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6330
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) Nino uses Precision.
.ctor :: (04:49:37) Nino uses Precision.
.ctor :: RegEx Match :: (04:49:37) Nino uses Precision.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Nino
.ctor :: RegEx Match :: Ability    = Precision
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = use
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 24
.ctor :: RegEx Match :: RegExDesc  = Use power -- use :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>use)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Nino
ParseLine :: AddCombatAction :: Ability    = Precision
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6332
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = use
ParseLine :: (04:49:37) Nino starts shooting more accurately!
.ctor :: (04:49:37) Nino starts shooting more accurately!
ParseLine :: (04:49:37) Cigar's Divine Recovery heals Waffles for 72 points.
.ctor :: (04:49:37) Cigar's Divine Recovery heals Waffles for 72 points.
.ctor :: RegEx Match :: (04:49:37) Cigar's Divine Recovery heals Waffles for 72 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 72
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 72
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6336
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) Cigar casts Blessed Purity.
.ctor :: (04:49:37) Cigar casts Blessed Purity.
.ctor :: RegEx Match :: (04:49:37) Cigar casts Blessed Purity.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Blessed Purity
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Blessed Purity
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6338
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:37) Cigar's mana recovery increases.
.ctor :: (04:49:37) Cigar's mana recovery increases.
ParseLine :: (04:49:37) Nino uses Treat Wounds.
.ctor :: (04:49:37) Nino uses Treat Wounds.
.ctor :: RegEx Match :: (04:49:37) Nino uses Treat Wounds.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Nino
.ctor :: RegEx Match :: Ability    = Treat Wounds
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = use
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 24
.ctor :: RegEx Match :: RegExDesc  = Use power -- use :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>use)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Nino
ParseLine :: AddCombatAction :: Ability    = Treat Wounds
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6342
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = use
ParseLine :: (04:49:37) Nino's Treat Wounds heals Nino for 144 points.
.ctor :: (04:49:37) Nino's Treat Wounds heals Nino for 144 points.
.ctor :: RegEx Match :: (04:49:37) Nino's Treat Wounds heals Nino for 144 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Nino
.ctor :: RegEx Match :: Ability    = Treat Wounds
.ctor :: RegEx Match :: Target     = Nino
.ctor :: RegEx Match :: Value      = 144
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Nino
ParseLine :: AddCombatAction :: Ability    = Treat Wounds
ParseLine :: AddCombatAction :: Value      = 144
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6344
ParseLine :: AddCombatAction :: Target     = Nino
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) Cigar's Divine Recovery heals Waffles for 91 points.
.ctor :: (04:49:37) Cigar's Divine Recovery heals Waffles for 91 points.
.ctor :: RegEx Match :: (04:49:37) Cigar's Divine Recovery heals Waffles for 91 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 91
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 91
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6346
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) Cigar's Divine Recovery heals Waffles for 78 points.
.ctor :: (04:49:37) Cigar's Divine Recovery heals Waffles for 78 points.
.ctor :: RegEx Match :: (04:49:37) Cigar's Divine Recovery heals Waffles for 78 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 78
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 78
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6348
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) Sajeena casts Prayer of Mending.
.ctor :: (04:49:37) Sajeena casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:37) Sajeena casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Sajeena
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Sajeena
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6350
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:37) Sajeena's Prayer of Mending heals Moony for 293 points.
.ctor :: (04:49:37) Sajeena's Prayer of Mending heals Moony for 293 points.
.ctor :: RegEx Match :: (04:49:37) Sajeena's Prayer of Mending heals Moony for 293 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Sajeena
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = Moony
.ctor :: RegEx Match :: Value      = 293
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Sajeena
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 293
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6352
ParseLine :: AddCombatAction :: Target     = Moony
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) Sajeena's Prayer of Mending heals SilverSurfer for 226 points.
.ctor :: (04:49:37) Sajeena's Prayer of Mending heals SilverSurfer for 226 points.
.ctor :: RegEx Match :: (04:49:37) Sajeena's Prayer of Mending heals SilverSurfer for 226 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Sajeena
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = SilverSurfer
.ctor :: RegEx Match :: Value      = 226
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Sajeena
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 226
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6354
ParseLine :: AddCombatAction :: Target     = SilverSurfer
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) Sajeena's Prayer of Mending heals Sajeena for 262 points.
.ctor :: (04:49:37) Sajeena's Prayer of Mending heals Sajeena for 262 points.
.ctor :: RegEx Match :: (04:49:37) Sajeena's Prayer of Mending heals Sajeena for 262 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Sajeena
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = Sajeena
.ctor :: RegEx Match :: Value      = 262
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Sajeena
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 262
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6356
ParseLine :: AddCombatAction :: Target     = Sajeena
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) Sajeena's Prayer of Mending heals Batwoman for 381 points.
.ctor :: (04:49:37) Sajeena's Prayer of Mending heals Batwoman for 381 points.
.ctor :: RegEx Match :: (04:49:37) Sajeena's Prayer of Mending heals Batwoman for 381 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Sajeena
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = Batwoman
.ctor :: RegEx Match :: Value      = 381
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Sajeena
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 381
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6358
ParseLine :: AddCombatAction :: Target     = Batwoman
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) Sajeena's Prayer of Mending heals Bukk for 406 points.
.ctor :: (04:49:37) Sajeena's Prayer of Mending heals Bukk for 406 points.
.ctor :: RegEx Match :: (04:49:37) Sajeena's Prayer of Mending heals Bukk for 406 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Sajeena
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = Bukk
.ctor :: RegEx Match :: Value      = 406
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Sajeena
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 406
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6360
ParseLine :: AddCombatAction :: Target     = Bukk
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) Cigar casts Prayer of Protection.
.ctor :: (04:49:37) Cigar casts Prayer of Protection.
.ctor :: RegEx Match :: (04:49:37) Cigar casts Prayer of Protection.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Prayer of Protection
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Prayer of Protection
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6362
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:37) Cigar feels warded from harm.
.ctor :: (04:49:37) Cigar feels warded from harm.
ParseLine :: (04:49:37) Cigar's Divine Recovery heals Waffles for 84 points.
.ctor :: (04:49:37) Cigar's Divine Recovery heals Waffles for 84 points.
.ctor :: RegEx Match :: (04:49:37) Cigar's Divine Recovery heals Waffles for 84 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 84
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 84
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6366
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) Cigar's Divine Recovery heals Waffles for 97 points.
.ctor :: (04:49:37) Cigar's Divine Recovery heals Waffles for 97 points.
.ctor :: RegEx Match :: (04:49:37) Cigar's Divine Recovery heals Waffles for 97 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 97
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 97
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6368
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) Cigar's Divine Recovery heals Waffles for 97 points.
.ctor :: (04:49:37) Cigar's Divine Recovery heals Waffles for 97 points.
.ctor :: RegEx Match :: (04:49:37) Cigar's Divine Recovery heals Waffles for 97 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 97
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 97
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6370
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) Sajeena casts Prayer of Mending.
.ctor :: (04:49:37) Sajeena casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:37) Sajeena casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Sajeena
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Sajeena
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6372
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:37) Sajeena's Prayer of Mending heals Moony for 364 points.
.ctor :: (04:49:37) Sajeena's Prayer of Mending heals Moony for 364 points.
.ctor :: RegEx Match :: (04:49:37) Sajeena's Prayer of Mending heals Moony for 364 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Sajeena
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = Moony
.ctor :: RegEx Match :: Value      = 364
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Sajeena
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 364
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6374
ParseLine :: AddCombatAction :: Target     = Moony
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) Sajeena's Prayer of Mending heals SilverSurfer for 399 points.
.ctor :: (04:49:37) Sajeena's Prayer of Mending heals SilverSurfer for 399 points.
.ctor :: RegEx Match :: (04:49:37) Sajeena's Prayer of Mending heals SilverSurfer for 399 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Sajeena
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = SilverSurfer
.ctor :: RegEx Match :: Value      = 399
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Sajeena
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 399
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6376
ParseLine :: AddCombatAction :: Target     = SilverSurfer
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) Sajeena's Prayer of Mending heals Screeech for 343 points.
.ctor :: (04:49:37) Sajeena's Prayer of Mending heals Screeech for 343 points.
.ctor :: RegEx Match :: (04:49:37) Sajeena's Prayer of Mending heals Screeech for 343 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Sajeena
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = Screeech
.ctor :: RegEx Match :: Value      = 343
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Sajeena
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 343
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6378
ParseLine :: AddCombatAction :: Target     = Screeech
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) Sajeena's Prayer of Mending heals Sajeena for 339 points.
.ctor :: (04:49:37) Sajeena's Prayer of Mending heals Sajeena for 339 points.
.ctor :: RegEx Match :: (04:49:37) Sajeena's Prayer of Mending heals Sajeena for 339 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Sajeena
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = Sajeena
.ctor :: RegEx Match :: Value      = 339
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Sajeena
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 339
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6380
ParseLine :: AddCombatAction :: Target     = Sajeena
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) Sajeena's Prayer of Mending heals Batwoman for 337 points.
.ctor :: (04:49:37) Sajeena's Prayer of Mending heals Batwoman for 337 points.
.ctor :: RegEx Match :: (04:49:37) Sajeena's Prayer of Mending heals Batwoman for 337 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Sajeena
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = Batwoman
.ctor :: RegEx Match :: Value      = 337
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Sajeena
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 337
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6382
ParseLine :: AddCombatAction :: Target     = Batwoman
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) Sajeena's Prayer of Mending heals Bukk for 286 points.
.ctor :: (04:49:37) Sajeena's Prayer of Mending heals Bukk for 286 points.
.ctor :: RegEx Match :: (04:49:37) Sajeena's Prayer of Mending heals Bukk for 286 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Sajeena
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = Bukk
.ctor :: RegEx Match :: Value      = 286
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Sajeena
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 286
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6384
ParseLine :: AddCombatAction :: Target     = Bukk
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) Moony's shielding fades.
.ctor :: (04:49:37) Moony's shielding fades.
ParseLine :: (04:49:37) Cigar casts Divine Recovery.
.ctor :: (04:49:37) Cigar casts Divine Recovery.
.ctor :: RegEx Match :: (04:49:37) Cigar casts Divine Recovery.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6388
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:37) Cigar's Divine Recovery heals Waffles for 81 points.
.ctor :: (04:49:37) Cigar's Divine Recovery heals Waffles for 81 points.
.ctor :: RegEx Match :: (04:49:37) Cigar's Divine Recovery heals Waffles for 81 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 81
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 81
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6390
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) Cigar's Divine Recovery heals Waffles for 78 points.
.ctor :: (04:49:37) Cigar's Divine Recovery heals Waffles for 78 points.
.ctor :: RegEx Match :: (04:49:37) Cigar's Divine Recovery heals Waffles for 78 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 78
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 78
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6392
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) Cigar casts Blessed Purity.
.ctor :: (04:49:37) Cigar casts Blessed Purity.
.ctor :: RegEx Match :: (04:49:37) Cigar casts Blessed Purity.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Blessed Purity
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Blessed Purity
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6394
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:37) Cigar's mana recovery increases.
.ctor :: (04:49:37) Cigar's mana recovery increases.
ParseLine :: (04:49:37) Cigar's Divine Recovery heals Waffles for 105 points.
.ctor :: (04:49:37) Cigar's Divine Recovery heals Waffles for 105 points.
.ctor :: RegEx Match :: (04:49:37) Cigar's Divine Recovery heals Waffles for 105 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 105
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 105
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6398
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) Sajeena casts Prayer of Mending.
.ctor :: (04:49:37) Sajeena casts Prayer of Mending.
.ctor :: RegEx Match :: (04:49:37) Sajeena casts Prayer of Mending.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Sajeena
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Sajeena
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6400
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:37) Sajeena's Prayer of Mending heals Moony for 427 points.
.ctor :: (04:49:37) Sajeena's Prayer of Mending heals Moony for 427 points.
.ctor :: RegEx Match :: (04:49:37) Sajeena's Prayer of Mending heals Moony for 427 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Sajeena
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = Moony
.ctor :: RegEx Match :: Value      = 427
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Sajeena
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 427
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6402
ParseLine :: AddCombatAction :: Target     = Moony
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) Sajeena's Prayer of Mending heals SilverSurfer for 380 points.
.ctor :: (04:49:37) Sajeena's Prayer of Mending heals SilverSurfer for 380 points.
.ctor :: RegEx Match :: (04:49:37) Sajeena's Prayer of Mending heals SilverSurfer for 380 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Sajeena
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = SilverSurfer
.ctor :: RegEx Match :: Value      = 380
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Sajeena
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 380
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6404
ParseLine :: AddCombatAction :: Target     = SilverSurfer
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) Sajeena's Prayer of Mending heals Screeech for 325 points.
.ctor :: (04:49:37) Sajeena's Prayer of Mending heals Screeech for 325 points.
.ctor :: RegEx Match :: (04:49:37) Sajeena's Prayer of Mending heals Screeech for 325 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Sajeena
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = Screeech
.ctor :: RegEx Match :: Value      = 325
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Sajeena
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 325
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6406
ParseLine :: AddCombatAction :: Target     = Screeech
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) Sajeena's Prayer of Mending heals Sajeena for 203 points.
.ctor :: (04:49:37) Sajeena's Prayer of Mending heals Sajeena for 203 points.
.ctor :: RegEx Match :: (04:49:37) Sajeena's Prayer of Mending heals Sajeena for 203 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Sajeena
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = Sajeena
.ctor :: RegEx Match :: Value      = 203
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Sajeena
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 203
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6408
ParseLine :: AddCombatAction :: Target     = Sajeena
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) Sajeena's Prayer of Mending heals Batwoman for 240 points.
.ctor :: (04:49:37) Sajeena's Prayer of Mending heals Batwoman for 240 points.
.ctor :: RegEx Match :: (04:49:37) Sajeena's Prayer of Mending heals Batwoman for 240 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Sajeena
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = Batwoman
.ctor :: RegEx Match :: Value      = 240
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Sajeena
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 240
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6410
ParseLine :: AddCombatAction :: Target     = Batwoman
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) Sajeena's Prayer of Mending heals LogicNC for 213 points.
.ctor :: (04:49:37) Sajeena's Prayer of Mending heals LogicNC for 213 points.
.ctor :: RegEx Match :: (04:49:37) Sajeena's Prayer of Mending heals LogicNC for 213 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Sajeena
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = LogicNC
.ctor :: RegEx Match :: Value      = 213
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Sajeena
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 213
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6412
ParseLine :: AddCombatAction :: Target     = LogicNC
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) Sajeena's Prayer of Mending heals Bukk for 339 points.
.ctor :: (04:49:37) Sajeena's Prayer of Mending heals Bukk for 339 points.
.ctor :: RegEx Match :: (04:49:37) Sajeena's Prayer of Mending heals Bukk for 339 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Sajeena
.ctor :: RegEx Match :: Ability    = Prayer of Mending
.ctor :: RegEx Match :: Target     = Bukk
.ctor :: RegEx Match :: Value      = 339
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Sajeena
ParseLine :: AddCombatAction :: Ability    = Prayer of Mending
ParseLine :: AddCombatAction :: Value      = 339
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6414
ParseLine :: AddCombatAction :: Target     = Bukk
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) Cigar's Divine Recovery heals Waffles for 107 points.
.ctor :: (04:49:37) Cigar's Divine Recovery heals Waffles for 107 points.
.ctor :: RegEx Match :: (04:49:37) Cigar's Divine Recovery heals Waffles for 107 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 107
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 107
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6416
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) Rhuthi uses a scroll of Identify.
.ctor :: (04:49:37) Rhuthi uses a scroll of Identify.
.ctor :: RegEx Match :: (04:49:37) Rhuthi uses a scroll of Identify.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Rhuthi
.ctor :: RegEx Match :: Ability    = scroll of Identify
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = use
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 24
.ctor :: RegEx Match :: RegExDesc  = Use power -- use :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>use)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Rhuthi
ParseLine :: AddCombatAction :: Ability    = scroll of Identify
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6418
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = use
ParseLine :: (04:49:37) Cigar casts Prayer of Protection.
.ctor :: (04:49:37) Cigar casts Prayer of Protection.
.ctor :: RegEx Match :: (04:49:37) Cigar casts Prayer of Protection.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Prayer of Protection
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Prayer of Protection
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6420
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:37) Cigar feels warded from harm.
.ctor :: (04:49:37) Cigar feels warded from harm.
ParseLine :: (04:49:37) Cigar's Divine Recovery heals Waffles for 73 points.
.ctor :: (04:49:37) Cigar's Divine Recovery heals Waffles for 73 points.
.ctor :: RegEx Match :: (04:49:37) Cigar's Divine Recovery heals Waffles for 73 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 73
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 73
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6424
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) Screeech casts Calming Melody.
.ctor :: (04:49:37) Screeech casts Calming Melody.
.ctor :: RegEx Match :: (04:49:37) Screeech casts Calming Melody.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Screeech
.ctor :: RegEx Match :: Ability    = Calming Melody
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Screeech
ParseLine :: AddCombatAction :: Ability    = Calming Melody
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6426
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:37) Cigar's Divine Recovery heals Waffles for 89 points.
.ctor :: (04:49:37) Cigar's Divine Recovery heals Waffles for 89 points.
.ctor :: RegEx Match :: (04:49:37) Cigar's Divine Recovery heals Waffles for 89 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 89
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 89
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6428
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) SilverSurfer is no longer able to fly.
.ctor :: (04:49:37) SilverSurfer is no longer able to fly.
ParseLine :: (04:49:37) SilverSurfer's skin returns to normal.
.ctor :: (04:49:37) SilverSurfer's skin returns to normal.
ParseLine :: (04:49:37) Noodle casts Beorc Rune.
.ctor :: (04:49:37) Noodle casts Beorc Rune.
.ctor :: RegEx Match :: (04:49:37) Noodle casts Beorc Rune.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Noodle
.ctor :: RegEx Match :: Ability    = Beorc Rune
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Noodle
ParseLine :: AddCombatAction :: Ability    = Beorc Rune
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6434
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:37) Noodle is resistant to fire and cold.
.ctor :: (04:49:37) Noodle is resistant to fire and cold.
ParseLine :: (04:49:37) Cigar's Divine Recovery heals Waffles for 111 points.
.ctor :: (04:49:37) Cigar's Divine Recovery heals Waffles for 111 points.
.ctor :: RegEx Match :: (04:49:37) Cigar's Divine Recovery heals Waffles for 111 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 111
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 111
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6438
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) Cigar casts Divine Recovery.
.ctor :: (04:49:37) Cigar casts Divine Recovery.
.ctor :: RegEx Match :: (04:49:37) Cigar casts Divine Recovery.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6440
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:37) Cigar's Divine Recovery heals Waffles for 63 points.
.ctor :: (04:49:37) Cigar's Divine Recovery heals Waffles for 63 points.
.ctor :: RegEx Match :: (04:49:37) Cigar's Divine Recovery heals Waffles for 63 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 63
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 63
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6442
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) Cigar's Divine Recovery heals Waffles for 96 points.
.ctor :: (04:49:37) Cigar's Divine Recovery heals Waffles for 96 points.
.ctor :: RegEx Match :: (04:49:37) Cigar's Divine Recovery heals Waffles for 96 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 96
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 96
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6444
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:37) Cigar casts Blessed Purity.
.ctor :: (04:49:37) Cigar casts Blessed Purity.
.ctor :: RegEx Match :: (04:49:37) Cigar casts Blessed Purity.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:37
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Blessed Purity
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Blessed Purity
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:37
ParseLine :: AddCombatAction :: Time_Sorter= 6446
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:38) Cigar's mana recovery increases.
.ctor :: (04:49:38) Cigar's mana recovery increases.
ParseLine :: (04:49:38) WizKILLifa casts Traveling Stance.
.ctor :: (04:49:38) WizKILLifa casts Traveling Stance.
.ctor :: RegEx Match :: (04:49:38) WizKILLifa casts Traveling Stance.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:38
.ctor :: RegEx Match :: Source     = WizKILLifa
.ctor :: RegEx Match :: Ability    = Traveling Stance
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = WizKILLifa
ParseLine :: AddCombatAction :: Ability    = Traveling Stance
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:38
ParseLine :: AddCombatAction :: Time_Sorter= 6450
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:38) WizKILLifa looks much faster!
.ctor :: (04:49:38) WizKILLifa looks much faster!
ParseLine :: (04:49:38) WizKILLifa looks much faster!
.ctor :: (04:49:38) WizKILLifa looks much faster!
ParseLine :: (04:49:38) Cigar's Divine Recovery heals Waffles for 116 points.
.ctor :: (04:49:38) Cigar's Divine Recovery heals Waffles for 116 points.
.ctor :: RegEx Match :: (04:49:38) Cigar's Divine Recovery heals Waffles for 116 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:38
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 116
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 116
ParseLine :: AddCombatAction :: Time       = 04:49:38
ParseLine :: AddCombatAction :: Time_Sorter= 6456
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:38) Bukk assumes Offensive Stance.
.ctor :: (04:49:38) Bukk assumes Offensive Stance.
.ctor :: RegEx Match :: (04:49:38) Bukk assumes Offensive Stance.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:38
.ctor :: RegEx Match :: Source     = Bukk
.ctor :: RegEx Match :: Ability    = Offensive Stance
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = assume
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 23
.ctor :: RegEx Match :: RegExDesc  = Use power -- assume :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>assume)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Bukk
ParseLine :: AddCombatAction :: Ability    = Offensive Stance
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:38
ParseLine :: AddCombatAction :: Time_Sorter= 6458
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = assume
ParseLine :: (04:49:38) DrStrange looks more agile!
.ctor :: (04:49:38) DrStrange looks more agile!
ParseLine :: (04:49:38) DrStrange looks stronger!
.ctor :: (04:49:38) DrStrange looks stronger!
ParseLine :: (04:49:38) DrStrange's mana recovery increases.
.ctor :: (04:49:38) DrStrange's mana recovery increases.
ParseLine :: (04:49:38) DrStrange looks smarter and glows with an inner light.
.ctor :: (04:49:38) DrStrange looks smarter and glows with an inner light.
ParseLine :: (04:49:38) DrStrange looks healthier!
.ctor :: (04:49:38) DrStrange looks healthier!
ParseLine :: (04:49:38) DrStrange attacks more quickly.
.ctor :: (04:49:38) DrStrange attacks more quickly.
ParseLine :: (04:49:38) DrStrange looks smarter and glows with an inner light.
.ctor :: (04:49:38) DrStrange looks smarter and glows with an inner light.
ParseLine :: (04:49:38) DrStrange feels warded from harm.
.ctor :: (04:49:38) DrStrange feels warded from harm.
ParseLine :: (04:49:38) Cigar's Divine Recovery heals Waffles for 64 points.
.ctor :: (04:49:38) Cigar's Divine Recovery heals Waffles for 64 points.
.ctor :: RegEx Match :: (04:49:38) Cigar's Divine Recovery heals Waffles for 64 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:38
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 64
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 64
ParseLine :: AddCombatAction :: Time       = 04:49:38
ParseLine :: AddCombatAction :: Time_Sorter= 6476
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:38) Cigar casts Prayer of Protection.
.ctor :: (04:49:38) Cigar casts Prayer of Protection.
.ctor :: RegEx Match :: (04:49:38) Cigar casts Prayer of Protection.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:38
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Prayer of Protection
.ctor :: RegEx Match :: Target     = none
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = cast
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 22
.ctor :: RegEx Match :: RegExDesc  = Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
ParseLine :: AddCombatAction :: Type       = 2
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Prayer of Protection
ParseLine :: AddCombatAction :: Value      = 0
ParseLine :: AddCombatAction :: Time       = 04:49:38
ParseLine :: AddCombatAction :: Time_Sorter= 6478
ParseLine :: AddCombatAction :: Target     = none
ParseLine :: AddCombatAction :: Value_Type = cast
ParseLine :: (04:49:38) Cigar feels warded from harm.
.ctor :: (04:49:38) Cigar feels warded from harm.
ParseLine :: (04:49:38) Cigar's Divine Recovery heals Waffles for 90 points.
.ctor :: (04:49:38) Cigar's Divine Recovery heals Waffles for 90 points.
.ctor :: RegEx Match :: (04:49:38) Cigar's Divine Recovery heals Waffles for 90 points.
.ctor :: RegEx Match :: Valid      = True
.ctor :: RegEx Match :: Time       = 04:49:38
.ctor :: RegEx Match :: Source     = Cigar
.ctor :: RegEx Match :: Ability    = Divine Recovery
.ctor :: RegEx Match :: Target     = Waffles
.ctor :: RegEx Match :: Value      = 90
.ctor :: RegEx Match :: Value_Type = heal
.ctor :: RegEx Match :: Event_Type = 
.ctor :: RegEx Match :: Event_Deta = 
.ctor :: RegEx Match :: RegExIndx  = 2
.ctor :: RegEx Match :: RegExDesc  = Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
ParseLine :: AddCombatAction :: Type       = 3
ParseLine :: AddCombatAction :: Crit_value = False
ParseLine :: AddCombatAction :: Source     = Cigar
ParseLine :: AddCombatAction :: Ability    = Divine Recovery
ParseLine :: AddCombatAction :: Value      = 90
ParseLine :: AddCombatAction :: Time       = 04:49:38
ParseLine :: AddCombatAction :: Time_Sorter= 6482
ParseLine :: AddCombatAction :: Target     = Waffles
ParseLine :: AddCombatAction :: Value_Type = heal
ParseLine :: (04:49:38)  Log Stopped
.ctor :: (04:49:38)  Log Stopped
ParseLine :: (04:49:38) CLC LogFile Stop :: .\LogFiles\Input\Combat1.log.txt
.ctor :: (04:49:38) CLC LogFile Stop :: .\LogFiles\Input\Combat1.log.txt
.ctor :: RegEx Match :: (04:49:38) CLC LogFile Stop :: .\LogFiles\Input\Combat1.log.txt
.ctor :: LogFile Action - Stop :: Ending Combat
.ctor :: RegEx Match :: Valid      = False
.ctor :: RegEx Match :: Time       = 04:49:38
.ctor :: RegEx Match :: Source     = CLC
.ctor :: RegEx Match :: Ability    = 
.ctor :: RegEx Match :: Target     = 
.ctor :: RegEx Match :: Value      = 0
.ctor :: RegEx Match :: Value_Type = LogFile
.ctor :: RegEx Match :: Event_Type = Stop
.ctor :: RegEx Match :: Event_Deta = .\LogFiles\Input\Combat1.log.txt
.ctor :: RegEx Match :: RegExIndx  = 0
.ctor :: RegEx Match :: RegExDesc  = CLC Event :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>CLC) (?<type>.*) (?<event_type>.*) \:\: (?<event_detail>.*)
DeInitPlugin :: DeInitPlugin !!!!
DeInitPlugin :: RegEx Use :: 2 :: CLC Event :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>CLC) (?<type>.*) (?<event_type>.*) \:\: (?<event_detail>.*)
DeInitPlugin :: RegEx Use :: 0 :: Heal Apos:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*'+.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points\.
DeInitPlugin :: RegEx Use :: 889 :: Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
DeInitPlugin :: RegEx Use :: 62 :: Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
DeInitPlugin :: RegEx Use :: 0 :: Drain you - Vamp Kiss :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*'+.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*)[\.!]
DeInitPlugin :: RegEx Use :: 0 :: Drain - Needs Of the One :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*)[\.!]
DeInitPlugin :: RegEx Use :: 0 :: DMG - Call the Sky's Fury :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>Call the Sky.*) (?<type>.{3,8})s (?<target>.*) for (?<value>\d*) .*[\.!]
DeInitPlugin :: RegEx Use :: 0 :: DMG - Saint Malorn's Wrath :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>\w*)[r's]* (?<ability>Saint.*'.*) (?<type>.{3,8})s (?<target>.*) for (?<value>\d*) .*[\.!]
DeInitPlugin :: RegEx Use :: 221 :: Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
DeInitPlugin :: RegEx Use :: 342 :: Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
DeInitPlugin :: RegEx Use :: 0 :: Hit You :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)s (?<target>.*) for (?<value>\d*) .*[\.!]
DeInitPlugin :: RegEx Use :: 0 :: Spell Hit You :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>take) (?<value>\d*) .* from (?<source>.*)[\.!]
DeInitPlugin :: RegEx Use :: 0 :: Proc Dmg - You :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>[The]*) (?<ability>.*) (?<type>.*)s (?<target>.*) for (?<value>\d*) .*[\.!]
DeInitPlugin :: RegEx Use :: 0 :: Proc Dmg :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<type>.*) (?<ability>.*)s (?<target>.*) for (?<value>\d*) .*!
DeInitPlugin :: RegEx Use :: 0 :: Bleed Dmg :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) takes? (?<value>\d*) .*(?<source>damage) from (?<type>.*)ing[\.!]
DeInitPlugin :: RegEx Use :: 100 :: Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
DeInitPlugin :: RegEx Use :: 8 :: You Block :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>block) (?<source>.*)'s .*[\.!]
DeInitPlugin :: RegEx Use :: 22 :: Parry :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>parr)[yies]+ (?<source>.*)'s .*[\.!]
DeInitPlugin :: RegEx Use :: 0 :: Dodge :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>dodge)s? (?<source>.*?)[r's]+.*[\.!]
DeInitPlugin :: RegEx Use :: 6 :: Shadow Mantle :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) [areis]+ (?<type>surround)ed by a (?<source>.*)[\.!]
DeInitPlugin :: RegEx Use :: 0 :: Blind :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>kick[s]? dirt) .* (?<target>\w*)[r's]+ .*[\.!]
DeInitPlugin :: RegEx Use :: 0 :: Use power - enter :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>enter)s? [\Wa]?(?<ability>.*)[\.!]
DeInitPlugin :: RegEx Use :: 819 :: Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
DeInitPlugin :: RegEx Use :: 14 :: Use power -- assume :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>assume)s? [\Wa]?(?<ability>.*)[\.!]
DeInitPlugin :: RegEx Use :: 3 :: Use power -- use :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>use)s? [\Wa]?(?<ability>.*)[\.!]
DeInitPlugin :: RegEx Use :: 0 :: Use power -- execute :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>execute)s? [\Wa]?(?<ability>.*)[\.!]
DeInitPlugin :: RegEx Use :: 31 :: Taunt :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<target>.*) (?<type>[atck]*)s? (?<source>.*)
DeInitPlugin :: RegEx Use :: 120 :: Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
InitPlugin :: InitPlugin !!!!
InitPlugin :: Version  :: 0.0.7.0
InitPlugin :: DateTime :: 11/5/2023 05:05:39 AM
DeInitPlugin :: DeInitPlugin !!!!
DeInitPlugin :: RegEx Use :: 0 :: CLC Event :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>CLC) (?<type>.*) (?<event_type>.*) \:\: (?<event_detail>.*)
DeInitPlugin :: RegEx Use :: 0 :: Heal Apos:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*'+.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points\.
DeInitPlugin :: RegEx Use :: 0 :: Heal :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>heal)s (?<target>.*) for (?<value>\d*) points.
DeInitPlugin :: RegEx Use :: 0 :: Drain :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*) with(?<ability>.*)[\.!]
DeInitPlugin :: RegEx Use :: 0 :: Drain you - Vamp Kiss :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*'+.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*)[\.!]
DeInitPlugin :: RegEx Use :: 0 :: Drain - Needs Of the One :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.*)s (?<value>\d*) points of [helthman]* from (?<target>.*)[\.!]
DeInitPlugin :: RegEx Use :: 0 :: DMG - Call the Sky's Fury :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>Call the Sky.*) (?<type>.{3,8})s (?<target>.*) for (?<value>\d*) .*[\.!]
DeInitPlugin :: RegEx Use :: 0 :: DMG - Saint Malorn's Wrath :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>\w*)[r's]* (?<ability>Saint.*'.*) (?<type>.{3,8})s (?<target>.*) for (?<value>\d*) .*[\.!]
DeInitPlugin :: RegEx Use :: 0 :: Dmg melee - hit :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)[s]? (?<target>.*) for (?<value>\d*) .*[\.!]
DeInitPlugin :: RegEx Use :: 0 :: Dmg spell RtL:: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<ability>.*) (?<type>.{3,11}?)s (?<target>.*) for (?<value>\d*) .*[\.!]
DeInitPlugin :: RegEx Use :: 0 :: Hit You :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>hit)s (?<target>.*) for (?<value>\d*) .*[\.!]
DeInitPlugin :: RegEx Use :: 0 :: Spell Hit You :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>take) (?<value>\d*) .* from (?<source>.*)[\.!]
DeInitPlugin :: RegEx Use :: 0 :: Proc Dmg - You :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>[The]*) (?<ability>.*) (?<type>.*)s (?<target>.*) for (?<value>\d*) .*[\.!]
DeInitPlugin :: RegEx Use :: 0 :: Proc Dmg :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*)'s (?<type>.*) (?<ability>.*)s (?<target>.*) for (?<value>\d*) .*!
DeInitPlugin :: RegEx Use :: 0 :: Bleed Dmg :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) takes? (?<value>\d*) .*(?<source>damage) from (?<type>.*)ing[\.!]
DeInitPlugin :: RegEx Use :: 0 :: Miss Melee  :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>miss)[es]* (?<target>.*)[\.!]
DeInitPlugin :: RegEx Use :: 0 :: You Block :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>block) (?<source>.*)'s .*[\.!]
DeInitPlugin :: RegEx Use :: 0 :: Parry :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>parr)[yies]+ (?<source>.*)'s .*[\.!]
DeInitPlugin :: RegEx Use :: 0 :: Dodge :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) (?<type>dodge)s? (?<source>.*?)[r's]+.*[\.!]
DeInitPlugin :: RegEx Use :: 0 :: Shadow Mantle :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<target>.*) [areis]+ (?<type>surround)ed by a (?<source>.*)[\.!]
DeInitPlugin :: RegEx Use :: 0 :: Blind :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*) (?<type>kick[s]? dirt) .* (?<target>\w*)[r's]+ .*[\.!]
DeInitPlugin :: RegEx Use :: 0 :: Use power - enter :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>enter)s? [\Wa]?(?<ability>.*)[\.!]
DeInitPlugin :: RegEx Use :: 0 :: Use power -- Cast :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>cast)s? [\Wa]?(?<ability>.*)[\.!]
DeInitPlugin :: RegEx Use :: 0 :: Use power -- assume :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>assume)s? [\Wa]?(?<ability>.*)[\.!]
DeInitPlugin :: RegEx Use :: 0 :: Use power -- use :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>use)s? [\Wa]?(?<ability>.*)[\.!]
DeInitPlugin :: RegEx Use :: 0 :: Use power -- execute :: \((?<time>\d*\:\d*\:\d*)\)\W*(?<source>.*?) (?<type>execute)s? [\Wa]?(?<ability>.*)[\.!]
DeInitPlugin :: RegEx Use :: 0 :: Taunt :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<target>.*) (?<type>[atck]*)s? (?<source>.*)
DeInitPlugin :: RegEx Use :: 0 :: Death :: \((?<time>\d*\:\d*\:\d*)\)\W*\[Combat\] Info\: (?<source>.*) [hasve]* (?<type>die).*!
